{"pageProps":{"userLanguage":"en","translations":{"en":{"pages":{"/system/getting-started-group":"Getting started","/system/getting-started":"Overview","/system/getting-started/installation":"Installation","/system/getting-started/usage":"Usage","/system/getting-started/the-sx-prop":"The sx prop","/system/getting-started/custom-components":"Custom components","/system/getting-started/support":"Support","/style-utilities":"Style utilities","/system/properties":"Properties","/system/borders":"Borders","/system/display":"Display","/system/flexbox":"Flexbox","/system/grid":"Grid","/system/palette":"Palette","/system/positions":"Positions","/system/shadows":"Shadows","/system/sizing":"Sizing","/system/spacing":"Spacing","/system/screen-readers":"Screen readers","/system/typography":"Typography","/system/styled":"styled","/system/react-":"Components","/system/react-box":"Box","/system/react-container":"Container","/system/react-grid":"Grid","/system/react-stack":"Stack","/system/migration":"Migration","/system/migration/migration-v5":"Migrating to v6","/system/experimental-api":"Experimental APIs","/system/experimental-api/configure-the-sx-prop":"Configure the sx prop","/system/experimental-api/css-theme-variables":"CSS Theme Variables","/system/styles":"Styles","/system/styles/basics":"Basics","/system/styles/advanced":"Advanced","/base-ui/getting-started-group":"Getting started","/base-ui/getting-started":"Overview","/base-ui/getting-started/quickstart":"Quickstart","/base-ui/getting-started/usage":"Usage","/base-ui/getting-started/customization":"Customization","/base-ui/getting-started/accessibility":"Accessibility","/base-ui/getting-started/roadmap":"Roadmap","/base-ui/getting-started/support":"Support","/base-ui/react-":"Components","/base-ui/all-components":"All components","inputs":"Inputs","/base-ui/react-autocomplete":"Autocomplete","/base-ui/react-button":"Button","/base-ui/react-checkbox":"Checkbox","/base-ui/react-input":"Input","/base-ui/react-number-input":"Number Input","/base-ui/react-radio-group":"Radio Group","/base-ui/react-rating":"Rating","/base-ui/react-select":"Select","/base-ui/react-slider":"Slider","/base-ui/react-switch":"Switch","/base-ui/react-toggle-button-group":"Toggle Button Group","data-display":"Data display","/base-ui/react-badge":"Badge","/base-ui/react-tooltip":"Tooltip","feedback":"Feedback","/base-ui/react-snackbar":"Snackbar","surfaces":"Surfaces","/base-ui/react-accordion":"Accordion","navigation":"Navigation","/base-ui/react-drawer":"Drawer","/base-ui/react-menu":"Menu","/base-ui/react-pagination":"Pagination","/base-ui/react-table-pagination":"Table Pagination","/base-ui/react-tabs":"Tabs","utils":"Utils","/base-ui/react-click-away-listener":"Click-Away Listener","/base-ui/react-focus-trap":"Focus Trap","/base-ui/react-form-control":"Form Control","/base-ui/react-modal":"Modal","/base-ui/react-no-ssr":"No-SSR","/base-ui/react-popper":"Popper","/base-ui/react-popup":"Popup","/base-ui/react-portal":"Portal","/base-ui/react-textarea-autosize":"Textarea Autosize","/base-ui/react-transitions":"Transitions","/base-ui/react-badge/components-api/#badge":"Badge","/base-ui/react-button/components-api/#button":"Button","/base-ui/react-click-away-listener/components-api/#click-away-listener":"ClickAwayListener","/base-ui/react-transitions/components-api/#css-animation":"CssAnimation","/base-ui/react-transitions/components-api/#css-transition":"CssTransition","/base-ui/react-menu/components-api/#dropdown":"Dropdown","/base-ui/react-focus-trap/components-api/#focus-trap":"FocusTrap","/base-ui/react-form-control/components-api/#form-control":"FormControl","/base-ui/react-input/components-api/#input":"Input","/base-ui/react-menu/components-api/#menu":"Menu","/base-ui/react-menu/components-api/#menu-button":"MenuButton","/base-ui/react-menu/components-api/#menu-item":"MenuItem","/base-ui/react-modal/components-api/#modal":"Modal","/base-ui/react-no-ssr/components-api/#no-ssr":"NoSsr","/base-ui/react-number-input/components-api/#number-input":"NumberInput","/base-ui/react-select/components-api/#option":"Option","/base-ui/react-select/components-api/#option-group":"OptionGroup","/base-ui/react-popper/components-api/#popper":"Popper","/base-ui/react-popup/components-api/#popup":"Popup","/base-ui/react-portal/components-api/#portal":"Portal","/base-ui/react-select/components-api/#select":"Select","/base-ui/react-slider/components-api/#slider":"Slider","/base-ui/react-snackbar/components-api/#snackbar":"Snackbar","/base-ui/react-switch/components-api/#switch":"Switch","/base-ui/react-tabs/components-api/#tab":"Tab","/base-ui/react-tabs/components-api/#tab-panel":"TabPanel","/base-ui/react-table-pagination/components-api/#table-pagination":"TablePagination","/base-ui/react-tabs/components-api/#tabs":"Tabs","/base-ui/react-tabs/components-api/#tabs-list":"TabsList","/base-ui/react-textarea-autosize/components-api/#textarea-autosize":"TextareaAutosize","/base-ui/react-autocomplete/hooks-api/#use-autocomplete":"useAutocomplete","/base-ui/react-badge/hooks-api/#use-badge":"useBadge","/base-ui/react-button/hooks-api/#use-button":"useButton","/base-ui/react-menu/hooks-api/#use-dropdown":"useDropdown","/base-ui/react-form-control/hooks-api/#use-form-control-context":"useFormControlContext","/base-ui/react-input/hooks-api/#use-input":"useInput","/base-ui/react-menu/hooks-api/#use-menu":"useMenu","/base-ui/react-menu/hooks-api/#use-menu-button":"useMenuButton","/base-ui/react-menu/hooks-api/#use-menu-item":"useMenuItem","/base-ui/react-menu/hooks-api/#use-menu-item-context-stabilizer":"useMenuItemContextStabilizer","/base-ui/react-modal/hooks-api/#use-modal":"useModal","/base-ui/react-number-input/hooks-api/#use-number-input":"useNumberInput","/base-ui/react-select/hooks-api/#use-option":"useOption","/base-ui/react-select/hooks-api/#use-option-context-stabilizer":"useOptionContextStabilizer","/base-ui/react-select/hooks-api/#use-select":"useSelect","/base-ui/react-slider/hooks-api/#use-slider":"useSlider","/base-ui/react-snackbar/hooks-api/#use-snackbar":"useSnackbar","/base-ui/react-switch/hooks-api/#use-switch":"useSwitch","/base-ui/react-tabs/hooks-api/#use-tab":"useTab","/base-ui/react-tabs/hooks-api/#use-tab-panel":"useTabPanel","/base-ui/react-tabs/hooks-api/#use-tabs":"useTabs","/base-ui/react-tabs/hooks-api/#use-tabs-list":"useTabsList","/base-ui/react-transitions/hooks-api/#use-transition-state-manager":"useTransitionStateManager","/base-ui/react-transitions/hooks-api/#use-transition-trigger":"useTransitionTrigger","/base-ui/guides":"How-to guides","/base-ui/guides/working-with-tailwind-css":"Working with TailwindÂ CSS","/base-ui/guides/overriding-component-structure":"Overriding component structure","/base-ui/guides/next-js-app-router":"Next.js App Router","/material-ui/getting-started-group":"Getting started","/material-ui/getting-started":"Overview","/material-ui/getting-started/installation":"Installation","/material-ui/getting-started/usage":"Usage","/material-ui/getting-started/example-projects":"Example projects","/material-ui/getting-started/templates":"Templates","/material-ui/getting-started/learn":"Learn","/material-ui/getting-started/design-resources":"Design resources","/material-ui/getting-started/faq":"FAQs","/material-ui/getting-started/supported-components":"Supported components","/material-ui/getting-started/supported-platforms":"Supported platforms","/material-ui/getting-started/support":"Support","/material-ui/react-":"Components","/material-ui/all-components":"All components","/material-ui/react-autocomplete":"Autocomplete","/material-ui/react-button":"Button","/material-ui/react-button-group":"Button Group","/material-ui/react-checkbox":"Checkbox","/material-ui/react-floating-action-button":"Floating Action Button","/material-ui/react-radio-button":"Radio Group","/material-ui/react-rating":"Rating","/material-ui/react-select":"Select","/material-ui/react-slider":"Slider","/material-ui/react-switch":"Switch","/material-ui/react-text-field":"Text Field","/material-ui/react-transfer-list":"Transfer List","/material-ui/react-toggle-button":"Toggle Button","/material-ui/react-avatar":"Avatar","/material-ui/react-badge":"Badge","/material-ui/react-chip":"Chip","/material-ui/react-divider":"Divider","/material-ui/icons":"Icons","/material-ui/material-icons":"Material Icons","/material-ui/react-list":"List","/material-ui/react-table":"Table","/material-ui/react-tooltip":"Tooltip","/material-ui/react-typography":"Typography","/material-ui/react-alert":"Alert","/material-ui/react-backdrop":"Backdrop","/material-ui/react-dialog":"Dialog","/material-ui/react-progress":"Progress","/material-ui/react-skeleton":"Skeleton","/material-ui/react-snackbar":"Snackbar","/material-ui/react-accordion":"Accordion","/material-ui/react-app-bar":"App Bar","/material-ui/react-card":"Card","/material-ui/react-paper":"Paper","/material-ui/react-bottom-navigation":"Bottom Navigation","/material-ui/react-breadcrumbs":"Breadcrumbs","/material-ui/react-drawer":"Drawer","/material-ui/react-link":"Link","/material-ui/react-menu":"Menu","/material-ui/react-pagination":"Pagination","/material-ui/react-speed-dial":"Speed Dial","/material-ui/react-stepper":"Stepper","/material-ui/react-tabs":"Tabs","layout":"Layout","/material-ui/react-box":"Box","/material-ui/react-container":"Container","/material-ui/react-grid":"Grid","/material-ui/react-grid2":"Grid v2","/material-ui/react-stack":"Stack","/material-ui/react-image-list":"Image List","/material-ui/react-hidden":"Hidden","/material-ui/react-click-away-listener":"Click-Away Listener","/material-ui/react-css-baseline":"CSS Baseline","/material-ui/react-modal":"Modal","/material-ui/react-no-ssr":"No SSR","/material-ui/react-popover":"Popover","/material-ui/react-popper":"Popper","/material-ui/react-portal":"Portal","/material-ui/react-textarea-autosize":"Textarea Autosize","/material-ui/transitions":"Transitions","/material-ui/react-use-media-query":"useMediaQuery","MUIÂ X":"MUIÂ X","lab":"Lab","/material-ui/about-the-lab":"About the lab ð§ª","/material-ui/react-masonry":"Masonry","/material-ui/react-timeline":"Timeline","/material-ui/customization":"Customization","/material-ui/customization/how-to-customize":"How to customize","/material-ui/customization/dark-mode":"Dark mode","/material-ui/customization/color":"Color","/material-ui/customization/right-to-left":"Right-to-left","/material-ui/customization/shadow-dom":"Shadow DOM","/material-ui/customization/theme":"Theme","/material-ui/customization/default-theme":"Default theme viewer","/material-ui/customization/theming":"Customizing the theme","/material-ui/customization/creating-themed-components":"Creating themed components","/material-ui/customization/theme-components":"Components","tokens":"Tokens","/material-ui/customization/palette":"Palette","/material-ui/customization/typography":"Typography","/material-ui/customization/spacing":"Spacing","/material-ui/customization/breakpoints":"Breakpoints","/material-ui/customization/density":"Density","/material-ui/customization/z-index":"z-index","/material-ui/customization/transitions":"Transitions","/material-ui/customization/css-variables":"Css variables","/material-ui/customization/css-theme-variables/overview":"Overview","/material-ui/customization/css-theme-variables/usage":"Usage","/material-ui/customization/css-theme-variables/configuration":"Configuration","/material-ui/guides":"How-to guides","/material-ui/guides/minimizing-bundle-size":"Minimizing bundle size","/material-ui/guides/server-rendering":"Server rendering","/material-ui/guides/responsive-ui":"Responsive UI","/material-ui/guides/testing":"Testing","/material-ui/guides/localization":"Localization","/material-ui/guides/typescript":"TypeScript","/material-ui/guides/composition":"Composition","/material-ui/guides/content-security-policy":"Content Security Policy","/material-ui/integrations":"Integrations","/material-ui/integrations/nextjs":"Next.js integration","/material-ui/integrations/routing":"Routing libraries","/material-ui/integrations/styled-components":"Usage with styled-components","/material-ui/integrations/interoperability":"Style library interoperability","/material-ui/integrations/theme-scoping":"Theme scoping","/material-ui/experimental-api":"Experimental APIs","/material-ui/experimental-api/classname-generator":"ClassName generator","/material-ui/migration":"Migration","/material-ui/migration/migrating-from-deprecated-apis":"Migrating from deprecated APIs","/material-ui/migration/migration-grid-v2":"Migrating to Grid v2","/material-ui/migration/pickers-migration":"Migration from @material-ui/pickers","Upgrade to v6":"Upgrade to v6","/material-ui/migration/migration-v5":"Migrating to v6","/material-ui/migration/migration-css-theme-variables":"Migrating to CSS theme variables","Upgrade to v5":"Upgrade to v5","/material-ui/migration/migration-v4":"Migrating to v5: getting started","/material-ui/migration/v5-style-changes":"Breaking changes: style and theme","/material-ui/migration/v5-component-changes":"Breaking changes: components","/material-ui/migration/migrating-from-jss":"Migrating from JSS (optional)","/material-ui/migration/troubleshooting":"Troubleshooting","Earlier versions":"Earlier versions","/material-ui/migration/migration-v3":"Migration from v3 to v4","/material-ui/migration/migration-v0x":"Migration from v0.x to v1","/material-ui/discover-more":"Discover more","/material-ui/discover-more/showcase":"Showcase","/material-ui/discover-more/related-projects":"Related projects","/material-ui/discover-more/roadmap":"Roadmap","/material-ui/discover-more/backers":"Sponsors and Backers","/material-ui/discover-more/vision":"Vision","/material-ui/discover-more/changelog":"Changelog","/material-ui/design-resources":"Design resources","/material-ui/design-resources/material-ui-for-figma":"Figma Design Kit","/material-ui/design-resources/material-ui-sync":"Figma Sync plugin","https://mui.com/store/?utm_source=docs&utm_medium=referral&utm_campaign=sidenav":"Template store","/joy-ui/getting-started-group":"Getting started","/joy-ui/getting-started":"Overview","/joy-ui/getting-started/installation":"Installation","/joy-ui/getting-started/usage":"Usage","/joy-ui/getting-started/tutorial":"Tutorial","/joy-ui/getting-started/templates":"Templates","/joy-ui/getting-started/roadmap":"Roadmap","/joy-ui/getting-started/support":"Support","main-features":"Main features","/joy-ui/main-features/global-variants":"Global variants","/joy-ui/main-features/color-inversion":"Color inversion","/joy-ui/main-features/automatic-adjustment":"Automatic adjustment","/joy-ui/main-features/dark-mode-optimization":"Dark mode optimization","/joy-ui/react-":"Components","/joy-ui/react-autocomplete":"Autocomplete","/joy-ui/react-button":"Button","/joy-ui/react-button-group":"Button Group","/joy-ui/react-checkbox":"Checkbox","/joy-ui/react-input":"Input","/joy-ui/react-radio-button":"Radio Button","/joy-ui/react-select":"Select","/joy-ui/react-slider":"Slider","/joy-ui/react-switch":"Switch","/joy-ui/react-textarea":"Textarea","/joy-ui/react-text-field":"Text Field","/joy-ui/react-toggle-button-group":"Toggle Button Group","/joy-ui/react-aspect-ratio":"Aspect Ratio","/joy-ui/react-avatar":"Avatar","/joy-ui/react-badge":"Badge","/joy-ui/react-chip":"Chip","/joy-ui/react-divider":"Divider","/joy-ui/react-list":"List","/joy-ui/react-table":"Table","/joy-ui/react-tooltip":"Tooltip","/joy-ui/react-typography":"Typography","/joy-ui/react-alert":"Alert","/joy-ui/react-circular-progress":"Circular Progress","/joy-ui/react-linear-progress":"Linear Progress","/joy-ui/react-modal":"Modal","/joy-ui/react-skeleton":"Skeleton","/joy-ui/react-snackbar":"Snackbar","/joy-ui/react-accordion":"Accordion","/joy-ui/react-card":"Card","/joy-ui/react-sheet":"Sheet","/joy-ui/react-breadcrumbs":"Breadcrumbs","/joy-ui/react-drawer":"Drawer","/joy-ui/react-link":"Link","/joy-ui/react-menu":"Menu","/joy-ui/react-stepper":"Stepper","/joy-ui/react-tabs":"Tabs","/joy-ui/react-box":"Box","/joy-ui/react-grid":"Grid","/joy-ui/react-stack":"Stack","/joy-ui/react-css-baseline":"CSS Baseline","/joy-ui/customization":"Customization","/joy-ui/customization/approaches":"Approaches","Theme":"Theme","/joy-ui/customization/theme-colors":"Colors","/joy-ui/customization/theme-shadow":"Shadow","/joy-ui/customization/theme-typography":"Typography","/joy-ui/customization/themed-components":"Components","Guides":"Guides","/joy-ui/customization/dark-mode":"Dark mode","/joy-ui/customization/using-css-variables":"Using CSS variables","/joy-ui/customization/creating-themed-components":"Creating themed components","/joy-ui/customization/overriding-component-structure":"Overriding the component structure","/joy-ui/customization/right-to-left":"Right-to-left support","Tools":"Tools","/joy-ui/customization/default-theme-viewer":"Default theme viewer","/joy-ui/customization/theme-builder":"Theme builder","/joy-ui/integrations":"Integrations","/joy-ui/integrations/next-js-app-router":"Next.js App Router","/joy-ui/integrations/material-ui":"Usage with Material UI","/joy-ui/integrations/icon-libraries":"Using other icon libraries","/joy-ui/migration":"Migration","/joy-ui/migration/migrating-default-theme":"Migrating the default theme"}}},"componentsApiDescriptions":{"Slider":{"en":{"componentDescription":"","propDescriptions":{"aria-label":{"description":"The label of the slider."},"aria-labelledby":{"description":"The id of the element containing a label for the slider."},"aria-valuetext":{"description":"A string value that provides a user-friendly name for the current value of the slider."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableSwap":{"description":"If <code>true</code>, the active thumb doesn&#39;t swap when moving pointer over a thumb while dragging another thumb."},"getAriaLabel":{"description":"Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider. This is important for screen reader users.","typeDescriptions":{"index":"The thumb label&#39;s index to format."}},"getAriaValueText":{"description":"Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider. This is important for screen reader users.","typeDescriptions":{"value":"The thumb label&#39;s value to format.","index":"The thumb label&#39;s index to format."}},"isRtl":{"description":"If <code>true</code> the Slider will be rendered right-to-left (with the lowest value on the right-hand side)."},"marks":{"description":"Marks indicate predetermined values to which the user can move the slider. If <code>true</code> the marks are spaced according the value of the <code>step</code> prop. If an array, it should contain objects with <code>value</code> and an optional <code>label</code> keys."},"max":{"description":"The maximum allowed value of the slider. Should not be equal to min."},"min":{"description":"The minimum allowed value of the slider. Should not be equal to max."},"name":{"description":"Name attribute of the hidden <code>input</code> element."},"onChange":{"description":"Callback function that is fired when the slider&#39;s value changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (any). <strong>Warning</strong>: This is a generic event not a change event.","value":"The new value.","activeThumb":"Index of the currently moved thumb."}},"onChangeCommitted":{"description":"Callback function that is fired when the <code>mouseup</code> is triggered.","typeDescriptions":{"event":"The event source of the callback. <strong>Warning</strong>: This is a generic event not a change event.","value":"The new value."}},"orientation":{"description":"The component orientation."},"scale":{"description":"A transformation function, to change the scale of the slider."},"shiftStep":{"description":"The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down."},"slotProps":{"description":"The props used for each slot inside the Slider."},"slots":{"description":"The components used for each slot inside the Slider. Either a string to use a HTML element or a component."},"step":{"description":"The granularity with which the slider can step through values. (A &quot;discrete&quot; slider.) The <code>min</code> prop serves as the origin for the valid values. We recommend (max - min) to be evenly divisible by the step.<br>When step is <code>null</code>, the thumb can only be slid onto marks provided with the <code>marks</code> prop."},"tabIndex":{"description":"Tab index attribute of the hidden <code>input</code> element."},"track":{"description":"<p>The track presentation:</p>\n<ul>\n<li><code>normal</code> the track will render a bar representing the slider value.</li>\n<li><code>inverted</code> the track will render a bar representing the remaining slider value.</li>\n<li><code>false</code> the track will render without a bar.</li>\n</ul>\n"},"value":{"description":"The value of the slider. For ranged sliders, provide an array with two values."},"valueLabelFormat":{"description":"The format function the value label&#39;s value.<br>When a function is provided, it should have the following signature:<br>- {number} value The value label&#39;s value to format - {number} index The value label&#39;s index to format"}},"classDescriptions":{"active":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"it&#39;s active"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root and thumb element","conditions":"<code>disabled={true}</code>"},"dragging":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root","conditions":"a thumb is being dragged"},"focusVisible":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the thumb element","conditions":"keyboard focused"},"markActive":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the mark element","conditions":"active (depending on the value)"},"marked":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>marks</code> is provided with at least one label"},"markLabelActive":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the mark label element","conditions":"active (depending on the value)"},"trackFalse":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>track={false}</code>"},"trackInverted":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>track=\"inverted\"</code>"},"vertical":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>orientation=\"vertical\"</code>"}},"slotDescriptions":{"input":"The component that renders the input.","mark":"The component that renders the mark.","markLabel":"The component that renders the mark label.","rail":"The component that renders the rail.","root":"The component that renders the root.","thumb":"The component that renders the thumb.","track":"The component that renders the track.","valueLabel":"The component that renders the value label."}}}},"componentsApiPageContents":{"Slider":{"props":{"aria-label":{"type":{"name":"custom","description":"string"}},"aria-labelledby":{"type":{"name":"string"}},"aria-valuetext":{"type":{"name":"custom","description":"string"}},"defaultValue":{"type":{"name":"union","description":"Array&lt;number&gt;<br>&#124;&nbsp;number"}},"disabled":{"type":{"name":"bool"},"default":"false"},"disableSwap":{"type":{"name":"bool"},"default":"false"},"getAriaLabel":{"type":{"name":"func"},"signature":{"type":"function(index: number) => string","describedArgs":["index"]}},"getAriaValueText":{"type":{"name":"func"},"signature":{"type":"function(value: number, index: number) => string","describedArgs":["value","index"]}},"isRtl":{"type":{"name":"bool"},"default":"false"},"marks":{"type":{"name":"union","description":"Array&lt;{ label?: node, value: number }&gt;<br>&#124;&nbsp;bool"},"default":"false"},"max":{"type":{"name":"number"},"default":"100"},"min":{"type":{"name":"number"},"default":"0"},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: Event, value: number | Array<number>, activeThumb: number) => void","describedArgs":["event","value","activeThumb"]}},"onChangeCommitted":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent | Event, value: number | Array<number>) => void","describedArgs":["event","value"]}},"orientation":{"type":{"name":"enum","description":"'horizontal'<br>&#124;&nbsp;'vertical'"},"default":"'horizontal'"},"scale":{"type":{"name":"func"},"default":"function Identity(x) {\n  return x;\n}","signature":{"type":"function(x: any) => any","describedArgs":[]}},"shiftStep":{"type":{"name":"number"},"default":"10"},"slotProps":{"type":{"name":"shape","description":"{ input?: func<br>&#124;&nbsp;object, mark?: func<br>&#124;&nbsp;object, markLabel?: func<br>&#124;&nbsp;object, rail?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object, thumb?: func<br>&#124;&nbsp;object, track?: func<br>&#124;&nbsp;object, valueLabel?: any<br>&#124;&nbsp;func }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ input?: elementType, mark?: elementType, markLabel?: elementType, rail?: elementType, root?: elementType, thumb?: elementType, track?: elementType, valueLabel?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"step":{"type":{"name":"number"},"default":"1"},"tabIndex":{"type":{"name":"number"}},"track":{"type":{"name":"enum","description":"'inverted'<br>&#124;&nbsp;'normal'<br>&#124;&nbsp;false"},"default":"'normal'"},"value":{"type":{"name":"union","description":"Array&lt;number&gt;<br>&#124;&nbsp;number"}},"valueLabelFormat":{"type":{"name":"union","description":"func<br>&#124;&nbsp;string"},"default":"function Identity(x) {\n  return x;\n}"}},"name":"Slider","imports":["import { Slider } from '@mui/base/Slider';","import { Slider } from '@mui/base';"],"slots":[{"name":"root","description":"The component that renders the root.","default":"'span'","class":"base-Slider-root"},{"name":"track","description":"The component that renders the track.","default":"'span'","class":"base-Slider-track"},{"name":"rail","description":"The component that renders the rail.","default":"'span'","class":"base-Slider-rail"},{"name":"thumb","description":"The component that renders the thumb.","default":"'span'","class":"base-Slider-thumb"},{"name":"mark","description":"The component that renders the mark.","default":"'span'","class":"base-Slider-mark"},{"name":"markLabel","description":"The component that renders the mark label.","default":"'span'","class":"base-Slider-markLabel"},{"name":"valueLabel","description":"The component that renders the value label.","class":null},{"name":"input","description":"The component that renders the input.","default":"'input'","class":null}],"classes":[{"key":"active","className":"base--active","description":"State class applied to the thumb element if it's active.","isGlobal":true},{"key":"disabled","className":"base--disabled","description":"State class applied to the root and thumb element if `disabled={true}`.","isGlobal":true},{"key":"dragging","className":"base-Slider-dragging","description":"State class applied to the root if a thumb is being dragged.","isGlobal":false},{"key":"focusVisible","className":"base--focusVisible","description":"State class applied to the thumb element if keyboard focused.","isGlobal":true},{"key":"markActive","className":"base-Slider-markActive","description":"Class name applied to the mark element if active (depending on the value).","isGlobal":false},{"key":"marked","className":"base-Slider-marked","description":"Class name applied to the root element if `marks` is provided with at least one label.","isGlobal":false},{"key":"markLabelActive","className":"base-Slider-markLabelActive","description":"Class name applied to the mark label element if active (depending on the value).","isGlobal":false},{"key":"trackFalse","className":"base-Slider-trackFalse","description":"Class name applied to the root element if `track={false}`.","isGlobal":false},{"key":"trackInverted","className":"base-Slider-trackInverted","description":"Class name applied to the root element if `track=\"inverted\"`.","isGlobal":false},{"key":"vertical","className":"base-Slider-vertical","description":"Class name applied to the root element if `orientation=\"vertical\"`.","isGlobal":false}],"spread":true,"muiName":"Slider","forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-base/src/Slider/Slider.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-slider/\">Slider</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{"useSlider":{"en":{"hookDescription":"","parametersDescriptions":{"aria-labelledby":{"description":"The id of the element containing a label for the slider."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableSwap":{"description":"If <code>true</code>, the active thumb doesn&#39;t swap when moving pointer over a thumb while dragging another thumb."},"isRtl":{"description":"If <code>true</code> the Slider will be rendered right-to-left (with the lowest value on the right-hand side)."},"marks":{"description":"Marks indicate predetermined values to which the user can move the slider. If <code>true</code> the marks are spaced according the value of the <code>step</code> prop. If an array, it should contain objects with <code>value</code> and an optional <code>label</code> keys."},"max":{"description":"The maximum allowed value of the slider. Should not be equal to min."},"min":{"description":"The minimum allowed value of the slider. Should not be equal to max."},"name":{"description":"Name attribute of the hidden <code>input</code> element."},"onChange":{"description":"Callback function that is fired when the slider&#39;s value changed."},"onChangeCommitted":{"description":"Callback function that is fired when the <code>mouseup</code> is triggered."},"orientation":{"description":"The component orientation."},"rootRef":{"description":"The ref attached to the root of the Slider."},"scale":{"description":"A transformation function, to change the scale of the slider."},"shiftStep":{"description":"The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down."},"step":{"description":"The granularity with which the slider can step through values. (A &quot;discrete&quot; slider.) The <code>min</code> prop serves as the origin for the valid values. We recommend (max - min) to be evenly divisible by the step.<br>When step is <code>null</code>, the thumb can only be slid onto marks provided with the <code>marks</code> prop."},"tabIndex":{"description":"Tab index attribute of the hidden <code>input</code> element."},"value":{"description":"The value of the slider. For ranged sliders, provide an array with two values."}},"returnValueDescriptions":{"active":{"description":"The active index of the slider."},"axis":{"description":"The orientation of the slider."},"axisProps":{"description":"Returns the <code>offset</code> and <code>leap</code> methods to calculate the positioning styles based on the slider axis."},"dragging":{"description":"If <code>true</code>, the slider is being dragged."},"focusedThumbIndex":{"description":"The index of the thumb which is focused on the slider."},"getHiddenInputProps":{"description":"Resolver for the hidden input slot&#39;s props."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"getThumbProps":{"description":"Resolver for the thumb slot&#39;s props."},"getThumbStyle":{"description":"Resolver for the thumb slot&#39;s style prop."},"marks":{"description":"The marks of the slider. Marks indicate predetermined values to which the user can move the slider."},"open":{"description":"The thumb index for the current value when in hover state."},"range":{"description":"If <code>true</code>, the slider is a range slider when the <code>value</code> prop passed is an array."},"rootRef":{"description":"Ref to the root slot&#39;s DOM node."},"trackLeap":{"description":"The track leap for the current value of the slider."},"trackOffset":{"description":"The track offset for the current value of the slider."},"values":{"description":"The possible values of the slider."}}}}},"hooksApiPageContents":{"useSlider":{"parameters":{"aria-labelledby":{"type":{"name":"string","description":"string"}},"defaultValue":{"type":{"name":"number | ReadonlyArray&lt;number&gt;","description":"number | ReadonlyArray&lt;number&gt;"}},"disabled":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"disableSwap":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"isRtl":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"marks":{"type":{"name":"boolean | ReadonlyArray&lt;Mark&gt;","description":"boolean | ReadonlyArray&lt;Mark&gt;"},"default":"false"},"max":{"type":{"name":"number","description":"number"},"default":"100"},"min":{"type":{"name":"number","description":"number"},"default":"0"},"name":{"type":{"name":"string","description":"string"}},"onChange":{"type":{"name":"(event: Event, value: number | number[], activeThumb: number) =&gt; void","description":"(event: Event, value: number | number[], activeThumb: number) =&gt; void"}},"onChangeCommitted":{"type":{"name":"(event: React.SyntheticEvent | Event, value: number | number[]) =&gt; void","description":"(event: React.SyntheticEvent | Event, value: number | number[]) =&gt; void"}},"orientation":{"type":{"name":"&#39;horizontal&#39; | &#39;vertical&#39;","description":"&#39;horizontal&#39; | &#39;vertical&#39;"},"default":"'horizontal'"},"rootRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"}},"scale":{"type":{"name":"(value: number) =&gt; number","description":"(value: number) =&gt; number"},"default":"function Identity(x) {\nreturn x;\n}"},"shiftStep":{"type":{"name":"number","description":"number"},"default":"10"},"step":{"type":{"name":"number | null","description":"number | null"},"default":"1"},"tabIndex":{"type":{"name":"number","description":"number"}},"value":{"type":{"name":"number | ReadonlyArray&lt;number&gt;","description":"number | ReadonlyArray&lt;number&gt;"}}},"returnValue":{"active":{"type":{"name":"number","description":"number"},"required":true},"axis":{"type":{"name":"Axis","description":"Axis"},"required":true},"axisProps":{"type":{"name":"{ [key in Axis]: AxisProps&lt;key&gt; }","description":"{ [key in Axis]: AxisProps&lt;key&gt; }"},"required":true},"dragging":{"type":{"name":"boolean","description":"boolean"},"required":true},"focusedThumbIndex":{"type":{"name":"number","description":"number"},"required":true},"getHiddenInputProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSliderHiddenInputProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSliderHiddenInputProps&lt;ExternalProps&gt;"},"required":true},"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSliderRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSliderRootSlotProps&lt;ExternalProps&gt;"},"required":true},"getThumbProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSliderThumbSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSliderThumbSlotProps&lt;ExternalProps&gt;"},"required":true},"getThumbStyle":{"type":{"name":"(index: number) =&gt; object","description":"(index: number) =&gt; object"},"required":true},"marks":{"type":{"name":"Mark[]","description":"Mark[]"},"required":true},"open":{"type":{"name":"number","description":"number"},"required":true},"range":{"type":{"name":"boolean","description":"boolean"},"required":true},"rootRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"trackLeap":{"type":{"name":"number","description":"number"},"required":true},"trackOffset":{"type":{"name":"number","description":"number"},"required":true},"values":{"type":{"name":"number[]","description":"number[]"},"required":true}},"name":"useSlider","filename":"/packages/mui-base/src/useSlider/useSlider.ts","imports":["import { useSlider } from '@mui/base/useSlider';","import { useSlider } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-slider/#hook\">Slider</a></li></ul>"}}},"__N_SSG":true}