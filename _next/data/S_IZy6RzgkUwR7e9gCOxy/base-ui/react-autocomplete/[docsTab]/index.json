{"pageProps":{"userLanguage":"en","translations":{"en":{"pages":{"/system/getting-started-group":"Getting started","/system/getting-started":"Overview","/system/getting-started/installation":"Installation","/system/getting-started/usage":"Usage","/system/getting-started/the-sx-prop":"The sx prop","/system/getting-started/custom-components":"Custom components","/system/getting-started/support":"Support","/style-utilities":"Style utilities","/system/properties":"Properties","/system/borders":"Borders","/system/display":"Display","/system/flexbox":"Flexbox","/system/grid":"Grid","/system/palette":"Palette","/system/positions":"Positions","/system/shadows":"Shadows","/system/sizing":"Sizing","/system/spacing":"Spacing","/system/screen-readers":"Screen readers","/system/typography":"Typography","/system/styled":"styled","/system/react-":"Components","/system/react-box":"Box","/system/react-container":"Container","/system/react-grid":"Grid","/system/react-stack":"Stack","/system/migration":"Migration","/system/migration/migration-v5":"Migrating to v6","/system/experimental-api":"Experimental APIs","/system/experimental-api/configure-the-sx-prop":"Configure the sx prop","/system/experimental-api/css-theme-variables":"CSS Theme Variables","/system/styles":"Styles","/system/styles/basics":"Basics","/system/styles/advanced":"Advanced","/base-ui/getting-started-group":"Getting started","/base-ui/getting-started":"Overview","/base-ui/getting-started/quickstart":"Quickstart","/base-ui/getting-started/usage":"Usage","/base-ui/getting-started/customization":"Customization","/base-ui/getting-started/accessibility":"Accessibility","/base-ui/getting-started/roadmap":"Roadmap","/base-ui/getting-started/support":"Support","/base-ui/react-":"Components","/base-ui/all-components":"All components","inputs":"Inputs","/base-ui/react-autocomplete":"Autocomplete","/base-ui/react-button":"Button","/base-ui/react-checkbox":"Checkbox","/base-ui/react-input":"Input","/base-ui/react-number-input":"Number Input","/base-ui/react-radio-group":"Radio Group","/base-ui/react-rating":"Rating","/base-ui/react-select":"Select","/base-ui/react-slider":"Slider","/base-ui/react-switch":"Switch","/base-ui/react-toggle-button-group":"Toggle Button Group","data-display":"Data display","/base-ui/react-badge":"Badge","/base-ui/react-tooltip":"Tooltip","feedback":"Feedback","/base-ui/react-snackbar":"Snackbar","surfaces":"Surfaces","/base-ui/react-accordion":"Accordion","navigation":"Navigation","/base-ui/react-drawer":"Drawer","/base-ui/react-menu":"Menu","/base-ui/react-pagination":"Pagination","/base-ui/react-table-pagination":"Table Pagination","/base-ui/react-tabs":"Tabs","utils":"Utils","/base-ui/react-click-away-listener":"Click-Away Listener","/base-ui/react-focus-trap":"Focus Trap","/base-ui/react-form-control":"Form Control","/base-ui/react-modal":"Modal","/base-ui/react-no-ssr":"No-SSR","/base-ui/react-popper":"Popper","/base-ui/react-popup":"Popup","/base-ui/react-portal":"Portal","/base-ui/react-textarea-autosize":"Textarea Autosize","/base-ui/react-transitions":"Transitions","/base-ui/react-badge/components-api/#badge":"Badge","/base-ui/react-button/components-api/#button":"Button","/base-ui/react-click-away-listener/components-api/#click-away-listener":"ClickAwayListener","/base-ui/react-transitions/components-api/#css-animation":"CssAnimation","/base-ui/react-transitions/components-api/#css-transition":"CssTransition","/base-ui/react-menu/components-api/#dropdown":"Dropdown","/base-ui/react-focus-trap/components-api/#focus-trap":"FocusTrap","/base-ui/react-form-control/components-api/#form-control":"FormControl","/base-ui/react-input/components-api/#input":"Input","/base-ui/react-menu/components-api/#menu":"Menu","/base-ui/react-menu/components-api/#menu-button":"MenuButton","/base-ui/react-menu/components-api/#menu-item":"MenuItem","/base-ui/react-modal/components-api/#modal":"Modal","/base-ui/react-no-ssr/components-api/#no-ssr":"NoSsr","/base-ui/react-number-input/components-api/#number-input":"NumberInput","/base-ui/react-select/components-api/#option":"Option","/base-ui/react-select/components-api/#option-group":"OptionGroup","/base-ui/react-popper/components-api/#popper":"Popper","/base-ui/react-popup/components-api/#popup":"Popup","/base-ui/react-portal/components-api/#portal":"Portal","/base-ui/react-select/components-api/#select":"Select","/base-ui/react-slider/components-api/#slider":"Slider","/base-ui/react-snackbar/components-api/#snackbar":"Snackbar","/base-ui/react-switch/components-api/#switch":"Switch","/base-ui/react-tabs/components-api/#tab":"Tab","/base-ui/react-tabs/components-api/#tab-panel":"TabPanel","/base-ui/react-table-pagination/components-api/#table-pagination":"TablePagination","/base-ui/react-tabs/components-api/#tabs":"Tabs","/base-ui/react-tabs/components-api/#tabs-list":"TabsList","/base-ui/react-textarea-autosize/components-api/#textarea-autosize":"TextareaAutosize","/base-ui/react-autocomplete/hooks-api/#use-autocomplete":"useAutocomplete","/base-ui/react-badge/hooks-api/#use-badge":"useBadge","/base-ui/react-button/hooks-api/#use-button":"useButton","/base-ui/react-menu/hooks-api/#use-dropdown":"useDropdown","/base-ui/react-form-control/hooks-api/#use-form-control-context":"useFormControlContext","/base-ui/react-input/hooks-api/#use-input":"useInput","/base-ui/react-menu/hooks-api/#use-menu":"useMenu","/base-ui/react-menu/hooks-api/#use-menu-button":"useMenuButton","/base-ui/react-menu/hooks-api/#use-menu-item":"useMenuItem","/base-ui/react-menu/hooks-api/#use-menu-item-context-stabilizer":"useMenuItemContextStabilizer","/base-ui/react-modal/hooks-api/#use-modal":"useModal","/base-ui/react-number-input/hooks-api/#use-number-input":"useNumberInput","/base-ui/react-select/hooks-api/#use-option":"useOption","/base-ui/react-select/hooks-api/#use-option-context-stabilizer":"useOptionContextStabilizer","/base-ui/react-select/hooks-api/#use-select":"useSelect","/base-ui/react-slider/hooks-api/#use-slider":"useSlider","/base-ui/react-snackbar/hooks-api/#use-snackbar":"useSnackbar","/base-ui/react-switch/hooks-api/#use-switch":"useSwitch","/base-ui/react-tabs/hooks-api/#use-tab":"useTab","/base-ui/react-tabs/hooks-api/#use-tab-panel":"useTabPanel","/base-ui/react-tabs/hooks-api/#use-tabs":"useTabs","/base-ui/react-tabs/hooks-api/#use-tabs-list":"useTabsList","/base-ui/react-transitions/hooks-api/#use-transition-state-manager":"useTransitionStateManager","/base-ui/react-transitions/hooks-api/#use-transition-trigger":"useTransitionTrigger","/base-ui/guides":"How-to guides","/base-ui/guides/working-with-tailwind-css":"Working with TailwindÂ CSS","/base-ui/guides/overriding-component-structure":"Overriding component structure","/base-ui/guides/next-js-app-router":"Next.js App Router","/material-ui/getting-started-group":"Getting started","/material-ui/getting-started":"Overview","/material-ui/getting-started/installation":"Installation","/material-ui/getting-started/usage":"Usage","/material-ui/getting-started/example-projects":"Example projects","/material-ui/getting-started/templates":"Templates","/material-ui/getting-started/learn":"Learn","/material-ui/getting-started/design-resources":"Design resources","/material-ui/getting-started/faq":"FAQs","/material-ui/getting-started/supported-components":"Supported components","/material-ui/getting-started/supported-platforms":"Supported platforms","/material-ui/getting-started/support":"Support","/material-ui/react-":"Components","/material-ui/all-components":"All components","/material-ui/react-autocomplete":"Autocomplete","/material-ui/react-button":"Button","/material-ui/react-button-group":"Button Group","/material-ui/react-checkbox":"Checkbox","/material-ui/react-floating-action-button":"Floating Action Button","/material-ui/react-radio-button":"Radio Group","/material-ui/react-rating":"Rating","/material-ui/react-select":"Select","/material-ui/react-slider":"Slider","/material-ui/react-switch":"Switch","/material-ui/react-text-field":"Text Field","/material-ui/react-transfer-list":"Transfer List","/material-ui/react-toggle-button":"Toggle Button","/material-ui/react-avatar":"Avatar","/material-ui/react-badge":"Badge","/material-ui/react-chip":"Chip","/material-ui/react-divider":"Divider","/material-ui/icons":"Icons","/material-ui/material-icons":"Material Icons","/material-ui/react-list":"List","/material-ui/react-table":"Table","/material-ui/react-tooltip":"Tooltip","/material-ui/react-typography":"Typography","/material-ui/react-alert":"Alert","/material-ui/react-backdrop":"Backdrop","/material-ui/react-dialog":"Dialog","/material-ui/react-progress":"Progress","/material-ui/react-skeleton":"Skeleton","/material-ui/react-snackbar":"Snackbar","/material-ui/react-accordion":"Accordion","/material-ui/react-app-bar":"App Bar","/material-ui/react-card":"Card","/material-ui/react-paper":"Paper","/material-ui/react-bottom-navigation":"Bottom Navigation","/material-ui/react-breadcrumbs":"Breadcrumbs","/material-ui/react-drawer":"Drawer","/material-ui/react-link":"Link","/material-ui/react-menu":"Menu","/material-ui/react-pagination":"Pagination","/material-ui/react-speed-dial":"Speed Dial","/material-ui/react-stepper":"Stepper","/material-ui/react-tabs":"Tabs","layout":"Layout","/material-ui/react-box":"Box","/material-ui/react-container":"Container","/material-ui/react-grid":"Grid","/material-ui/react-grid2":"Grid v2","/material-ui/react-stack":"Stack","/material-ui/react-image-list":"Image List","/material-ui/react-hidden":"Hidden","/material-ui/react-click-away-listener":"Click-Away Listener","/material-ui/react-css-baseline":"CSS Baseline","/material-ui/react-modal":"Modal","/material-ui/react-no-ssr":"No SSR","/material-ui/react-popover":"Popover","/material-ui/react-popper":"Popper","/material-ui/react-portal":"Portal","/material-ui/react-textarea-autosize":"Textarea Autosize","/material-ui/transitions":"Transitions","/material-ui/react-use-media-query":"useMediaQuery","MUIÂ X":"MUIÂ X","lab":"Lab","/material-ui/about-the-lab":"About the lab ð§ª","/material-ui/react-masonry":"Masonry","/material-ui/react-timeline":"Timeline","/material-ui/customization":"Customization","/material-ui/customization/how-to-customize":"How to customize","/material-ui/customization/dark-mode":"Dark mode","/material-ui/customization/color":"Color","/material-ui/customization/right-to-left":"Right-to-left","/material-ui/customization/shadow-dom":"Shadow DOM","/material-ui/customization/theme":"Theme","/material-ui/customization/default-theme":"Default theme viewer","/material-ui/customization/theming":"Customizing the theme","/material-ui/customization/creating-themed-components":"Creating themed components","/material-ui/customization/theme-components":"Components","tokens":"Tokens","/material-ui/customization/palette":"Palette","/material-ui/customization/typography":"Typography","/material-ui/customization/spacing":"Spacing","/material-ui/customization/breakpoints":"Breakpoints","/material-ui/customization/density":"Density","/material-ui/customization/z-index":"z-index","/material-ui/customization/transitions":"Transitions","/material-ui/customization/css-variables":"Css variables","/material-ui/customization/css-theme-variables/overview":"Overview","/material-ui/customization/css-theme-variables/usage":"Usage","/material-ui/customization/css-theme-variables/configuration":"Configuration","/material-ui/guides":"How-to guides","/material-ui/guides/minimizing-bundle-size":"Minimizing bundle size","/material-ui/guides/server-rendering":"Server rendering","/material-ui/guides/responsive-ui":"Responsive UI","/material-ui/guides/testing":"Testing","/material-ui/guides/localization":"Localization","/material-ui/guides/typescript":"TypeScript","/material-ui/guides/composition":"Composition","/material-ui/guides/content-security-policy":"Content Security Policy","/material-ui/integrations":"Integrations","/material-ui/integrations/nextjs":"Next.js integration","/material-ui/integrations/routing":"Routing libraries","/material-ui/integrations/styled-components":"Usage with styled-components","/material-ui/integrations/interoperability":"Style library interoperability","/material-ui/integrations/theme-scoping":"Theme scoping","/material-ui/experimental-api":"Experimental APIs","/material-ui/experimental-api/classname-generator":"ClassName generator","/material-ui/migration":"Migration","/material-ui/migration/migrating-from-deprecated-apis":"Migrating from deprecated APIs","/material-ui/migration/migration-grid-v2":"Migrating to Grid v2","/material-ui/migration/pickers-migration":"Migration from @material-ui/pickers","Upgrade to v6":"Upgrade to v6","/material-ui/migration/migration-v5":"Migrating to v6","/material-ui/migration/migration-css-theme-variables":"Migrating to CSS theme variables","Upgrade to v5":"Upgrade to v5","/material-ui/migration/migration-v4":"Migrating to v5: getting started","/material-ui/migration/v5-style-changes":"Breaking changes: style and theme","/material-ui/migration/v5-component-changes":"Breaking changes: components","/material-ui/migration/migrating-from-jss":"Migrating from JSS (optional)","/material-ui/migration/troubleshooting":"Troubleshooting","Earlier versions":"Earlier versions","/material-ui/migration/migration-v3":"Migration from v3 to v4","/material-ui/migration/migration-v0x":"Migration from v0.x to v1","/material-ui/discover-more":"Discover more","/material-ui/discover-more/showcase":"Showcase","/material-ui/discover-more/related-projects":"Related projects","/material-ui/discover-more/roadmap":"Roadmap","/material-ui/discover-more/backers":"Sponsors and Backers","/material-ui/discover-more/vision":"Vision","/material-ui/discover-more/changelog":"Changelog","/material-ui/design-resources":"Design resources","/material-ui/design-resources/material-ui-for-figma":"Figma Design Kit","/material-ui/design-resources/material-ui-sync":"Figma Sync plugin","https://mui.com/store/?utm_source=docs&utm_medium=referral&utm_campaign=sidenav":"Template store","/joy-ui/getting-started-group":"Getting started","/joy-ui/getting-started":"Overview","/joy-ui/getting-started/installation":"Installation","/joy-ui/getting-started/usage":"Usage","/joy-ui/getting-started/tutorial":"Tutorial","/joy-ui/getting-started/templates":"Templates","/joy-ui/getting-started/roadmap":"Roadmap","/joy-ui/getting-started/support":"Support","main-features":"Main features","/joy-ui/main-features/global-variants":"Global variants","/joy-ui/main-features/color-inversion":"Color inversion","/joy-ui/main-features/automatic-adjustment":"Automatic adjustment","/joy-ui/main-features/dark-mode-optimization":"Dark mode optimization","/joy-ui/react-":"Components","/joy-ui/react-autocomplete":"Autocomplete","/joy-ui/react-button":"Button","/joy-ui/react-button-group":"Button Group","/joy-ui/react-checkbox":"Checkbox","/joy-ui/react-input":"Input","/joy-ui/react-radio-button":"Radio Button","/joy-ui/react-select":"Select","/joy-ui/react-slider":"Slider","/joy-ui/react-switch":"Switch","/joy-ui/react-textarea":"Textarea","/joy-ui/react-text-field":"Text Field","/joy-ui/react-toggle-button-group":"Toggle Button Group","/joy-ui/react-aspect-ratio":"Aspect Ratio","/joy-ui/react-avatar":"Avatar","/joy-ui/react-badge":"Badge","/joy-ui/react-chip":"Chip","/joy-ui/react-divider":"Divider","/joy-ui/react-list":"List","/joy-ui/react-table":"Table","/joy-ui/react-tooltip":"Tooltip","/joy-ui/react-typography":"Typography","/joy-ui/react-alert":"Alert","/joy-ui/react-circular-progress":"Circular Progress","/joy-ui/react-linear-progress":"Linear Progress","/joy-ui/react-modal":"Modal","/joy-ui/react-skeleton":"Skeleton","/joy-ui/react-snackbar":"Snackbar","/joy-ui/react-accordion":"Accordion","/joy-ui/react-card":"Card","/joy-ui/react-sheet":"Sheet","/joy-ui/react-breadcrumbs":"Breadcrumbs","/joy-ui/react-drawer":"Drawer","/joy-ui/react-link":"Link","/joy-ui/react-menu":"Menu","/joy-ui/react-stepper":"Stepper","/joy-ui/react-tabs":"Tabs","/joy-ui/react-box":"Box","/joy-ui/react-grid":"Grid","/joy-ui/react-stack":"Stack","/joy-ui/react-css-baseline":"CSS Baseline","/joy-ui/customization":"Customization","/joy-ui/customization/approaches":"Approaches","Theme":"Theme","/joy-ui/customization/theme-colors":"Colors","/joy-ui/customization/theme-shadow":"Shadow","/joy-ui/customization/theme-typography":"Typography","/joy-ui/customization/themed-components":"Components","Guides":"Guides","/joy-ui/customization/dark-mode":"Dark mode","/joy-ui/customization/using-css-variables":"Using CSS variables","/joy-ui/customization/creating-themed-components":"Creating themed components","/joy-ui/customization/overriding-component-structure":"Overriding the component structure","/joy-ui/customization/right-to-left":"Right-to-left support","Tools":"Tools","/joy-ui/customization/default-theme-viewer":"Default theme viewer","/joy-ui/customization/theme-builder":"Theme builder","/joy-ui/integrations":"Integrations","/joy-ui/integrations/next-js-app-router":"Next.js App Router","/joy-ui/integrations/material-ui":"Usage with Material UI","/joy-ui/integrations/icon-libraries":"Using other icon libraries","/joy-ui/migration":"Migration","/joy-ui/migration/migrating-default-theme":"Migrating the default theme"}}},"componentsApiDescriptions":{},"componentsApiPageContents":{},"hooksApiDescriptions":{"useAutocomplete":{"en":{"hookDescription":"","parametersDescriptions":{"autoComplete":{"description":"If <code>true</code>, the portion of the selected suggestion that the user hasn&#39;t typed, known as the completion string, appears inline after the input cursor in the textbox. The inline completion string is visually highlighted and has a selected state."},"autoHighlight":{"description":"If <code>true</code>, the first option is automatically highlighted."},"autoSelect":{"description":"If <code>true</code>, the selected option becomes the value of the input when the Autocomplete loses focus unless the user chooses a different option or changes the character string in the input.<br>When using the <code>freeSolo</code> mode, the typed value will be the input value if the Autocomplete loses focus without highlighting an option."},"blurOnSelect":{"description":"<p>Control if the input should be blurred when an option is selected:</p>\n<ul>\n<li><code>false</code> the input is not blurred.</li>\n<li><code>true</code> the input is always blurred.</li>\n<li><code>touch</code> the input is blurred after a touch event.</li>\n<li><code>mouse</code> the input is blurred after a mouse event.</li>\n</ul>\n"},"clearOnBlur":{"description":"If <code>true</code>, the input&#39;s text is cleared on blur if no value is selected.<br>Set it to <code>true</code> if you want to help the user enter a new value. Set it to <code>false</code> if you want to help the user resume their search."},"clearOnEscape":{"description":"If <code>true</code>, clear all values when the user presses escape and the popup is closed."},"componentName":{"description":"The component name that is using this hook. Used for warnings."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disableClearable":{"description":"If <code>true</code>, the input can&#39;t be cleared."},"disableCloseOnSelect":{"description":"If <code>true</code>, the popup won&#39;t close when a value is selected."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disabledItemsFocusable":{"description":"If <code>true</code>, will allow focus on disabled items."},"disableListWrap":{"description":"If <code>true</code>, the list box in the popup will not wrap focus."},"filterOptions":{"description":"A function that determines the filtered options to be rendered on search."},"filterSelectedOptions":{"description":"If <code>true</code>, hide the selected options from the list box."},"freeSolo":{"description":"If <code>true</code>, the Autocomplete is free solo, meaning that the user input is not bound to provided options."},"getOptionDisabled":{"description":"Used to determine the disabled state for a given option."},"getOptionKey":{"description":"Used to determine the key for a given option. This can be useful when the labels of options are not unique (since labels are used as keys by default)."},"getOptionLabel":{"description":"Used to determine the string value for a given option. It&#39;s used to fill the input (and the list box options if <code>renderOption</code> is not provided).<br>If used in free solo mode, it must accept both the type of the options and a string."},"groupBy":{"description":"If provided, the options will be grouped under the returned string. The groupBy value is also used as the text for group headings when <code>renderGroup</code> is not provided."},"handleHomeEndKeys":{"description":"If <code>true</code>, the component handles the &quot;Home&quot; and &quot;End&quot; keys when the popup is open. It should move focus to the first option and last option, respectively."},"id":{"description":"This prop is used to help implement the accessibility logic. If you don&#39;t provide an id it will fall back to a randomly generated one."},"includeInputInList":{"description":"If <code>true</code>, the highlight can move to the input."},"inputValue":{"description":"The input value."},"isOptionEqualToValue":{"description":"Used to determine if the option represents the given value. Uses strict equality by default. â ï¸ Both arguments need to be handled, an option can only match with one value."},"multiple":{"description":"If <code>true</code>, <code>value</code> must be an array and the menu will support multiple selections."},"onChange":{"description":"Callback fired when the value changes."},"onClose":{"description":"Callback fired when the popup requests to be closed. Use in controlled mode (see open)."},"onHighlightChange":{"description":"Callback fired when the highlight option changes."},"onInputChange":{"description":"Callback fired when the input value changes."},"onOpen":{"description":"Callback fired when the popup requests to be opened. Use in controlled mode (see open)."},"open":{"description":"If <code>true</code>, the component is shown."},"openOnFocus":{"description":"If <code>true</code>, the popup will open on input focus."},"options":{"description":"Array of options."},"readOnly":{"description":"If <code>true</code>, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted."},"selectOnFocus":{"description":"If <code>true</code>, the input&#39;s text is selected on focus. It helps the user clear the selected value."},"value":{"description":"The value of the autocomplete.<br>The value must have reference equality with the option in order to be selected. You can customize the equality behavior with the <code>isOptionEqualToValue</code> prop."}},"returnValueDescriptions":{"anchorEl":{"description":"An HTML element that is used to set the position of the component."},"dirty":{"description":"If <code>true</code>, the component input has some values."},"expanded":{"description":"If <code>true</code>, the listbox is being displayed."},"focused":{"description":"If <code>true</code>, the component is focused."},"focusedTag":{"description":"Index of the focused tag for the component."},"getClearProps":{"description":"Resolver for the <code>clear</code> button element&#39;s props."},"getInputLabelProps":{"description":"Resolver for the input label element&#39;s props."},"getInputProps":{"description":"Resolver for the input element&#39;s props."},"getListboxProps":{"description":"Resolver for the listbox component&#39;s props."},"getOptionProps":{"description":"Resolver for the rendered option element&#39;s props."},"getPopupIndicatorProps":{"description":"Resolver for the popup icon&#39;s props."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"getTagProps":{"description":"A tag props getter."},"groupedOptions":{"description":"The options to render. It&#39;s either <code>Value[]</code> or <code>AutocompleteGroupedOption&lt;Value&gt;[]</code> if the groupBy prop is provided."},"id":{"description":"Id for the Autocomplete."},"inputValue":{"description":"The input value."},"popupOpen":{"description":"If <code>true</code>, the popup is open on the component."},"setAnchorEl":{"description":"Setter for the component <code>anchorEl</code>."},"value":{"description":"The value of the autocomplete."}}}}},"hooksApiPageContents":{"useAutocomplete":{"parameters":{"options":{"type":{"name":"ReadonlyArray&lt;Value&gt;","description":"ReadonlyArray&lt;Value&gt;"},"required":true},"autoComplete":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"autoHighlight":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"autoSelect":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"blurOnSelect":{"type":{"name":"&#39;touch&#39; | &#39;mouse&#39; | true | false","description":"&#39;touch&#39; | &#39;mouse&#39; | true | false"},"default":"false"},"clearOnBlur":{"type":{"name":"boolean","description":"boolean"},"default":"!props.freeSolo"},"clearOnEscape":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"componentName":{"type":{"name":"string","description":"string"}},"defaultValue":{"type":{"name":"AutocompleteValue&lt;Value, Multiple, DisableClearable, FreeSolo&gt;","description":"AutocompleteValue&lt;Value, Multiple, DisableClearable, FreeSolo&gt;"},"default":"props.multiple ? [] : null"},"disableClearable":{"type":{"name":"DisableClearable","description":"DisableClearable"},"default":"false"},"disableCloseOnSelect":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"disabled":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"disabledItemsFocusable":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"disableListWrap":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"filterOptions":{"type":{"name":"(options: Value[], state: FilterOptionsState&lt;Value&gt;) =&gt; Value[]","description":"(options: Value[], state: FilterOptionsState&lt;Value&gt;) =&gt; Value[]"},"default":"createFilterOptions()"},"filterSelectedOptions":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"freeSolo":{"type":{"name":"FreeSolo","description":"FreeSolo"},"default":"false"},"getOptionDisabled":{"type":{"name":"(option: Value) =&gt; boolean","description":"(option: Value) =&gt; boolean"}},"getOptionKey":{"type":{"name":"(option: Value | AutocompleteFreeSoloValueMapping&lt;FreeSolo&gt;) =&gt; string | number","description":"(option: Value | AutocompleteFreeSoloValueMapping&lt;FreeSolo&gt;) =&gt; string | number"}},"getOptionLabel":{"type":{"name":"(option: Value | AutocompleteFreeSoloValueMapping&lt;FreeSolo&gt;) =&gt; string","description":"(option: Value | AutocompleteFreeSoloValueMapping&lt;FreeSolo&gt;) =&gt; string"},"default":"(option) => option.label ?? option"},"groupBy":{"type":{"name":"(option: Value) =&gt; string","description":"(option: Value) =&gt; string"}},"handleHomeEndKeys":{"type":{"name":"boolean","description":"boolean"},"default":"!props.freeSolo"},"id":{"type":{"name":"string","description":"string"}},"includeInputInList":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"inputValue":{"type":{"name":"string","description":"string"}},"isOptionEqualToValue":{"type":{"name":"(option: Value, value: Value) =&gt; boolean","description":"(option: Value, value: Value) =&gt; boolean"}},"multiple":{"type":{"name":"Multiple","description":"Multiple"},"default":"false"},"onChange":{"type":{"name":"(event: React.SyntheticEvent, value: AutocompleteValue&lt;Value, Multiple, DisableClearable, FreeSolo&gt;, reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails&lt;Value&gt;) =&gt; void","description":"(event: React.SyntheticEvent, value: AutocompleteValue&lt;Value, Multiple, DisableClearable, FreeSolo&gt;, reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails&lt;Value&gt;) =&gt; void"}},"onClose":{"type":{"name":"(event: React.SyntheticEvent, reason: AutocompleteCloseReason) =&gt; void","description":"(event: React.SyntheticEvent, reason: AutocompleteCloseReason) =&gt; void"}},"onHighlightChange":{"type":{"name":"(event: React.SyntheticEvent, option: Value | null, reason: AutocompleteHighlightChangeReason) =&gt; void","description":"(event: React.SyntheticEvent, option: Value | null, reason: AutocompleteHighlightChangeReason) =&gt; void"}},"onInputChange":{"type":{"name":"(event: React.SyntheticEvent, value: string, reason: AutocompleteInputChangeReason) =&gt; void","description":"(event: React.SyntheticEvent, value: string, reason: AutocompleteInputChangeReason) =&gt; void"}},"onOpen":{"type":{"name":"(event: React.SyntheticEvent) =&gt; void","description":"(event: React.SyntheticEvent) =&gt; void"}},"open":{"type":{"name":"boolean","description":"boolean"}},"openOnFocus":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"readOnly":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"selectOnFocus":{"type":{"name":"boolean","description":"boolean"},"default":"!props.freeSolo"},"unstable_classNamePrefix":{"type":{"name":"string","description":"string"},"default":"'Mui'"},"unstable_isActiveElementInListbox":{"type":{"name":"(listbox: React.RefObject&lt;HTMLElement&gt;) =&gt; boolean","description":"(listbox: React.RefObject&lt;HTMLElement&gt;) =&gt; boolean"}},"value":{"type":{"name":"AutocompleteValue&lt;Value, Multiple, DisableClearable, FreeSolo&gt;","description":"AutocompleteValue&lt;Value, Multiple, DisableClearable, FreeSolo&gt;"}}},"returnValue":{"anchorEl":{"type":{"name":"null | HTMLElement","description":"null | HTMLElement"},"required":true},"dirty":{"type":{"name":"boolean","description":"boolean"},"required":true},"expanded":{"type":{"name":"boolean","description":"boolean"},"required":true},"focused":{"type":{"name":"boolean","description":"boolean"},"required":true},"focusedTag":{"type":{"name":"number","description":"number"},"required":true},"getClearProps":{"type":{"name":"() =&gt; React.HTMLAttributes&lt;HTMLButtonElement&gt;","description":"() =&gt; React.HTMLAttributes&lt;HTMLButtonElement&gt;"},"required":true},"getInputLabelProps":{"type":{"name":"() =&gt; Omit&lt;React.HTMLAttributes&lt;HTMLLabelElement&gt;, &#39;color&#39;&gt;","description":"() =&gt; Omit&lt;React.HTMLAttributes&lt;HTMLLabelElement&gt;, &#39;color&#39;&gt;"},"required":true},"getInputProps":{"type":{"name":"() =&gt; React.InputHTMLAttributes&lt;HTMLInputElement&gt; &amp; {\n  ref: React.Ref&lt;HTMLInputElement&gt;\n}","description":"() =&gt; React.InputHTMLAttributes&lt;HTMLInputElement&gt; &amp; {\n  ref: React.Ref&lt;HTMLInputElement&gt;\n}"},"required":true},"getListboxProps":{"type":{"name":"() =&gt; React.HTMLAttributes&lt;HTMLUListElement&gt;","description":"() =&gt; React.HTMLAttributes&lt;HTMLUListElement&gt;"},"required":true},"getOptionProps":{"type":{"name":"(renderedOption: UseAutocompleteRenderedOption&lt;Value&gt;) =&gt; React.HTMLAttributes&lt;HTMLLIElement&gt; &amp; { key: any }","description":"(renderedOption: UseAutocompleteRenderedOption&lt;Value&gt;) =&gt; React.HTMLAttributes&lt;HTMLLIElement&gt; &amp; { key: any }"},"required":true},"getPopupIndicatorProps":{"type":{"name":"() =&gt; React.HTMLAttributes&lt;HTMLButtonElement&gt;","description":"() =&gt; React.HTMLAttributes&lt;HTMLButtonElement&gt;"},"required":true},"getRootProps":{"type":{"name":"(externalProps?: any) =&gt; React.HTMLAttributes&lt;HTMLDivElement&gt;","description":"(externalProps?: any) =&gt; React.HTMLAttributes&lt;HTMLDivElement&gt;"},"required":true},"getTagProps":{"type":{"name":"AutocompleteGetTagProps","description":"AutocompleteGetTagProps"},"required":true},"groupedOptions":{"type":{"name":"Value[] | Array&lt;AutocompleteGroupedOption&lt;Value&gt;&gt;","description":"Value[] | Array&lt;AutocompleteGroupedOption&lt;Value&gt;&gt;"},"required":true},"id":{"type":{"name":"string","description":"string"},"required":true},"inputValue":{"type":{"name":"string","description":"string"},"required":true},"popupOpen":{"type":{"name":"boolean","description":"boolean"},"required":true},"setAnchorEl":{"type":{"name":"() =&gt; void","description":"() =&gt; void"},"required":true},"value":{"type":{"name":"AutocompleteValue&lt;Value, Multiple, DisableClearable, FreeSolo&gt;","description":"AutocompleteValue&lt;Value, Multiple, DisableClearable, FreeSolo&gt;"},"required":true}},"name":"useAutocomplete","filename":"/packages/mui-base/src/useAutocomplete/useAutocomplete.js","imports":["import { useAutocomplete } from '@mui/base/useAutocomplete';","import { useAutocomplete } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-autocomplete/#hook\">Autocomplete</a></li></ul>"}}},"__N_SSG":true}