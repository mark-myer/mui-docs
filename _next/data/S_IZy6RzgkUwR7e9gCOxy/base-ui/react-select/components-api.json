{"pageProps":{"userLanguage":"en","translations":{"en":{"pages":{"/system/getting-started-group":"Getting started","/system/getting-started":"Overview","/system/getting-started/installation":"Installation","/system/getting-started/usage":"Usage","/system/getting-started/the-sx-prop":"The sx prop","/system/getting-started/custom-components":"Custom components","/system/getting-started/support":"Support","/style-utilities":"Style utilities","/system/properties":"Properties","/system/borders":"Borders","/system/display":"Display","/system/flexbox":"Flexbox","/system/grid":"Grid","/system/palette":"Palette","/system/positions":"Positions","/system/shadows":"Shadows","/system/sizing":"Sizing","/system/spacing":"Spacing","/system/screen-readers":"Screen readers","/system/typography":"Typography","/system/styled":"styled","/system/react-":"Components","/system/react-box":"Box","/system/react-container":"Container","/system/react-grid":"Grid","/system/react-stack":"Stack","/system/migration":"Migration","/system/migration/migration-v5":"Migrating to v6","/system/experimental-api":"Experimental APIs","/system/experimental-api/configure-the-sx-prop":"Configure the sx prop","/system/experimental-api/css-theme-variables":"CSS Theme Variables","/system/styles":"Styles","/system/styles/basics":"Basics","/system/styles/advanced":"Advanced","/base-ui/getting-started-group":"Getting started","/base-ui/getting-started":"Overview","/base-ui/getting-started/quickstart":"Quickstart","/base-ui/getting-started/usage":"Usage","/base-ui/getting-started/customization":"Customization","/base-ui/getting-started/accessibility":"Accessibility","/base-ui/getting-started/roadmap":"Roadmap","/base-ui/getting-started/support":"Support","/base-ui/react-":"Components","/base-ui/all-components":"All components","inputs":"Inputs","/base-ui/react-autocomplete":"Autocomplete","/base-ui/react-button":"Button","/base-ui/react-checkbox":"Checkbox","/base-ui/react-input":"Input","/base-ui/react-number-input":"Number Input","/base-ui/react-radio-group":"Radio Group","/base-ui/react-rating":"Rating","/base-ui/react-select":"Select","/base-ui/react-slider":"Slider","/base-ui/react-switch":"Switch","/base-ui/react-toggle-button-group":"Toggle Button Group","data-display":"Data display","/base-ui/react-badge":"Badge","/base-ui/react-tooltip":"Tooltip","feedback":"Feedback","/base-ui/react-snackbar":"Snackbar","surfaces":"Surfaces","/base-ui/react-accordion":"Accordion","navigation":"Navigation","/base-ui/react-drawer":"Drawer","/base-ui/react-menu":"Menu","/base-ui/react-pagination":"Pagination","/base-ui/react-table-pagination":"Table Pagination","/base-ui/react-tabs":"Tabs","utils":"Utils","/base-ui/react-click-away-listener":"Click-Away Listener","/base-ui/react-focus-trap":"Focus Trap","/base-ui/react-form-control":"Form Control","/base-ui/react-modal":"Modal","/base-ui/react-no-ssr":"No-SSR","/base-ui/react-popper":"Popper","/base-ui/react-popup":"Popup","/base-ui/react-portal":"Portal","/base-ui/react-textarea-autosize":"Textarea Autosize","/base-ui/react-transitions":"Transitions","/base-ui/react-badge/components-api/#badge":"Badge","/base-ui/react-button/components-api/#button":"Button","/base-ui/react-click-away-listener/components-api/#click-away-listener":"ClickAwayListener","/base-ui/react-transitions/components-api/#css-animation":"CssAnimation","/base-ui/react-transitions/components-api/#css-transition":"CssTransition","/base-ui/react-menu/components-api/#dropdown":"Dropdown","/base-ui/react-focus-trap/components-api/#focus-trap":"FocusTrap","/base-ui/react-form-control/components-api/#form-control":"FormControl","/base-ui/react-input/components-api/#input":"Input","/base-ui/react-menu/components-api/#menu":"Menu","/base-ui/react-menu/components-api/#menu-button":"MenuButton","/base-ui/react-menu/components-api/#menu-item":"MenuItem","/base-ui/react-modal/components-api/#modal":"Modal","/base-ui/react-no-ssr/components-api/#no-ssr":"NoSsr","/base-ui/react-number-input/components-api/#number-input":"NumberInput","/base-ui/react-select/components-api/#option":"Option","/base-ui/react-select/components-api/#option-group":"OptionGroup","/base-ui/react-popper/components-api/#popper":"Popper","/base-ui/react-popup/components-api/#popup":"Popup","/base-ui/react-portal/components-api/#portal":"Portal","/base-ui/react-select/components-api/#select":"Select","/base-ui/react-slider/components-api/#slider":"Slider","/base-ui/react-snackbar/components-api/#snackbar":"Snackbar","/base-ui/react-switch/components-api/#switch":"Switch","/base-ui/react-tabs/components-api/#tab":"Tab","/base-ui/react-tabs/components-api/#tab-panel":"TabPanel","/base-ui/react-table-pagination/components-api/#table-pagination":"TablePagination","/base-ui/react-tabs/components-api/#tabs":"Tabs","/base-ui/react-tabs/components-api/#tabs-list":"TabsList","/base-ui/react-textarea-autosize/components-api/#textarea-autosize":"TextareaAutosize","/base-ui/react-autocomplete/hooks-api/#use-autocomplete":"useAutocomplete","/base-ui/react-badge/hooks-api/#use-badge":"useBadge","/base-ui/react-button/hooks-api/#use-button":"useButton","/base-ui/react-menu/hooks-api/#use-dropdown":"useDropdown","/base-ui/react-form-control/hooks-api/#use-form-control-context":"useFormControlContext","/base-ui/react-input/hooks-api/#use-input":"useInput","/base-ui/react-menu/hooks-api/#use-menu":"useMenu","/base-ui/react-menu/hooks-api/#use-menu-button":"useMenuButton","/base-ui/react-menu/hooks-api/#use-menu-item":"useMenuItem","/base-ui/react-menu/hooks-api/#use-menu-item-context-stabilizer":"useMenuItemContextStabilizer","/base-ui/react-modal/hooks-api/#use-modal":"useModal","/base-ui/react-number-input/hooks-api/#use-number-input":"useNumberInput","/base-ui/react-select/hooks-api/#use-option":"useOption","/base-ui/react-select/hooks-api/#use-option-context-stabilizer":"useOptionContextStabilizer","/base-ui/react-select/hooks-api/#use-select":"useSelect","/base-ui/react-slider/hooks-api/#use-slider":"useSlider","/base-ui/react-snackbar/hooks-api/#use-snackbar":"useSnackbar","/base-ui/react-switch/hooks-api/#use-switch":"useSwitch","/base-ui/react-tabs/hooks-api/#use-tab":"useTab","/base-ui/react-tabs/hooks-api/#use-tab-panel":"useTabPanel","/base-ui/react-tabs/hooks-api/#use-tabs":"useTabs","/base-ui/react-tabs/hooks-api/#use-tabs-list":"useTabsList","/base-ui/react-transitions/hooks-api/#use-transition-state-manager":"useTransitionStateManager","/base-ui/react-transitions/hooks-api/#use-transition-trigger":"useTransitionTrigger","/base-ui/guides":"How-to guides","/base-ui/guides/working-with-tailwind-css":"Working with TailwindÂ CSS","/base-ui/guides/overriding-component-structure":"Overriding component structure","/base-ui/guides/next-js-app-router":"Next.js App Router","/material-ui/getting-started-group":"Getting started","/material-ui/getting-started":"Overview","/material-ui/getting-started/installation":"Installation","/material-ui/getting-started/usage":"Usage","/material-ui/getting-started/example-projects":"Example projects","/material-ui/getting-started/templates":"Templates","/material-ui/getting-started/learn":"Learn","/material-ui/getting-started/design-resources":"Design resources","/material-ui/getting-started/faq":"FAQs","/material-ui/getting-started/supported-components":"Supported components","/material-ui/getting-started/supported-platforms":"Supported platforms","/material-ui/getting-started/support":"Support","/material-ui/react-":"Components","/material-ui/all-components":"All components","/material-ui/react-autocomplete":"Autocomplete","/material-ui/react-button":"Button","/material-ui/react-button-group":"Button Group","/material-ui/react-checkbox":"Checkbox","/material-ui/react-floating-action-button":"Floating Action Button","/material-ui/react-radio-button":"Radio Group","/material-ui/react-rating":"Rating","/material-ui/react-select":"Select","/material-ui/react-slider":"Slider","/material-ui/react-switch":"Switch","/material-ui/react-text-field":"Text Field","/material-ui/react-transfer-list":"Transfer List","/material-ui/react-toggle-button":"Toggle Button","/material-ui/react-avatar":"Avatar","/material-ui/react-badge":"Badge","/material-ui/react-chip":"Chip","/material-ui/react-divider":"Divider","/material-ui/icons":"Icons","/material-ui/material-icons":"Material Icons","/material-ui/react-list":"List","/material-ui/react-table":"Table","/material-ui/react-tooltip":"Tooltip","/material-ui/react-typography":"Typography","/material-ui/react-alert":"Alert","/material-ui/react-backdrop":"Backdrop","/material-ui/react-dialog":"Dialog","/material-ui/react-progress":"Progress","/material-ui/react-skeleton":"Skeleton","/material-ui/react-snackbar":"Snackbar","/material-ui/react-accordion":"Accordion","/material-ui/react-app-bar":"App Bar","/material-ui/react-card":"Card","/material-ui/react-paper":"Paper","/material-ui/react-bottom-navigation":"Bottom Navigation","/material-ui/react-breadcrumbs":"Breadcrumbs","/material-ui/react-drawer":"Drawer","/material-ui/react-link":"Link","/material-ui/react-menu":"Menu","/material-ui/react-pagination":"Pagination","/material-ui/react-speed-dial":"Speed Dial","/material-ui/react-stepper":"Stepper","/material-ui/react-tabs":"Tabs","layout":"Layout","/material-ui/react-box":"Box","/material-ui/react-container":"Container","/material-ui/react-grid":"Grid","/material-ui/react-grid2":"Grid v2","/material-ui/react-stack":"Stack","/material-ui/react-image-list":"Image List","/material-ui/react-hidden":"Hidden","/material-ui/react-click-away-listener":"Click-Away Listener","/material-ui/react-css-baseline":"CSS Baseline","/material-ui/react-modal":"Modal","/material-ui/react-no-ssr":"No SSR","/material-ui/react-popover":"Popover","/material-ui/react-popper":"Popper","/material-ui/react-portal":"Portal","/material-ui/react-textarea-autosize":"Textarea Autosize","/material-ui/transitions":"Transitions","/material-ui/react-use-media-query":"useMediaQuery","MUIÂ X":"MUIÂ X","lab":"Lab","/material-ui/about-the-lab":"About the lab ð§ª","/material-ui/react-masonry":"Masonry","/material-ui/react-timeline":"Timeline","/material-ui/customization":"Customization","/material-ui/customization/how-to-customize":"How to customize","/material-ui/customization/dark-mode":"Dark mode","/material-ui/customization/color":"Color","/material-ui/customization/right-to-left":"Right-to-left","/material-ui/customization/shadow-dom":"Shadow DOM","/material-ui/customization/theme":"Theme","/material-ui/customization/default-theme":"Default theme viewer","/material-ui/customization/theming":"Customizing the theme","/material-ui/customization/creating-themed-components":"Creating themed components","/material-ui/customization/theme-components":"Components","tokens":"Tokens","/material-ui/customization/palette":"Palette","/material-ui/customization/typography":"Typography","/material-ui/customization/spacing":"Spacing","/material-ui/customization/breakpoints":"Breakpoints","/material-ui/customization/density":"Density","/material-ui/customization/z-index":"z-index","/material-ui/customization/transitions":"Transitions","/material-ui/customization/css-variables":"Css variables","/material-ui/customization/css-theme-variables/overview":"Overview","/material-ui/customization/css-theme-variables/usage":"Usage","/material-ui/customization/css-theme-variables/configuration":"Configuration","/material-ui/guides":"How-to guides","/material-ui/guides/minimizing-bundle-size":"Minimizing bundle size","/material-ui/guides/server-rendering":"Server rendering","/material-ui/guides/responsive-ui":"Responsive UI","/material-ui/guides/testing":"Testing","/material-ui/guides/localization":"Localization","/material-ui/guides/typescript":"TypeScript","/material-ui/guides/composition":"Composition","/material-ui/guides/content-security-policy":"Content Security Policy","/material-ui/integrations":"Integrations","/material-ui/integrations/nextjs":"Next.js integration","/material-ui/integrations/routing":"Routing libraries","/material-ui/integrations/styled-components":"Usage with styled-components","/material-ui/integrations/interoperability":"Style library interoperability","/material-ui/integrations/theme-scoping":"Theme scoping","/material-ui/experimental-api":"Experimental APIs","/material-ui/experimental-api/classname-generator":"ClassName generator","/material-ui/migration":"Migration","/material-ui/migration/migrating-from-deprecated-apis":"Migrating from deprecated APIs","/material-ui/migration/migration-grid-v2":"Migrating to Grid v2","/material-ui/migration/pickers-migration":"Migration from @material-ui/pickers","Upgrade to v6":"Upgrade to v6","/material-ui/migration/migration-v5":"Migrating to v6","/material-ui/migration/migration-css-theme-variables":"Migrating to CSS theme variables","Upgrade to v5":"Upgrade to v5","/material-ui/migration/migration-v4":"Migrating to v5: getting started","/material-ui/migration/v5-style-changes":"Breaking changes: style and theme","/material-ui/migration/v5-component-changes":"Breaking changes: components","/material-ui/migration/migrating-from-jss":"Migrating from JSS (optional)","/material-ui/migration/troubleshooting":"Troubleshooting","Earlier versions":"Earlier versions","/material-ui/migration/migration-v3":"Migration from v3 to v4","/material-ui/migration/migration-v0x":"Migration from v0.x to v1","/material-ui/discover-more":"Discover more","/material-ui/discover-more/showcase":"Showcase","/material-ui/discover-more/related-projects":"Related projects","/material-ui/discover-more/roadmap":"Roadmap","/material-ui/discover-more/backers":"Sponsors and Backers","/material-ui/discover-more/vision":"Vision","/material-ui/discover-more/changelog":"Changelog","/material-ui/design-resources":"Design resources","/material-ui/design-resources/material-ui-for-figma":"Figma Design Kit","/material-ui/design-resources/material-ui-sync":"Figma Sync plugin","https://mui.com/store/?utm_source=docs&utm_medium=referral&utm_campaign=sidenav":"Template store","/joy-ui/getting-started-group":"Getting started","/joy-ui/getting-started":"Overview","/joy-ui/getting-started/installation":"Installation","/joy-ui/getting-started/usage":"Usage","/joy-ui/getting-started/tutorial":"Tutorial","/joy-ui/getting-started/templates":"Templates","/joy-ui/getting-started/roadmap":"Roadmap","/joy-ui/getting-started/support":"Support","main-features":"Main features","/joy-ui/main-features/global-variants":"Global variants","/joy-ui/main-features/color-inversion":"Color inversion","/joy-ui/main-features/automatic-adjustment":"Automatic adjustment","/joy-ui/main-features/dark-mode-optimization":"Dark mode optimization","/joy-ui/react-":"Components","/joy-ui/react-autocomplete":"Autocomplete","/joy-ui/react-button":"Button","/joy-ui/react-button-group":"Button Group","/joy-ui/react-checkbox":"Checkbox","/joy-ui/react-input":"Input","/joy-ui/react-radio-button":"Radio Button","/joy-ui/react-select":"Select","/joy-ui/react-slider":"Slider","/joy-ui/react-switch":"Switch","/joy-ui/react-textarea":"Textarea","/joy-ui/react-text-field":"Text Field","/joy-ui/react-toggle-button-group":"Toggle Button Group","/joy-ui/react-aspect-ratio":"Aspect Ratio","/joy-ui/react-avatar":"Avatar","/joy-ui/react-badge":"Badge","/joy-ui/react-chip":"Chip","/joy-ui/react-divider":"Divider","/joy-ui/react-list":"List","/joy-ui/react-table":"Table","/joy-ui/react-tooltip":"Tooltip","/joy-ui/react-typography":"Typography","/joy-ui/react-alert":"Alert","/joy-ui/react-circular-progress":"Circular Progress","/joy-ui/react-linear-progress":"Linear Progress","/joy-ui/react-modal":"Modal","/joy-ui/react-skeleton":"Skeleton","/joy-ui/react-snackbar":"Snackbar","/joy-ui/react-accordion":"Accordion","/joy-ui/react-card":"Card","/joy-ui/react-sheet":"Sheet","/joy-ui/react-breadcrumbs":"Breadcrumbs","/joy-ui/react-drawer":"Drawer","/joy-ui/react-link":"Link","/joy-ui/react-menu":"Menu","/joy-ui/react-stepper":"Stepper","/joy-ui/react-tabs":"Tabs","/joy-ui/react-box":"Box","/joy-ui/react-grid":"Grid","/joy-ui/react-stack":"Stack","/joy-ui/react-css-baseline":"CSS Baseline","/joy-ui/customization":"Customization","/joy-ui/customization/approaches":"Approaches","Theme":"Theme","/joy-ui/customization/theme-colors":"Colors","/joy-ui/customization/theme-shadow":"Shadow","/joy-ui/customization/theme-typography":"Typography","/joy-ui/customization/themed-components":"Components","Guides":"Guides","/joy-ui/customization/dark-mode":"Dark mode","/joy-ui/customization/using-css-variables":"Using CSS variables","/joy-ui/customization/creating-themed-components":"Creating themed components","/joy-ui/customization/overriding-component-structure":"Overriding the component structure","/joy-ui/customization/right-to-left":"Right-to-left support","Tools":"Tools","/joy-ui/customization/default-theme-viewer":"Default theme viewer","/joy-ui/customization/theme-builder":"Theme builder","/joy-ui/integrations":"Integrations","/joy-ui/integrations/next-js-app-router":"Next.js App Router","/joy-ui/integrations/material-ui":"Usage with Material UI","/joy-ui/integrations/icon-libraries":"Using other icon libraries","/joy-ui/migration":"Migration","/joy-ui/migration/migrating-default-theme":"Migrating the default theme"}}},"componentsApiDescriptions":{"Option":{"en":{"componentDescription":"<p>An unstyled option to be used within a Select.</p>\n","propDescriptions":{"disabled":{"description":"If <code>true</code>, the option will be disabled."},"label":{"description":"A text representation of the option&#39;s content. Used for keyboard text navigation matching."},"slotProps":{"description":"The props used for each slot inside the Option."},"slots":{"description":"The components used for each slot inside the Option. Either a string to use a HTML element or a component."},"value":{"description":"The value of the option."}},"classDescriptions":{"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>li</code> element","conditions":"<code>disabled={true}</code>"},"highlighted":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>li</code> element","conditions":"<code>highlighted={true}</code>"},"selected":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>li</code> element","conditions":"<code>selected={true}</code>"}},"slotDescriptions":{"root":"The component that renders the root."},"componentDescriptionToc":[]}},"OptionGroup":{"en":{"componentDescription":"<p>An unstyled option group to be used within a Select.</p>\n","propDescriptions":{"disabled":{"description":"If <code>true</code> all the options in the group will be disabled."},"label":{"description":"The human-readable description of the group."},"slotProps":{"description":"The props used for each slot inside the Input."},"slots":{"description":"The components used for each slot inside the OptionGroup. Either a string to use a HTML element or a component."}},"classDescriptions":{"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>li</code> element","conditions":"<code>disabled={true}</code>"}},"slotDescriptions":{"label":"The component that renders the label.","list":"The component that renders the list.","root":"The component that renders the root."},"componentDescriptionToc":[]}},"Select":{"en":{"componentDescription":"<p>The foundation for building custom-styled select components.</p>\n","propDescriptions":{"areOptionsEqual":{"description":"A function used to determine if two options&#39; values are equal. By default, reference equality is used.<br>There is a performance impact when using the <code>areOptionsEqual</code> prop (proportional to the number of options). Therefore, it&#39;s recommented to use the default reference equality comparison whenever possible."},"autoComplete":{"description":"This prop helps users to fill forms faster, especially on mobile devices. The name can be confusing, as it&#39;s more like an autofill. You can learn more about it <a href=\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\">following the specification</a>."},"autoFocus":{"description":"If <code>true</code>, the select element is focused during the first mount"},"defaultListboxOpen":{"description":"If <code>true</code>, the select will be initially open."},"defaultValue":{"description":"The default selected value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the select is disabled."},"getOptionAsString":{"description":"A function used to convert the option label to a string. It&#39;s useful when labels are elements and need to be converted to plain text to enable navigation using character keys on a keyboard."},"getSerializedValue":{"description":"A function to convert the currently selected value to a string. Used to set a value of a hidden input associated with the select, so that the selected value can be posted with a form."},"listboxId":{"description":"<code>id</code> attribute of the listbox element."},"listboxOpen":{"description":"Controls the open state of the select&#39;s listbox."},"multiple":{"description":"If <code>true</code>, selecting multiple values is allowed. This affects the type of the <code>value</code>, <code>defaultValue</code>, and <code>onChange</code> props."},"name":{"description":"Name of the element. For example used by the server to identify the fields in form submits."},"onChange":{"description":"Callback fired when an option is selected."},"onListboxOpenChange":{"description":"Callback fired when the component requests to be opened. Use in controlled mode (see listboxOpen)."},"placeholder":{"description":"Text to show when there is no selected value."},"renderValue":{"description":"Function that customizes the rendering of the selected value."},"required":{"description":"If <code>true</code>, the Select cannot be empty when submitting form."},"slotProps":{"description":"The props used for each slot inside the Input."},"slots":{"description":"The components used for each slot inside the Select. Either a string to use a HTML element or a component."},"value":{"description":"The selected value. Set to <code>null</code> to deselect all options."}},"classDescriptions":{"active":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>active={true}</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element and the listbox &#39;ul&#39; element","conditions":"<code>disabled={true}</code>"},"expanded":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>expanded={true}</code>"},"focusVisible":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>focusVisible={true}</code>"}},"slotDescriptions":{"listbox":"The component that renders the listbox.","popup":"The component that wraps the popup.","root":"The component that renders the root."},"componentDescriptionToc":[]}}},"componentsApiPageContents":{"Option":{"props":{"value":{"type":{"name":"any"},"required":true},"disabled":{"type":{"name":"bool"},"default":"false"},"label":{"type":{"name":"string"}},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"Option","imports":["import { Option } from '@mui/base/Option';","import { Option } from '@mui/base';"],"slots":[{"name":"root","description":"The component that renders the root.","default":"'li'","class":"base-Option-root"}],"classes":[{"key":"disabled","className":"base--disabled","description":"State class applied to the root `li` element if `disabled={true}`.","isGlobal":true},{"key":"highlighted","className":"base-Option-highlighted","description":"State class applied to the root `li` element if `highlighted={true}`.","isGlobal":false},{"key":"selected","className":"base--selected","description":"State class applied to the root `li` element if `selected={true}`.","isGlobal":true}],"spread":true,"muiName":"Option","forwardsRefTo":"HTMLLIElement","filename":"/packages/mui-base/src/Option/Option.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-select/\">Select</a></li></ul>","cssComponent":false},"OptionGroup":{"props":{"disabled":{"type":{"name":"bool"},"default":"false"},"label":{"type":{"name":"node"}},"slotProps":{"type":{"name":"shape","description":"{ label?: func<br>&#124;&nbsp;object, list?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ label?: elementType, list?: elementType, root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"OptionGroup","imports":["import { OptionGroup } from '@mui/base/OptionGroup';","import { OptionGroup } from '@mui/base';"],"slots":[{"name":"root","description":"The component that renders the root.","default":"'li'","class":"base-OptionGroup-root"},{"name":"label","description":"The component that renders the label.","default":"'span'","class":"base-OptionGroup-label"},{"name":"list","description":"The component that renders the list.","default":"'ul'","class":"base-OptionGroup-list"}],"classes":[{"key":"disabled","className":"base--disabled","description":"State class applied to the root `li` element if `disabled={true}`.","isGlobal":true}],"spread":true,"muiName":"OptionGroup","forwardsRefTo":"HTMLLIElement","filename":"/packages/mui-base/src/OptionGroup/OptionGroup.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-select/\">Select</a></li></ul>","cssComponent":false},"Select":{"props":{"areOptionsEqual":{"type":{"name":"func"}},"autoComplete":{"type":{"name":"string"}},"autoFocus":{"type":{"name":"bool"},"default":"false"},"defaultListboxOpen":{"type":{"name":"bool"},"default":"false"},"defaultValue":{"type":{"name":"any"}},"disabled":{"type":{"name":"bool"},"default":"false"},"getOptionAsString":{"type":{"name":"func"},"default":"defaultOptionStringifier"},"getSerializedValue":{"type":{"name":"func"}},"listboxId":{"type":{"name":"string"}},"listboxOpen":{"type":{"name":"bool"},"default":"undefined"},"multiple":{"type":{"name":"bool"},"default":"false"},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"}},"onListboxOpenChange":{"type":{"name":"func"}},"placeholder":{"type":{"name":"node"}},"renderValue":{"type":{"name":"func"}},"required":{"type":{"name":"bool"},"default":"false"},"slotProps":{"type":{"name":"shape","description":"{ listbox?: func<br>&#124;&nbsp;object, popup?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ listbox?: elementType, popup?: elementType, root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"value":{"type":{"name":"any"}}},"name":"Select","imports":["import { Select } from '@mui/base/Select';","import { Select } from '@mui/base';"],"slots":[{"name":"root","description":"The component that renders the root.","default":"'button'","class":"base-Select-root"},{"name":"listbox","description":"The component that renders the listbox.","default":"'ul'","class":"base-Select-listbox"},{"name":"popup","description":"The component that wraps the popup.","default":"'div'","class":"base-Select-popup"}],"classes":[{"key":"active","className":"base--active","description":"State class applied to the root `button` element if `active={true}`.","isGlobal":true},{"key":"disabled","className":"base--disabled","description":"State class applied to the root `button` element and the listbox 'ul' element if `disabled={true}`.","isGlobal":true},{"key":"expanded","className":"base--expanded","description":"State class applied to the root `button` element if `expanded={true}`.","isGlobal":true},{"key":"focusVisible","className":"base--focusVisible","description":"State class applied to the root `button` element if `focusVisible={true}`.","isGlobal":true}],"spread":true,"muiName":"Select","forwardsRefTo":"HTMLButtonElement","filename":"/packages/mui-base/src/Select/Select.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-select/\">Select</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{"useOption":{"en":{"hookDescription":"","parametersDescriptions":{},"returnValueDescriptions":{"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"highlighted":{"description":"If <code>true</code>, the option is highlighted."},"rootRef":{"description":"Ref to the root slot DOM node."},"selected":{"description":"If <code>true</code>, the option is selected."}}}},"useOptionContextStabilizer":{"en":{"hookDescription":"Stabilizes the ListContext value for the Option component, so it doesn't change when sibling Options update.","parametersDescriptions":{},"returnValueDescriptions":{}}},"useSelect":{"en":{"hookDescription":"","parametersDescriptions":{"areOptionsEqual":{"description":"A function used to determine if two options&#39; values are equal. By default, reference equality is used.<br>There is a performance impact when using the <code>areOptionsEqual</code> prop (proportional to the number of options). Therefore, it&#39;s recommented to use the default reference equality comparison whenever possible."},"buttonRef":{"description":"The ref of the trigger button element."},"componentName":{"description":"The name of the component using useSelect. For debugging purposes."},"defaultOpen":{"description":"If <code>true</code>, the select will be open by default."},"defaultValue":{"description":"The default selected value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the select is disabled."},"getOptionAsString":{"description":"A function used to convert the option label to a string. This is useful when labels are elements and need to be converted to plain text to enable keyboard navigation with character keys."},"getSerializedValue":{"description":"A function to convert the currently selected value to a string. Used to set a value of a hidden input associated with the select, so that the selected value can be posted with a form."},"listboxId":{"description":"The <code>id</code> attribute of the listbox element."},"listboxRef":{"description":"The ref of the listbox element."},"multiple":{"description":"If <code>true</code>, the end user can select multiple values. This affects the type of the <code>value</code>, <code>defaultValue</code>, and <code>onChange</code> props."},"name":{"description":"The <code>name</code> attribute of the hidden input element. This is useful when the select is embedded in a form and you want to access the selected value in the form data."},"onChange":{"description":"Callback fired when an option is selected."},"onHighlightChange":{"description":"Callback fired when an option is highlighted."},"onOpenChange":{"description":"Callback fired when the listbox is opened or closed."},"open":{"description":"Controls the open state of the select&#39;s listbox. This is the controlled equivalent of the <code>defaultOpen</code> prop."},"options":{"description":"An alternative way to specify the options. If this parameter is set, options defined as JSX children are ignored."},"required":{"description":"If <code>true</code>, the select embedded in a form must have a selected value. Otherwise, the form submission will fail."},"value":{"description":"The selected value. Set to <code>null</code> to deselect all options."}},"returnValueDescriptions":{"buttonActive":{"description":"If <code>true</code>, the trigger button is active (pressed)."},"buttonFocusVisible":{"description":"If <code>true</code>, the trigger button has a visible focus."},"buttonRef":{"description":"Ref to the button slot DOM node."},"contextValue":{"description":"A value to be passed to the <code>SelectProvider</code> component."},"disabled":{"description":"If <code>true</code>, the select is disabled."},"dispatch":{"description":"Action dispatcher for the select component. Allows to programmatically control the select."},"getButtonProps":{"description":"Resolver for the button slot&#39;s props."},"getHiddenInputProps":{"description":"Resolver for the hidden input slot&#39;s props."},"getListboxProps":{"description":"Resolver for the listbox slot&#39;s props."},"getOptionMetadata":{"description":"A function that returns the metadata of an option with a given value."},"highlightedOption":{"description":"The value of the highlighted option."},"listboxRef":{"description":"Ref to the listbox slot DOM node."},"open":{"description":"If <code>true</code>, the listbox is open."},"options":{"description":"Values of all the registered options."},"value":{"description":"The value of the selected option(s)."}}}}},"hooksApiPageContents":{"useOption":{"parameters":{"disabled":{"type":{"name":"boolean","description":"boolean"},"required":true},"label":{"type":{"name":"string | React.ReactNode","description":"string | React.ReactNode"},"required":true},"value":{"type":{"name":"Value","description":"Value"},"required":true},"id":{"type":{"name":"string","description":"string"}},"rootRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"}}},"returnValue":{"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt;&gt;(externalProps?: ExternalProps) =&gt; UseOptionRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt;&gt;(externalProps?: ExternalProps) =&gt; UseOptionRootSlotProps&lt;ExternalProps&gt;"},"required":true},"highlighted":{"type":{"name":"boolean","description":"boolean"},"required":true},"index":{"type":{"name":"number","description":"number"},"required":true},"rootRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"selected":{"type":{"name":"boolean","description":"boolean"},"required":true}},"name":"useOption","filename":"/packages/mui-base/src/useOption/useOption.ts","imports":["import { useOption } from '@mui/base/useOption';","import { useOption } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-select/#hooks\">Select</a></li></ul>"},"useOptionContextStabilizer":{"parameters":{},"returnValue":{},"name":"useOptionContextStabilizer","filename":"/packages/mui-base/src/useOption/useOptionContextStabilizer.ts","imports":["import { useOptionContextStabilizer } from '@mui/base/useOption';","import { useOptionContextStabilizer } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-select/#hooks\">Select</a></li></ul>"},"useSelect":{"parameters":{"areOptionsEqual":{"type":{"name":"(a: OptionValue, b: OptionValue) =&gt; boolean","description":"(a: OptionValue, b: OptionValue) =&gt; boolean"}},"buttonRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"}},"componentName":{"type":{"name":"string","description":"string"},"default":"'useSelect'"},"defaultOpen":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"defaultValue":{"type":{"name":"SelectValue&lt;OptionValue, Multiple&gt;","description":"SelectValue&lt;OptionValue, Multiple&gt;"}},"disabled":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"getOptionAsString":{"type":{"name":"(option: SelectOption&lt;OptionValue&gt;) =&gt; string","description":"(option: SelectOption&lt;OptionValue&gt;) =&gt; string"},"default":"defaultOptionStringifier"},"getSerializedValue":{"type":{"name":"(option: SelectValue&lt;SelectOption&lt;OptionValue&gt;, Multiple&gt;) =&gt; React.InputHTMLAttributes&lt;HTMLInputElement&gt;[&#39;value&#39;]","description":"(option: SelectValue&lt;SelectOption&lt;OptionValue&gt;, Multiple&gt;) =&gt; React.InputHTMLAttributes&lt;HTMLInputElement&gt;[&#39;value&#39;]"}},"listboxId":{"type":{"name":"string","description":"string"}},"listboxRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"}},"multiple":{"type":{"name":"Multiple","description":"Multiple"},"default":"false"},"name":{"type":{"name":"string","description":"string"}},"onChange":{"type":{"name":"(event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent | null, value: SelectValue&lt;OptionValue, Multiple&gt;) =&gt; void","description":"(event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent | null, value: SelectValue&lt;OptionValue, Multiple&gt;) =&gt; void"}},"onHighlightChange":{"type":{"name":"(event: React.MouseEvent&lt;Element, MouseEvent&gt; | React.KeyboardEvent&lt;Element&gt; | React.FocusEvent&lt;Element, Element&gt; | null, highlighted: OptionValue | null) =&gt; void","description":"(event: React.MouseEvent&lt;Element, MouseEvent&gt; | React.KeyboardEvent&lt;Element&gt; | React.FocusEvent&lt;Element, Element&gt; | null, highlighted: OptionValue | null) =&gt; void"}},"onOpenChange":{"type":{"name":"(open: boolean) =&gt; void","description":"(open: boolean) =&gt; void"}},"open":{"type":{"name":"boolean","description":"boolean"}},"options":{"type":{"name":"ReadonlyArray&lt;SelectOptionDefinition&lt;OptionValue&gt;&gt;","description":"ReadonlyArray&lt;SelectOptionDefinition&lt;OptionValue&gt;&gt;"}},"required":{"type":{"name":"boolean","description":"boolean"}},"value":{"type":{"name":"SelectValue&lt;OptionValue, Multiple&gt;","description":"SelectValue&lt;OptionValue, Multiple&gt;"}}},"returnValue":{"buttonActive":{"type":{"name":"boolean","description":"boolean"},"required":true},"buttonFocusVisible":{"type":{"name":"boolean","description":"boolean"},"required":true},"buttonRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"contextValue":{"type":{"name":"SelectProviderValue&lt;Value&gt;","description":"SelectProviderValue&lt;Value&gt;"},"required":true},"disabled":{"type":{"name":"boolean","description":"boolean"},"required":true},"dispatch":{"type":{"name":"(action: ListAction&lt;Value&gt; | SelectAction&lt;Value&gt;) =&gt; void","description":"(action: ListAction&lt;Value&gt; | SelectAction&lt;Value&gt;) =&gt; void"},"required":true},"getButtonProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSelectButtonSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSelectButtonSlotProps&lt;ExternalProps&gt;"},"required":true},"getHiddenInputProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSelectHiddenInputSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSelectHiddenInputSlotProps&lt;ExternalProps&gt;"},"required":true},"getListboxProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSelectListboxSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseSelectListboxSlotProps&lt;ExternalProps&gt;"},"required":true},"getOptionMetadata":{"type":{"name":"(optionValue: Value) =&gt; SelectOption&lt;Value&gt; | undefined","description":"(optionValue: Value) =&gt; SelectOption&lt;Value&gt; | undefined"},"required":true},"highlightedOption":{"type":{"name":"Value | null","description":"Value | null"},"required":true},"listboxRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"open":{"type":{"name":"boolean","description":"boolean"},"required":true},"options":{"type":{"name":"Value[]","description":"Value[]"},"required":true},"value":{"type":{"name":"SelectValue&lt;Value, Multiple&gt;","description":"SelectValue&lt;Value, Multiple&gt;"},"required":true}},"name":"useSelect","filename":"/packages/mui-base/src/useSelect/useSelect.ts","imports":["import { useSelect } from '@mui/base/useSelect';","import { useSelect } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-select/#hooks\">Select</a></li></ul>"}}},"__N_SSG":true}