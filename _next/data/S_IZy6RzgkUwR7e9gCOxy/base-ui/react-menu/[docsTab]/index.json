{"pageProps":{"userLanguage":"en","translations":{"en":{"pages":{"/system/getting-started-group":"Getting started","/system/getting-started":"Overview","/system/getting-started/installation":"Installation","/system/getting-started/usage":"Usage","/system/getting-started/the-sx-prop":"The sx prop","/system/getting-started/custom-components":"Custom components","/system/getting-started/support":"Support","/style-utilities":"Style utilities","/system/properties":"Properties","/system/borders":"Borders","/system/display":"Display","/system/flexbox":"Flexbox","/system/grid":"Grid","/system/palette":"Palette","/system/positions":"Positions","/system/shadows":"Shadows","/system/sizing":"Sizing","/system/spacing":"Spacing","/system/screen-readers":"Screen readers","/system/typography":"Typography","/system/styled":"styled","/system/react-":"Components","/system/react-box":"Box","/system/react-container":"Container","/system/react-grid":"Grid","/system/react-stack":"Stack","/system/migration":"Migration","/system/migration/migration-v5":"Migrating to v6","/system/experimental-api":"Experimental APIs","/system/experimental-api/configure-the-sx-prop":"Configure the sx prop","/system/experimental-api/css-theme-variables":"CSS Theme Variables","/system/styles":"Styles","/system/styles/basics":"Basics","/system/styles/advanced":"Advanced","/base-ui/getting-started-group":"Getting started","/base-ui/getting-started":"Overview","/base-ui/getting-started/quickstart":"Quickstart","/base-ui/getting-started/usage":"Usage","/base-ui/getting-started/customization":"Customization","/base-ui/getting-started/accessibility":"Accessibility","/base-ui/getting-started/roadmap":"Roadmap","/base-ui/getting-started/support":"Support","/base-ui/react-":"Components","/base-ui/all-components":"All components","inputs":"Inputs","/base-ui/react-autocomplete":"Autocomplete","/base-ui/react-button":"Button","/base-ui/react-checkbox":"Checkbox","/base-ui/react-input":"Input","/base-ui/react-number-input":"Number Input","/base-ui/react-radio-group":"Radio Group","/base-ui/react-rating":"Rating","/base-ui/react-select":"Select","/base-ui/react-slider":"Slider","/base-ui/react-switch":"Switch","/base-ui/react-toggle-button-group":"Toggle Button Group","data-display":"Data display","/base-ui/react-badge":"Badge","/base-ui/react-tooltip":"Tooltip","feedback":"Feedback","/base-ui/react-snackbar":"Snackbar","surfaces":"Surfaces","/base-ui/react-accordion":"Accordion","navigation":"Navigation","/base-ui/react-drawer":"Drawer","/base-ui/react-menu":"Menu","/base-ui/react-pagination":"Pagination","/base-ui/react-table-pagination":"Table Pagination","/base-ui/react-tabs":"Tabs","utils":"Utils","/base-ui/react-click-away-listener":"Click-Away Listener","/base-ui/react-focus-trap":"Focus Trap","/base-ui/react-form-control":"Form Control","/base-ui/react-modal":"Modal","/base-ui/react-no-ssr":"No-SSR","/base-ui/react-popper":"Popper","/base-ui/react-popup":"Popup","/base-ui/react-portal":"Portal","/base-ui/react-textarea-autosize":"Textarea Autosize","/base-ui/react-transitions":"Transitions","/base-ui/react-badge/components-api/#badge":"Badge","/base-ui/react-button/components-api/#button":"Button","/base-ui/react-click-away-listener/components-api/#click-away-listener":"ClickAwayListener","/base-ui/react-transitions/components-api/#css-animation":"CssAnimation","/base-ui/react-transitions/components-api/#css-transition":"CssTransition","/base-ui/react-menu/components-api/#dropdown":"Dropdown","/base-ui/react-focus-trap/components-api/#focus-trap":"FocusTrap","/base-ui/react-form-control/components-api/#form-control":"FormControl","/base-ui/react-input/components-api/#input":"Input","/base-ui/react-menu/components-api/#menu":"Menu","/base-ui/react-menu/components-api/#menu-button":"MenuButton","/base-ui/react-menu/components-api/#menu-item":"MenuItem","/base-ui/react-modal/components-api/#modal":"Modal","/base-ui/react-no-ssr/components-api/#no-ssr":"NoSsr","/base-ui/react-number-input/components-api/#number-input":"NumberInput","/base-ui/react-select/components-api/#option":"Option","/base-ui/react-select/components-api/#option-group":"OptionGroup","/base-ui/react-popper/components-api/#popper":"Popper","/base-ui/react-popup/components-api/#popup":"Popup","/base-ui/react-portal/components-api/#portal":"Portal","/base-ui/react-select/components-api/#select":"Select","/base-ui/react-slider/components-api/#slider":"Slider","/base-ui/react-snackbar/components-api/#snackbar":"Snackbar","/base-ui/react-switch/components-api/#switch":"Switch","/base-ui/react-tabs/components-api/#tab":"Tab","/base-ui/react-tabs/components-api/#tab-panel":"TabPanel","/base-ui/react-table-pagination/components-api/#table-pagination":"TablePagination","/base-ui/react-tabs/components-api/#tabs":"Tabs","/base-ui/react-tabs/components-api/#tabs-list":"TabsList","/base-ui/react-textarea-autosize/components-api/#textarea-autosize":"TextareaAutosize","/base-ui/react-autocomplete/hooks-api/#use-autocomplete":"useAutocomplete","/base-ui/react-badge/hooks-api/#use-badge":"useBadge","/base-ui/react-button/hooks-api/#use-button":"useButton","/base-ui/react-menu/hooks-api/#use-dropdown":"useDropdown","/base-ui/react-form-control/hooks-api/#use-form-control-context":"useFormControlContext","/base-ui/react-input/hooks-api/#use-input":"useInput","/base-ui/react-menu/hooks-api/#use-menu":"useMenu","/base-ui/react-menu/hooks-api/#use-menu-button":"useMenuButton","/base-ui/react-menu/hooks-api/#use-menu-item":"useMenuItem","/base-ui/react-menu/hooks-api/#use-menu-item-context-stabilizer":"useMenuItemContextStabilizer","/base-ui/react-modal/hooks-api/#use-modal":"useModal","/base-ui/react-number-input/hooks-api/#use-number-input":"useNumberInput","/base-ui/react-select/hooks-api/#use-option":"useOption","/base-ui/react-select/hooks-api/#use-option-context-stabilizer":"useOptionContextStabilizer","/base-ui/react-select/hooks-api/#use-select":"useSelect","/base-ui/react-slider/hooks-api/#use-slider":"useSlider","/base-ui/react-snackbar/hooks-api/#use-snackbar":"useSnackbar","/base-ui/react-switch/hooks-api/#use-switch":"useSwitch","/base-ui/react-tabs/hooks-api/#use-tab":"useTab","/base-ui/react-tabs/hooks-api/#use-tab-panel":"useTabPanel","/base-ui/react-tabs/hooks-api/#use-tabs":"useTabs","/base-ui/react-tabs/hooks-api/#use-tabs-list":"useTabsList","/base-ui/react-transitions/hooks-api/#use-transition-state-manager":"useTransitionStateManager","/base-ui/react-transitions/hooks-api/#use-transition-trigger":"useTransitionTrigger","/base-ui/guides":"How-to guides","/base-ui/guides/working-with-tailwind-css":"Working with TailwindÂ CSS","/base-ui/guides/overriding-component-structure":"Overriding component structure","/base-ui/guides/next-js-app-router":"Next.js App Router","/material-ui/getting-started-group":"Getting started","/material-ui/getting-started":"Overview","/material-ui/getting-started/installation":"Installation","/material-ui/getting-started/usage":"Usage","/material-ui/getting-started/example-projects":"Example projects","/material-ui/getting-started/templates":"Templates","/material-ui/getting-started/learn":"Learn","/material-ui/getting-started/design-resources":"Design resources","/material-ui/getting-started/faq":"FAQs","/material-ui/getting-started/supported-components":"Supported components","/material-ui/getting-started/supported-platforms":"Supported platforms","/material-ui/getting-started/support":"Support","/material-ui/react-":"Components","/material-ui/all-components":"All components","/material-ui/react-autocomplete":"Autocomplete","/material-ui/react-button":"Button","/material-ui/react-button-group":"Button Group","/material-ui/react-checkbox":"Checkbox","/material-ui/react-floating-action-button":"Floating Action Button","/material-ui/react-radio-button":"Radio Group","/material-ui/react-rating":"Rating","/material-ui/react-select":"Select","/material-ui/react-slider":"Slider","/material-ui/react-switch":"Switch","/material-ui/react-text-field":"Text Field","/material-ui/react-transfer-list":"Transfer List","/material-ui/react-toggle-button":"Toggle Button","/material-ui/react-avatar":"Avatar","/material-ui/react-badge":"Badge","/material-ui/react-chip":"Chip","/material-ui/react-divider":"Divider","/material-ui/icons":"Icons","/material-ui/material-icons":"Material Icons","/material-ui/react-list":"List","/material-ui/react-table":"Table","/material-ui/react-tooltip":"Tooltip","/material-ui/react-typography":"Typography","/material-ui/react-alert":"Alert","/material-ui/react-backdrop":"Backdrop","/material-ui/react-dialog":"Dialog","/material-ui/react-progress":"Progress","/material-ui/react-skeleton":"Skeleton","/material-ui/react-snackbar":"Snackbar","/material-ui/react-accordion":"Accordion","/material-ui/react-app-bar":"App Bar","/material-ui/react-card":"Card","/material-ui/react-paper":"Paper","/material-ui/react-bottom-navigation":"Bottom Navigation","/material-ui/react-breadcrumbs":"Breadcrumbs","/material-ui/react-drawer":"Drawer","/material-ui/react-link":"Link","/material-ui/react-menu":"Menu","/material-ui/react-pagination":"Pagination","/material-ui/react-speed-dial":"Speed Dial","/material-ui/react-stepper":"Stepper","/material-ui/react-tabs":"Tabs","layout":"Layout","/material-ui/react-box":"Box","/material-ui/react-container":"Container","/material-ui/react-grid":"Grid","/material-ui/react-grid2":"Grid v2","/material-ui/react-stack":"Stack","/material-ui/react-image-list":"Image List","/material-ui/react-hidden":"Hidden","/material-ui/react-click-away-listener":"Click-Away Listener","/material-ui/react-css-baseline":"CSS Baseline","/material-ui/react-modal":"Modal","/material-ui/react-no-ssr":"No SSR","/material-ui/react-popover":"Popover","/material-ui/react-popper":"Popper","/material-ui/react-portal":"Portal","/material-ui/react-textarea-autosize":"Textarea Autosize","/material-ui/transitions":"Transitions","/material-ui/react-use-media-query":"useMediaQuery","MUIÂ X":"MUIÂ X","lab":"Lab","/material-ui/about-the-lab":"About the lab ð§ª","/material-ui/react-masonry":"Masonry","/material-ui/react-timeline":"Timeline","/material-ui/customization":"Customization","/material-ui/customization/how-to-customize":"How to customize","/material-ui/customization/dark-mode":"Dark mode","/material-ui/customization/color":"Color","/material-ui/customization/right-to-left":"Right-to-left","/material-ui/customization/shadow-dom":"Shadow DOM","/material-ui/customization/theme":"Theme","/material-ui/customization/default-theme":"Default theme viewer","/material-ui/customization/theming":"Customizing the theme","/material-ui/customization/creating-themed-components":"Creating themed components","/material-ui/customization/theme-components":"Components","tokens":"Tokens","/material-ui/customization/palette":"Palette","/material-ui/customization/typography":"Typography","/material-ui/customization/spacing":"Spacing","/material-ui/customization/breakpoints":"Breakpoints","/material-ui/customization/density":"Density","/material-ui/customization/z-index":"z-index","/material-ui/customization/transitions":"Transitions","/material-ui/customization/css-variables":"Css variables","/material-ui/customization/css-theme-variables/overview":"Overview","/material-ui/customization/css-theme-variables/usage":"Usage","/material-ui/customization/css-theme-variables/configuration":"Configuration","/material-ui/guides":"How-to guides","/material-ui/guides/minimizing-bundle-size":"Minimizing bundle size","/material-ui/guides/server-rendering":"Server rendering","/material-ui/guides/responsive-ui":"Responsive UI","/material-ui/guides/testing":"Testing","/material-ui/guides/localization":"Localization","/material-ui/guides/typescript":"TypeScript","/material-ui/guides/composition":"Composition","/material-ui/guides/content-security-policy":"Content Security Policy","/material-ui/integrations":"Integrations","/material-ui/integrations/nextjs":"Next.js integration","/material-ui/integrations/routing":"Routing libraries","/material-ui/integrations/styled-components":"Usage with styled-components","/material-ui/integrations/interoperability":"Style library interoperability","/material-ui/integrations/theme-scoping":"Theme scoping","/material-ui/experimental-api":"Experimental APIs","/material-ui/experimental-api/classname-generator":"ClassName generator","/material-ui/migration":"Migration","/material-ui/migration/migrating-from-deprecated-apis":"Migrating from deprecated APIs","/material-ui/migration/migration-grid-v2":"Migrating to Grid v2","/material-ui/migration/pickers-migration":"Migration from @material-ui/pickers","Upgrade to v6":"Upgrade to v6","/material-ui/migration/migration-v5":"Migrating to v6","/material-ui/migration/migration-css-theme-variables":"Migrating to CSS theme variables","Upgrade to v5":"Upgrade to v5","/material-ui/migration/migration-v4":"Migrating to v5: getting started","/material-ui/migration/v5-style-changes":"Breaking changes: style and theme","/material-ui/migration/v5-component-changes":"Breaking changes: components","/material-ui/migration/migrating-from-jss":"Migrating from JSS (optional)","/material-ui/migration/troubleshooting":"Troubleshooting","Earlier versions":"Earlier versions","/material-ui/migration/migration-v3":"Migration from v3 to v4","/material-ui/migration/migration-v0x":"Migration from v0.x to v1","/material-ui/discover-more":"Discover more","/material-ui/discover-more/showcase":"Showcase","/material-ui/discover-more/related-projects":"Related projects","/material-ui/discover-more/roadmap":"Roadmap","/material-ui/discover-more/backers":"Sponsors and Backers","/material-ui/discover-more/vision":"Vision","/material-ui/discover-more/changelog":"Changelog","/material-ui/design-resources":"Design resources","/material-ui/design-resources/material-ui-for-figma":"Figma Design Kit","/material-ui/design-resources/material-ui-sync":"Figma Sync plugin","https://mui.com/store/?utm_source=docs&utm_medium=referral&utm_campaign=sidenav":"Template store","/joy-ui/getting-started-group":"Getting started","/joy-ui/getting-started":"Overview","/joy-ui/getting-started/installation":"Installation","/joy-ui/getting-started/usage":"Usage","/joy-ui/getting-started/tutorial":"Tutorial","/joy-ui/getting-started/templates":"Templates","/joy-ui/getting-started/roadmap":"Roadmap","/joy-ui/getting-started/support":"Support","main-features":"Main features","/joy-ui/main-features/global-variants":"Global variants","/joy-ui/main-features/color-inversion":"Color inversion","/joy-ui/main-features/automatic-adjustment":"Automatic adjustment","/joy-ui/main-features/dark-mode-optimization":"Dark mode optimization","/joy-ui/react-":"Components","/joy-ui/react-autocomplete":"Autocomplete","/joy-ui/react-button":"Button","/joy-ui/react-button-group":"Button Group","/joy-ui/react-checkbox":"Checkbox","/joy-ui/react-input":"Input","/joy-ui/react-radio-button":"Radio Button","/joy-ui/react-select":"Select","/joy-ui/react-slider":"Slider","/joy-ui/react-switch":"Switch","/joy-ui/react-textarea":"Textarea","/joy-ui/react-text-field":"Text Field","/joy-ui/react-toggle-button-group":"Toggle Button Group","/joy-ui/react-aspect-ratio":"Aspect Ratio","/joy-ui/react-avatar":"Avatar","/joy-ui/react-badge":"Badge","/joy-ui/react-chip":"Chip","/joy-ui/react-divider":"Divider","/joy-ui/react-list":"List","/joy-ui/react-table":"Table","/joy-ui/react-tooltip":"Tooltip","/joy-ui/react-typography":"Typography","/joy-ui/react-alert":"Alert","/joy-ui/react-circular-progress":"Circular Progress","/joy-ui/react-linear-progress":"Linear Progress","/joy-ui/react-modal":"Modal","/joy-ui/react-skeleton":"Skeleton","/joy-ui/react-snackbar":"Snackbar","/joy-ui/react-accordion":"Accordion","/joy-ui/react-card":"Card","/joy-ui/react-sheet":"Sheet","/joy-ui/react-breadcrumbs":"Breadcrumbs","/joy-ui/react-drawer":"Drawer","/joy-ui/react-link":"Link","/joy-ui/react-menu":"Menu","/joy-ui/react-stepper":"Stepper","/joy-ui/react-tabs":"Tabs","/joy-ui/react-box":"Box","/joy-ui/react-grid":"Grid","/joy-ui/react-stack":"Stack","/joy-ui/react-css-baseline":"CSS Baseline","/joy-ui/customization":"Customization","/joy-ui/customization/approaches":"Approaches","Theme":"Theme","/joy-ui/customization/theme-colors":"Colors","/joy-ui/customization/theme-shadow":"Shadow","/joy-ui/customization/theme-typography":"Typography","/joy-ui/customization/themed-components":"Components","Guides":"Guides","/joy-ui/customization/dark-mode":"Dark mode","/joy-ui/customization/using-css-variables":"Using CSS variables","/joy-ui/customization/creating-themed-components":"Creating themed components","/joy-ui/customization/overriding-component-structure":"Overriding the component structure","/joy-ui/customization/right-to-left":"Right-to-left support","Tools":"Tools","/joy-ui/customization/default-theme-viewer":"Default theme viewer","/joy-ui/customization/theme-builder":"Theme builder","/joy-ui/integrations":"Integrations","/joy-ui/integrations/next-js-app-router":"Next.js App Router","/joy-ui/integrations/material-ui":"Usage with Material UI","/joy-ui/integrations/icon-libraries":"Using other icon libraries","/joy-ui/migration":"Migration","/joy-ui/migration/migrating-default-theme":"Migrating the default theme"}}},"componentsApiDescriptions":{"Dropdown":{"en":{"componentDescription":"","propDescriptions":{"defaultOpen":{"description":"If <code>true</code>, the dropdown is initially open."},"onOpenChange":{"description":"Callback fired when the component requests to be opened or closed."},"open":{"description":"Allows to control whether the dropdown is open. This is a controlled counterpart of <code>defaultOpen</code>."}},"classDescriptions":{}}},"Menu":{"en":{"componentDescription":"","propDescriptions":{"actions":{"description":"A ref with imperative actions that can be performed on the menu."},"anchor":{"description":"The element based on which the menu is positioned."},"onItemsChange":{"description":"Function called when the items displayed in the menu change."},"slotProps":{"description":"The props used for each slot inside the Menu."},"slots":{"description":"The components used for each slot inside the Menu. Either a string to use a HTML element or a component."}},"classDescriptions":{"expanded":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>open={true}</code>"}},"slotDescriptions":{"listbox":"The component that renders the listbox.","root":"The component that renders the popup element."}}},"MenuButton":{"en":{"componentDescription":"","propDescriptions":{"className":{"description":"Class name applied to the root element."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"focusableWhenDisabled":{"description":"If <code>true</code>, allows a disabled button to receive focus."},"label":{"description":"Label of the button"},"slotProps":{"description":"The components used for each slot inside the MenuButton. Either a string to use a HTML element or a component."},"slots":{"description":"The props used for each slot inside the MenuButton."}},"classDescriptions":{"active":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>active={true}</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"expanded":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the associated menu is open"}},"slotDescriptions":{"root":"The component that renders the root."}}},"MenuItem":{"en":{"componentDescription":"<p>An unstyled menu item to be used within a Menu.</p>\n","propDescriptions":{"disabled":{"description":"If <code>true</code>, the menu item will be disabled."},"disableFocusOnHover":{"description":"If <code>true</code>, the menu item won&#39;t receive focus when the mouse moves over it."},"label":{"description":"A text representation of the menu item&#39;s content. Used for keyboard text navigation matching."},"slotProps":{"description":"The props used for each slot inside the MenuItem."},"slots":{"description":"The components used for each slot inside the MenuItem. Either a string to use a HTML element or a component."}},"classDescriptions":{"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>disabled={true}</code>"},"focusVisible":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root <code>button</code> element","conditions":"<code>focusVisible={true}</code>"}},"slotDescriptions":{"root":"The component that renders the root."},"componentDescriptionToc":[]}}},"componentsApiPageContents":{"Dropdown":{"props":{"defaultOpen":{"type":{"name":"bool"}},"onOpenChange":{"type":{"name":"func"}},"open":{"type":{"name":"bool"}}},"name":"Dropdown","imports":["import { Dropdown } from '@mui/base/Dropdown';","import { Dropdown } from '@mui/base';"],"classes":[],"spread":false,"themeDefaultProps":null,"muiName":"Dropdown","filename":"/packages/mui-base/src/Dropdown/Dropdown.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-menu/\">Menu</a></li></ul>","cssComponent":false},"Menu":{"props":{"actions":{"type":{"name":"custom","description":"ref"}},"anchor":{"type":{"name":"union","description":"HTML element<br>&#124;&nbsp;object<br>&#124;&nbsp;func"}},"onItemsChange":{"type":{"name":"func"}},"slotProps":{"type":{"name":"shape","description":"{ listbox?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ listbox?: elementType, root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"Menu","imports":["import { Menu } from '@mui/base/Menu';","import { Menu } from '@mui/base';"],"slots":[{"name":"root","description":"The component that renders the popup element.","default":"'div'","class":"base-Menu-root"},{"name":"listbox","description":"The component that renders the listbox.","default":"'ul'","class":"base-Menu-listbox"}],"classes":[{"key":"expanded","className":"base--expanded","description":"State class applied to the root element if `open={true}`.","isGlobal":true}],"spread":true,"muiName":"Menu","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-base/src/Menu/Menu.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-menu/\">Menu</a></li></ul>","cssComponent":false},"MenuButton":{"props":{"className":{"type":{"name":"string"}},"disabled":{"type":{"name":"bool"},"default":"false"},"focusableWhenDisabled":{"type":{"name":"bool"},"default":"false"},"label":{"type":{"name":"string"}},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"MenuButton","imports":["import { MenuButton } from '@mui/base/MenuButton';","import { MenuButton } from '@mui/base';"],"slots":[{"name":"root","description":"The component that renders the root.","default":"'button'","class":"base-MenuButton-root"}],"classes":[{"key":"active","className":"base--active","description":"State class applied to the root element if `active={true}`.","isGlobal":true},{"key":"disabled","className":"base--disabled","description":"State class applied to the root element if `disabled={true}`.","isGlobal":true},{"key":"expanded","className":"base--expanded","description":"State class applied to the root element if the associated menu is open.","isGlobal":true}],"spread":true,"muiName":"MenuButton","forwardsRefTo":"HTMLButtonElement","filename":"/packages/mui-base/src/MenuButton/MenuButton.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-menu/\">Menu</a></li></ul>","cssComponent":false},"MenuItem":{"props":{"disabled":{"type":{"name":"bool"},"default":"false"},"disableFocusOnHover":{"type":{"name":"bool"},"default":"false"},"label":{"type":{"name":"string"}},"slotProps":{"type":{"name":"shape","description":"{ root?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ root?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}}},"name":"MenuItem","imports":["import { MenuItem } from '@mui/base/MenuItem';","import { MenuItem } from '@mui/base';"],"slots":[{"name":"root","description":"The component that renders the root.","default":"'li'","class":"base-MenuItem-root"}],"classes":[{"key":"disabled","className":"base--disabled","description":"State class applied to the root `button` element if `disabled={true}`.","isGlobal":true},{"key":"focusVisible","className":"base--focusVisible","description":"State class applied to the root `button` element if `focusVisible={true}`.","isGlobal":true}],"spread":true,"muiName":"MenuItem","forwardsRefTo":"HTMLLIElement","filename":"/packages/mui-base/src/MenuItem/MenuItem.tsx","inheritance":null,"demos":"<ul><li><a href=\"/base-ui/react-menu/\">Menu</a></li></ul>","cssComponent":false}},"hooksApiDescriptions":{"useDropdown":{"en":{"hookDescription":"","parametersDescriptions":{"componentName":{"description":"The name of the component using useDropdown. For debugging purposes."},"defaultOpen":{"description":"If <code>true</code>, the dropdown is initially open."},"onOpenChange":{"description":"Callback fired when the component requests to be opened or closed."},"open":{"description":"Allows to control whether the dropdown is open. This is a controlled counterpart of <code>defaultOpen</code>."}},"returnValueDescriptions":{"contextValue":{"description":"The value to be passed into the DropdownContext provider."},"open":{"description":"If <code>true</code>, the dropdown is open."}}}},"useMenu":{"en":{"hookDescription":"","parametersDescriptions":{"autoFocus":{"description":"If <code>true</code> (Default) will focus the highligted item. If you set this prop to <code>false</code> the focus will not be moved inside the Menu component. This has severe accessibility implications and should only be considered if you manage focus otherwise."},"componentName":{"description":"The name of the component using useMenu. For debugging purposes."},"disabledItemsFocusable":{"description":"If <code>true</code>, it will be possible to highlight disabled items."},"disableListWrap":{"description":"If <code>true</code>, the highlight will not wrap around the list if arrow keys are used."},"id":{"description":"The id of the menu. If not provided, it will be generated."},"listboxRef":{"description":"The ref to the menu&#39;s listbox node."},"onItemsChange":{"description":"Callback fired when the menu items change."}},"returnValueDescriptions":{"contextValue":{"description":"The value to be passed into the MenuProvider."},"dispatch":{"description":"Action dispatcher for the menu component. Allows to programmatically control the menu."},"getListboxProps":{"description":"Resolver for the listbox slot&#39;s props."},"highlightedValue":{"description":"The highlighted option in the menu listbox."},"listboxRef":{"description":"The ref to the menu&#39;s listbox node."},"menuItems":{"description":"Items in the menu listbox."},"open":{"description":"If <code>true</code>, the menu is open."},"triggerElement":{"description":"An element that triggers the visibility of the menu."}}}},"useMenuButton":{"en":{"hookDescription":"","parametersDescriptions":{"disabled":{"description":"If <code>true</code>, the component is disabled."},"focusableWhenDisabled":{"description":"If <code>true</code>, allows a disabled button to receive focus."},"rootRef":{"description":"The ref to the root element."}},"returnValueDescriptions":{"active":{"description":"If <code>true</code>, the component is active (pressed)."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"rootRef":{"description":"The ref to the root element."}}}},"useMenuItem":{"en":{"hookDescription":"","parametersDescriptions":{"disableFocusOnHover":{"description":"If <code>true</code>, the menu item won&#39;t receive focus when the mouse moves over it."}},"returnValueDescriptions":{"disabled":{"description":"If <code>true</code>, the component is disabled."},"focusVisible":{"description":"If <code>true</code>, the component is being focused using keyboard."},"getRootProps":{"description":"Resolver for the root slot&#39;s props."},"highlighted":{"description":"If <code>true</code>, the component is being highlighted."},"index":{"description":"0-based index of the item in the menu."},"rootRef":{"description":"The ref to the component&#39;s root DOM element."},"totalItemCount":{"description":"Total number of items in the menu."}}}},"useMenuItemContextStabilizer":{"en":{"hookDescription":"Stabilizes the ListContext value for the MenuItem component, so it doesn't change when sibling items update.","parametersDescriptions":{},"returnValueDescriptions":{}}}},"hooksApiPageContents":{"useDropdown":{"parameters":{"componentName":{"type":{"name":"string","description":"string"},"default":"'useDropdown'"},"defaultOpen":{"type":{"name":"boolean","description":"boolean"}},"onOpenChange":{"type":{"name":"(event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent | null, open: boolean) =&gt; void","description":"(event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent | null, open: boolean) =&gt; void"}},"open":{"type":{"name":"boolean","description":"boolean"}}},"returnValue":{"contextValue":{"type":{"name":"DropdownContextValue","description":"DropdownContextValue"},"required":true},"open":{"type":{"name":"boolean","description":"boolean"},"required":true}},"name":"useDropdown","filename":"/packages/mui-base/src/useDropdown/useDropdown.ts","imports":["import { useDropdown } from '@mui/base/useDropdown';","import { useDropdown } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-menu/#hooks\">Menu</a></li></ul>"},"useMenu":{"parameters":{"autoFocus":{"type":{"name":"boolean","description":"boolean"},"default":"true"},"componentName":{"type":{"name":"string","description":"string"},"default":"'useMenu'"},"disabledItemsFocusable":{"type":{"name":"boolean","description":"boolean"},"default":"true"},"disableListWrap":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"id":{"type":{"name":"string","description":"string"}},"listboxRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"}},"onItemsChange":{"type":{"name":"(items: string[]) =&gt; void","description":"(items: string[]) =&gt; void"}}},"returnValue":{"contextValue":{"type":{"name":"MenuProviderValue","description":"MenuProviderValue"},"required":true},"dispatch":{"type":{"name":"(action: ListAction&lt;string&gt;) =&gt; void","description":"(action: ListAction&lt;string&gt;) =&gt; void"},"required":true},"getListboxProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuListboxSlotProps","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuListboxSlotProps"},"required":true},"highlightedValue":{"type":{"name":"string | null","description":"string | null"},"required":true},"listboxRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"menuItems":{"type":{"name":"Map&lt;string, MenuItemMetadata&gt;","description":"Map&lt;string, MenuItemMetadata&gt;"},"required":true},"open":{"type":{"name":"boolean","description":"boolean"},"required":true},"triggerElement":{"type":{"name":"HTMLElement | null","description":"HTMLElement | null"},"required":true}},"name":"useMenu","filename":"/packages/mui-base/src/useMenu/useMenu.ts","imports":["import { useMenu } from '@mui/base/useMenu';","import { useMenu } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-menu/#hooks\">Menu</a></li></ul>"},"useMenuButton":{"parameters":{"disabled":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"focusableWhenDisabled":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"rootRef":{"type":{"name":"React.Ref&lt;HTMLElement&gt;","description":"React.Ref&lt;HTMLElement&gt;"}}},"returnValue":{"active":{"type":{"name":"boolean","description":"boolean"},"required":true},"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuButtonRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuButtonRootSlotProps&lt;ExternalProps&gt;"},"required":true},"open":{"type":{"name":"boolean","description":"boolean"},"required":true},"rootRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true}},"name":"useMenuButton","filename":"/packages/mui-base/src/useMenuButton/useMenuButton.ts","imports":["import { useMenuButton } from '@mui/base/useMenuButton';","import { useMenuButton } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-menu/#hooks\">Menu</a></li></ul>"},"useMenuItem":{"parameters":{"rootRef":{"type":{"name":"React.Ref&lt;Element&gt;","description":"React.Ref&lt;Element&gt;"},"required":true},"disabled":{"type":{"name":"boolean","description":"boolean"}},"disableFocusOnHover":{"type":{"name":"boolean","description":"boolean"},"default":"false"},"id":{"type":{"name":"string","description":"string"}},"label":{"type":{"name":"string","description":"string"}},"onClick":{"type":{"name":"React.MouseEventHandler&lt;any&gt;","description":"React.MouseEventHandler&lt;any&gt;"}}},"returnValue":{"disabled":{"type":{"name":"boolean","description":"boolean"},"required":true},"focusVisible":{"type":{"name":"boolean","description":"boolean"},"required":true},"getRootProps":{"type":{"name":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuItemRootSlotProps&lt;ExternalProps&gt;","description":"&lt;ExternalProps extends Record&lt;string, unknown&gt; = {}&gt;(externalProps?: ExternalProps) =&gt; UseMenuItemRootSlotProps&lt;ExternalProps&gt;"},"required":true},"highlighted":{"type":{"name":"boolean","description":"boolean"},"required":true},"index":{"type":{"name":"number","description":"number"},"required":true},"rootRef":{"type":{"name":"React.RefCallback&lt;Element&gt; | null","description":"React.RefCallback&lt;Element&gt; | null"},"required":true},"totalItemCount":{"type":{"name":"number","description":"number"},"required":true}},"name":"useMenuItem","filename":"/packages/mui-base/src/useMenuItem/useMenuItem.ts","imports":["import { useMenuItem } from '@mui/base/useMenuItem';","import { useMenuItem } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-menu/#hooks\">Menu</a></li></ul>"},"useMenuItemContextStabilizer":{"parameters":{},"returnValue":{},"name":"useMenuItemContextStabilizer","filename":"/packages/mui-base/src/useMenuItem/useMenuItemContextStabilizer.ts","imports":["import { useMenuItemContextStabilizer } from '@mui/base/useMenuItem';","import { useMenuItemContextStabilizer } from '@mui/base';"],"demos":"<ul><li><a href=\"/base-ui/react-menu/#hooks\">Menu</a></li></ul>"}}},"__N_SSG":true}