(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[91008,39519],{333897:function(n,t,e){var o=e(915012),s=/^\s+/;n.exports=function(n){return n?n.slice(0,o(n)+1).replace(s,""):n}},915012:function(n){var t=/\s/;n.exports=function(n){for(var e=n.length;e--&&t.test(n.charAt(e)););return e}},889678:function(n,t,e){var o=e(706627),s=e(885365),a=e(67948),r=Math.max,i=Math.min;n.exports=function(n,t,e){var l,c,d,u,p,m,b=0,h=!1,f=!1,g=!0;if("function"!=typeof n)throw TypeError("Expected a function");function x(t){var e=l,o=c;return l=c=void 0,b=t,u=n.apply(o,e)}function B(n){var e=n-m,o=n-b;return void 0===m||e>=t||e<0||f&&o>=d}function k(){var n,e,o,a=s();if(B(a))return y(a);p=setTimeout(k,(n=a-m,e=a-b,o=t-n,f?i(o,d-e):o))}function y(n){return(p=void 0,g&&l)?x(n):(l=c=void 0,u)}function v(){var n,e=s(),o=B(e);if(l=arguments,c=this,m=e,o){if(void 0===p)return b=n=m,p=setTimeout(k,t),h?x(n):u;if(f)return clearTimeout(p),p=setTimeout(k,t),x(m)}return void 0===p&&(p=setTimeout(k,t)),u}return t=a(t)||0,o(e)&&(h=!!e.leading,d=(f="maxWait"in e)?r(a(e.maxWait)||0,t):d,g="trailing"in e?!!e.trailing:g),v.cancel=function(){void 0!==p&&clearTimeout(p),b=0,l=m=c=p=void 0},v.flush=function(){return void 0===p?u:y(s())},v}},706627:function(n){n.exports=function(n){var t=typeof n;return null!=n&&("object"==t||"function"==t)}},885365:function(n,t,e){var o=e(573401);n.exports=function(){return o.Date.now()}},123763:function(n,t,e){var o=e(889678),s=e(706627);n.exports=function(n,t,e){var a=!0,r=!0;if("function"!=typeof n)throw TypeError("Expected a function");return s(e)&&(a="leading"in e?!!e.leading:a,r="trailing"in e?!!e.trailing:r),o(n,t,{leading:a,maxWait:t,trailing:r})}},67948:function(n,t,e){var o=e(333897),s=e(706627),a=e(42848),r=0/0,i=/^[-+]0x[0-9a-f]+$/i,l=/^0b[01]+$/i,c=/^0o[0-7]+$/i,d=parseInt;n.exports=function(n){if("number"==typeof n)return n;if(a(n))return r;if(s(n)){var t="function"==typeof n.valueOf?n.valueOf():n;n=s(t)?t+"":t}if("string"!=typeof n)return 0===n?n:+n;n=o(n);var e=l.test(n);return e||c.test(n)?d(n.slice(2),e?2:8):i.test(n)?r:+n}},380116:function(n,t,e){"use strict";e.r(t),e.d(t,{demoComponents:function(){return nC},demos:function(){return nv},docs:function(){return ny},srcComponents:function(){return nw}});var o,s,a,r,i,l,c,d,u,p,m,b,h=e(470079),f=e.t(h,2),g=e(950651),x=e(548396),B=e(270405),k=e(639519),y=e(653048),v=e(797475),C=e(344684),w=e(159727),F=e.n(w),D=e(252951),$=e(491013),S=e(163226),_=e(815577),j=e(735250),E={200:"#99CCFF",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0066CC"},A={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},M=(0,S.Z)(D.z)(function(n){var t=n.theme;return"\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ".concat(E[500],";\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ").concat(E[500],";\n  box-shadow: 0 2px 1px ").concat("dark"===t.palette.mode?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.2)",", inset 0 1.5px 1px ").concat(E[400],", inset 0 -2px 1px ").concat(E[600],";\n\n  &:hover {\n    background-color: ").concat(E[600],";\n  }\n\n  &.").concat($.J.active," {\n    background-color: ").concat(E[700],";\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.").concat($.J.focusVisible," {\n    box-shadow: 0 0 0 4px ").concat("dark"===t.palette.mode?E[300]:E[200],";\n    outline: none;\n  }\n\n  &.").concat($.J.disabled," {\n    background-color: ").concat("dark"===t.palette.mode?A[700]:A[200],";\n    color: ").concat("dark"===t.palette.mode?A[200]:A[700],";\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  ")}),I={200:"#99CCFF",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0066CC"},R={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},z=(0,S.Z)(D.z)(function(n){var t=n.theme;return"\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ".concat(I[500],";\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ").concat(I[500],";\n  box-shadow: 0 2px 1px ").concat("dark"===t.palette.mode?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.2)",", inset 0 1.5px 1px ").concat(I[400],", inset 0 -2px 1px ").concat(I[600],";\n\n  &:hover {\n    background-color: ").concat(I[600],";\n  }\n\n  &:active {\n    background-color: ").concat(I[700],";\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ").concat("dark"===t.palette.mode?I[300]:I[200],";\n    outline: none;\n  }\n\n  &.base--disabled {\n    background-color: ").concat("dark"===t.palette.mode?R[700]:R[200],";\n    color: ").concat("dark"===t.palette.mode?R[200]:R[700],";\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n")}),T={200:"#99CCFF",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0066CC"},P={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},U=(0,S.Z)(D.z)(function(n){var t=n.theme;return"\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ".concat(T[500],";\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ").concat(T[500],";\n  box-shadow: 0 2px 1px ").concat("dark"===t.palette.mode?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.2)",", inset 0 1.5px 1px ").concat(T[400],", inset 0 -2px 1px ").concat(T[600],";\n\n  &:hover {\n    background-color: ").concat(T[600],";\n  }\n\n  &.").concat($.J.active," {\n    background-color: ").concat(T[700],";\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.").concat($.J.focusVisible," {\n    box-shadow: 0 0 0 4px ").concat("dark"===t.palette.mode?T[300]:T[200],";\n    outline: none;\n  }\n\n  &.").concat($.J.disabled," {\n    background-color: ").concat("dark"===t.palette.mode?P[700]:P[200],";\n    color: ").concat("dark"===t.palette.mode?P[200]:P[700],";\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n")}),Z=e(778521),H=e(460589),L=h.forwardRef(function(n,t){var e=n.children,o=n.disabled,s=(0,H.U)((0,Z.Z)((0,Z.Z)({},n),{},{rootRef:t})),a=s.active,r=s.focusVisible,i=s.getRootProps;return(0,j.jsx)(W,(0,Z.Z)((0,Z.Z)({},i()),{},{className:(0,y.default)(a&&"active",o&&"disabled",r&&"focusVisible"),children:e}))}),V={200:"#99CCFF",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0066CC"},N={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},W=(0,S.Z)("button")(function(n){var t=n.theme;return"\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ".concat(V[500],";\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ").concat(V[500],";\n  box-shadow: 0 2px 1px ").concat("dark"===t.palette.mode?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.2)",", inset 0 1.5px 1px ").concat(V[400],", inset 0 -2px 1px ").concat(V[600],";\n\n  &:hover {\n    background-color: ").concat(V[600],";\n  }\n\n  &.active {\n    background-color: ").concat(V[700],";\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.focusVisible {\n    box-shadow: 0 0 0 4px ").concat("dark"===t.palette.mode?V[300]:V[200],";\n    outline: none;\n  }\n\n  &.disabled {\n    background-color: ").concat("dark"===t.palette.mode?N[700]:N[200],";\n    color: ").concat("dark"===t.palette.mode?N[200]:N[700],";\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n")}),O=e(577903),J=["children"],q=h.forwardRef(function(n,t){var e=n.children,o=(0,O.Z)(n,J);return(0,j.jsxs)("svg",(0,Z.Z)((0,Z.Z)({width:"150",height:"50"},o),{},{ref:t,children:[r||(r=(0,j.jsx)("polygon",{points:"0,50 0,0 150,0 150,50",className:"bg"})),i||(i=(0,j.jsx)("polygon",{points:"0,50 0,0 150,0 150,50",className:"borderEffect"})),(0,j.jsx)("foreignObject",{x:"0",y:"0",width:"150",height:"50",children:(0,j.jsx)("div",{className:"content",children:e})})]}))}),K=h.forwardRef(function(n,t){return(0,j.jsx)(D.z,(0,Z.Z)((0,Z.Z)({},n),{},{slots:{root:Y},ref:t}))}),X={50:"#F0F7FF",100:"#C2E0FF",200:"#99CCF3",400:"#3399FF",500:"#007FFF",600:"#0072E6",700:"#0059B3",800:"#004C99",900:"#003A75"},Y=(0,S.Z)(q)(function(n){var t=n.theme;return"\n  overflow: visible;\n  cursor: pointer;\n  --main-color: ".concat("light"===t.palette.mode?X[600]:X[200],";\n  --hover-color: ").concat("light"===t.palette.mode?X[50]:X[900],";\n  --active-color: ").concat("light"===t.palette.mode?X[100]:X[800],";\n\n  & polygon {\n    fill: transparent;\n    transition: all 800ms ease;\n    pointer-events: none;\n  }\n\n  & .bg {\n    stroke: var(--main-color);\n    stroke-width: 1;\n    filter: drop-shadow(0 4px 16px rgba(0, 0, 0, 0.1));\n    fill: transparent;\n  }\n\n  & .borderEffect {\n    stroke: var(--main-color);\n    stroke-width: 2;\n    stroke-dasharray: 120 600;\n    stroke-dashoffset: 120;\n    fill: transparent;\n  }\n\n  &:hover,\n  &.").concat($.J.focusVisible," {\n    .borderEffect {\n      stroke-dashoffset: -600;\n    }\n\n    .bg {\n      fill: var(--hover-color);\n    }\n  }\n\n  &:focus,\n  &.").concat($.J.focusVisible," {\n    outline: 2px solid ").concat("dark"===t.palette.mode?X[700]:X[200],";\n    outline-offset: 2px;\n  }\n\n  &.").concat($.J.active," {\n    & .bg {\n      fill: var(--active-color);\n      transition: fill 150ms ease-out;\n    }\n  }\n\n  & foreignObject {\n    pointer-events: none;\n\n    & .content {\n      font-size: 0.875rem;\n      font-family: 'IBM Plex Sans', sans-serif;\n      font-weight: 600;\n      line-height: 1.5;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: var(--main-color);\n    }\n\n    & svg {\n      margin: 0 4px;\n    }\n  }")}),G=(0,e(198108).B)(F()),Q={200:"#99CCFF",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0066CC"},nn={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},nt=(0,S.Z)(D.z)(function(n){var t=n.theme;return"\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  text-decoration: none;\n  background-color: ".concat(Q[500],";\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ").concat(Q[500],";\n  box-shadow: 0 2px 1px ").concat("dark"===t.palette.mode?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.2)",", inset 0 1.5px 1px ").concat(Q[400],", inset 0 -2px 1px ").concat(Q[600],";\n\n  &:hover {\n    background-color: ").concat(Q[600],";\n  }\n\n  &.").concat($.J.active," {\n    background-color: ").concat(Q[700],";\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.").concat($.J.focusVisible," {\n    box-shadow: 0 0 0 4px ").concat("dark"===t.palette.mode?Q[300]:Q[200],";\n    outline: none;\n  }\n\n  &.").concat($.J.disabled," {\n    background-color: ").concat("dark"===t.palette.mode?nn[700]:nn[200],";\n    color: ").concat("dark"===t.palette.mode?nn[200]:nn[700],";\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  ")}),ne={200:"#99CCFF",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0066CC"},no={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},ns=(0,S.Z)(D.z)(function(n){var t=n.theme;return"\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ".concat(ne[500],";\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ").concat(ne[500],";\n  box-shadow: 0 2px 1px ").concat("dark"===t.palette.mode?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.2)",", inset 0 1.5px 1px ").concat(ne[400],", inset 0 -2px 1px ").concat(ne[600],";\n\n  &:hover {\n    background-color: ").concat(ne[600],";\n  }\n\n  &.").concat($.J.active," {\n    background-color: ").concat(ne[700],";\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.").concat($.J.focusVisible," {\n    box-shadow: 0 0 0 4px ").concat("dark"===t.palette.mode?ne[300]:ne[200],";\n    outline: none;\n  }\n\n  &.").concat($.J.disabled," {\n    background-color: ").concat("dark"===t.palette.mode?no[700]:no[200],";\n    color: ").concat("dark"===t.palette.mode?no[200]:no[700],";\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n")}),na={200:"#99CCFF",300:"#66B2FF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0066CC"},nr={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},ni=(0,S.Z)(D.z)(function(n){var t=n.theme;return"\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ".concat(na[500],";\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ").concat(na[500],";\n  box-shadow: 0 2px 1px ").concat("dark"===t.palette.mode?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.2)",", inset 0 1.5px 1px ").concat(na[400],", inset 0 -2px 1px ").concat(na[600],";\n\n  &:hover {\n    background-color: ").concat(na[600],";\n  }\n\n  &.").concat($.J.active," {\n    background-color: ").concat(na[700],";\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.").concat($.J.focusVisible," {\n    box-shadow: 0 0 0 4px ").concat("dark"===t.palette.mode?na[300]:na[200],";\n    outline: none;\n  }\n\n  &.").concat($.J.disabled," {\n    background-color: ").concat("dark"===t.palette.mode?nr[700]:nr[200],";\n    color: ").concat("dark"===t.palette.mode?nr[200]:nr[700],";\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n")}),nl=e(302312),nc=["className"],nd=h.forwardRef(function(n,t){var e=n.className,o=(0,O.Z)(n,nc);return(0,j.jsx)(D.z,(0,Z.Z)({ref:t,className:(0,y.default)("cursor-pointer transition text-sm font-sans font-semibold leading-normal bg-violet-500 text-white rounded-lg px-4 py-2 border border-solid border-violet-500 shadow-[0_2px_1px_rgb(45_45_60_/_0.2),_inset_0_1.5px_1px_#a78bfa,_inset_0_-2px_1px_#7c3aed] dark:shadow-[0_2px_1px_rgb(0_0_0/_0.5),_inset_0_1.5px_1px_#a78bfa,_inset_0_-2px_1px_#7c3aed] hover:bg-violet-600 active:bg-violet-700 active:shadow-none active:scale-[0.99] focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none ui-disabled:text-slate-700 ui-disabled:dark:text-slate-200 ui-disabled:bg-slate-200 ui-disabled:dark:bg-slate-700 ui-disabled:cursor-default ui-disabled:shadow-none ui-disabled:dark:shadow-none ui-disabled:hover:bg-slate-200 ui-disabled:hover:dark:bg-slate-700 ui-disabled:border-none",e)},o))}),nu=["className"],np=h.forwardRef(function(n,t){var e=n.className,o=(0,O.Z)(n,nu);return(0,j.jsx)(D.z,(0,Z.Z)({ref:t,className:(0,y.default)("cursor-pointer transition text-sm font-sans font-semibold leading-normal bg-violet-500 text-white rounded-lg px-4 py-2 border border-solid border-violet-500 shadow-[0_2px_1px_rgb(45_45_60_/_0.2),_inset_0_1.5px_1px_#a78bfa,_inset_0_-2px_1px_#7c3aed] dark:shadow-[0_2px_1px_rgb(0_0_0/_0.5),_inset_0_1.5px_1px_#a78bfa,_inset_0_-2px_1px_#7c3aed] hover:bg-violet-600 active:bg-violet-700 active:shadow-none active:scale-[0.99] focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none ui-disabled:text-slate-700 ui-disabled:dark:text-slate-200 ui-disabled:bg-slate-200 ui-disabled:dark:bg-slate-700 ui-disabled:cursor-default ui-disabled:shadow-none ui-disabled:dark:shadow-none ui-disabled:hover:bg-slate-200 ui-disabled:hover:dark:bg-slate-700 ui-disabled:border-none",e)},o))}),nm={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},nb={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function nh(){var n="dark"===(0,nl.Z)().palette.mode;return(0,j.jsx)("style",{children:"\n  .IntroductionButton {\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 600;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    background-color: ".concat(nm[500],";\n    padding: 8px 16px;\n    border-radius: 8px;\n    color: white;\n    transition: all 150ms ease;\n    cursor: pointer;\n    border: 1px solid ").concat(nm[500],";\n    box-shadow: 0 2px 1px ").concat(n?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.2)",", inset 0 1.5px 1px ").concat(nm[400],", inset 0 -2px 1px ").concat(nm[600],";\n  }\n  .IntroductionButton:hover {\n    background-color: ").concat(nm[600],";\n  }\n  .IntroductionButton.base--active {\n    background-color: ").concat(nm[700],";\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n  .IntroductionButton.base--focusVisible {\n    box-shadow: 0 0 0 4px ").concat(n?nm[300]:nm[200],";\n    outline: none;\n  }\n  .IntroductionButton.base--disabled {\n    background-color: ").concat(n?nb[700]:nb[200],";\n    color: ").concat(n?nb[200]:nb[700],";\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  ")})}var nf={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},ng={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function nx(){var n="dark"===(0,nl.Z)().palette.mode;return(0,j.jsx)("style",{children:"\n  .IntroductionButton {\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 600;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    background-color: ".concat(nf[500],";\n    padding: 8px 16px;\n    border-radius: 8px;\n    color: white;\n    transition: all 150ms ease;\n    cursor: pointer;\n    border: 1px solid ").concat(nf[500],";\n    box-shadow: 0 2px 1px ").concat(n?"rgba(0, 0, 0, 0.5)":"rgba(45, 45, 60, 0.2)",", inset 0 1.5px 1px ").concat(nf[400],", inset 0 -2px 1px ").concat(nf[600],";\n  }\n  .IntroductionButton:hover {\n    background-color: ").concat(nf[600],";\n  }\n  .IntroductionButton.base--active {\n    background-color: ").concat(nf[700],";\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n  .IntroductionButton.base--focusVisible {\n    box-shadow: 0 0 0 4px ").concat(n?nf[300]:nf[200],";\n    outline: none;\n  }\n  .IntroductionButton.base--disabled {\n    background-color: ").concat(n?ng[700]:ng[200],";\n    color: ").concat(n?ng[200]:ng[700],";\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  ")})}var nB=e(54286),nk=e(473510),ny={en:{description:"Buttons let users take actions and make choices with a single tap.",location:"/docs/data/base/components/button/button.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>Button</h1><p class="description">Buttons let users take actions and make choices with a single tap.</p>\n\n',{component:"@mui/docs/ComponentLinkHeader",design:!1},{component:"modules/components/ComponentPageTabs.js"},'<h2 id="introduction"><a href="#introduction" class="title-link-to-anchor">Introduction<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The Button component replaces the native HTML <code>&lt;button&gt;</code> element, and offers expanded options for styling and accessibility.</p>\n',{demo:"UnstyledButtonIntroduction",defaultCodeOpen:!1,bg:"gradient"},'<h2 id="component"><a href="#component" class="title-link-to-anchor">Component<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="component"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/Button\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The Button behaves similar to the native HTML <code>&lt;button&gt;</code>, so it wraps around the text that will be displayed on its surface.</p>\n<p>The following demo shows how to create and style two basic buttons.\nNotice that the second button cannot be clicked due to the <code>disabled</code> prop:</p>\n',{demo:"UnstyledButtonsSimple.js"},'<h3 id="anatomy"><a href="#anatomy" class="title-link-to-anchor">Anatomy<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="anatomy"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The Button component is composed of a root <code>&lt;button&gt;</code> slot with no interior slots:</p>\n<div class="MuiCode-root"><pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>base-Button-root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- button text goes here --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="custom-structure"><a href="#custom-structure" class="title-link-to-anchor">Custom structure<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="custom-structure"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Use the <code>slots.root</code> prop to override the root slot with a custom element:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">slots</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token string">\'div\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>slots</code> prop is available on all non-utility Base components.\nSee <a href="/base-ui/guides/overriding-component-structure/">Overriding component structure</a> for full details.</p>\n\n</div></aside><p>If you provide a non-interactive element such as a <code>&lt;span&gt;</code>, the Button component will automatically add the necessary accessibility attributes.</p>\n<p>Compare the attributes on the <code>&lt;span&gt;</code> in this demo with the Button from the previous demo—try inspecting them both with your browser&#39;s dev tools:</p>\n',{demo:"UnstyledButtonsSpan.js"},'<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>If a Button is customized with a non-button element (for instance, <code>&lt;Button slots={{ root: &quot;span&quot; }} /&gt;</code>), it will not submit the form it&#39;s in when clicked.\nSimilarly, <code>&lt;Button slots={{ root: &quot;span&quot; }} type=&quot;reset&quot;&gt;</code> will not reset its parent form.</p>\n\n</div></aside><h3 id="usage-with-typescript"><a href="#usage-with-typescript" class="title-link-to-anchor">Usage with TypeScript<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="usage-with-typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>In TypeScript, you can specify the custom component type used in the <code>slots.root</code> as a generic parameter of the unstyled component. This way, you can safely provide the custom root&#39;s props directly on the component:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token operator">&lt;</span>Button<span class="token operator">&lt;</span><span class="token keyword">typeof</span> CustomComponent<span class="token operator">></span> slots<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> root<span class="token operator">:</span> CustomComponent <span class="token punctuation">}</span><span class="token punctuation">}</span> customProp <span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The same applies for props specific to custom primitive elements:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token operator">&lt;</span>Button<span class="token operator">&lt;</span><span class="token string">\'img\'</span><span class="token operator">></span> slots<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> root<span class="token operator">:</span> <span class="token string">\'img\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> src<span class="token operator">=</span><span class="token string">"button.png"</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="hook"><a href="#hook" class="title-link-to-anchor">Hook<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="hook"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> useButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/useButton\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The <code>useButton</code> hook lets you apply the functionality of a Button to a fully custom component.\nIt returns props to be placed on the custom component, along with fields representing the component&#39;s internal state.</p>\n<p>Hooks <em>do not</em> support <a href="#custom-structure">slot props</a>, but they do support <a href="#customization">customization props</a>.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Hooks give you the most room for customization, but require more work to implement.\nWith hooks, you can take full control over how your component is rendered, and define all the custom props and CSS classes you need.</p>\n<p>You may not need to use hooks unless you find that you&#39;re limited by the customization options of their component counterparts—for instance, if your component requires significantly different <a href="#anatomy">structure</a>.</p>\n\n</div></aside><p>The following demo shows how to build the same buttons as those found in the <a href="#component">Component</a> section above, but with the <code>useButton</code> hook:</p>\n',{demo:"UseButton.js",defaultCodeOpen:!0},'<p>If you use a ref to store a reference to the button, pass it to the <code>useButton</code>&#39;s <code>ref</code> parameter, as shown in the demo above.\nIt will get merged with a ref used internally in the hook.</p>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Do not add the <code>ref</code> parameter to the button element manually, as the correct ref is already a part of the object returned by the <code>getRootProps</code> function.</p>\n\n</div></aside><h2 id="customization"><a href="#customization" class="title-link-to-anchor">Customization<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="customization"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The following features can be used with both components and hooks.\nFor the sake of simplicity, demos, and code snippets primarily feature components.</p>\n\n</div></aside><h3 id="custom-elements"><a href="#custom-elements" class="title-link-to-anchor">Custom elements<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="custom-elements"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The Button accepts a wide range of custom elements beyond HTML elements.\nYou can even use SVGs, as shown in the demo below:</p>\n',{demo:"UnstyledButtonCustom.js",defaultCodeOpen:!1},'<h3 id="using-with-links"><a href="#using-with-links" class="title-link-to-anchor">Using with links<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="using-with-links"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The following demo illustrates how to use the Button as a link, whether using the Base\xa0UI Button itself for the <code>href</code>, or with the <a href="https://nextjs.org/docs/pages/api-reference/components/link">Next.js Link component</a>:</p>\n',{demo:"UnstyledLinkButton.js",defaultCodeOpen:!0},'<h3 id="focus-on-disabled-buttons"><a href="#focus-on-disabled-buttons" class="title-link-to-anchor">Focus on disabled buttons<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="focus-on-disabled-buttons"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Similarly to the native HTML <code>&lt;button&gt;</code> element, the Button component can&#39;t receive focus when it&#39;s disabled.\nThis may reduce its accessibility, as screen readers won&#39;t be able to announce the existence and state of the button.</p>\n<p>The <code>focusableWhenDisabled</code> prop lets you change this behavior.\nWhen this prop is set, the underlying Button does not set the <code>disabled</code> prop.\nInstead, <code>aria-disabled</code> is used, which makes the Button focusable.</p>\n<p>This should be used whenever the disabled Button needs to be read by screen readers.</p>\n<p>Base\xa0UI uses this prop internally in <a href="/base-ui/react-menu/">menu items</a>, making it possible to use the keyboard to navigate to disabled items (in compliance with <a href="https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#x6-7-focusability-of-disabled-controls" target="_blank" rel="noopener nofollow">ARIA guidelines</a>).</p>\n<p>The following demo shows how the <code>focusableWhenDisabled</code> prop works—use the <kbd class="key">Tab</kbd> key to navigate within this document to see that only the second Button accepts the focus:</p>\n',{demo:"UnstyledButtonsDisabledFocus.js"},"<p>The <code>focusableWhenDisabled</code> prop works the same when the root slot is customized, except that the <code>aria-disabled</code> attribute is used no regardless of the prop&#39;s state.\nThe ability to receive focus is controlled internally by the <code>tabindex</code> attribute.</p>\n",{demo:"UnstyledButtonsDisabledFocusCustom.js"}],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Component",level:2,hash:"component",children:[{text:"Anatomy",level:3,hash:"anatomy"},{text:"Custom structure",level:3,hash:"custom-structure"},{text:"Usage with TypeScript",level:3,hash:"usage-with-typescript"}]},{text:"Hook",level:2,hash:"hook",children:[]},{text:"Customization",level:2,hash:"customization",children:[{text:"Custom elements",level:3,hash:"custom-elements"},{text:"Using with links",level:3,hash:"using-with-links"},{text:"Focus on disabled buttons",level:3,hash:"focus-on-disabled-buttons"}]}],title:"React Button component and hook",headers:{productId:"base-ui",title:"React Button component and hook",components:["Button"],hooks:["useButton"],githubLabel:"component: button",waiAria:"https://www.w3.org/WAI/ARIA/apg/patterns/button/"}}},nv={UnstyledButtonIntroduction:{module:"./UnstyledButtonIntroduction/system/index.js",raw:"import * as React from 'react';\nimport { Button as BaseButton, buttonClasses } from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsIntroduction() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <Button>Button</Button>\n      <Button disabled>Disabled</Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  `,\n);\n",moduleTailwind:"./UnstyledButtonIntroduction/tailwind/index.js",rawTailwind:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button as BaseButton } from '@mui/base/Button';\nimport Stack from '@mui/material/Stack';\nimport clsx from 'clsx';\nimport { useTheme } from '@mui/system';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function UnstyledButtonsIntroduction() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <div className={`${isDarkMode ? 'dark' : undefined}`}>\n      <Stack spacing={2} direction=\"row\">\n        <CustomButton>Button</CustomButton>\n        <CustomButton disabled>Disabled</CustomButton>\n      </Stack>\n    </div>\n  );\n}\n\nconst CustomButton = React.forwardRef((props, ref) => {\n  const { className, ...other } = props;\n  return (\n    <BaseButton\n      ref={ref}\n      className={clsx(\n        'cursor-pointer transition text-sm font-sans font-semibold leading-normal bg-violet-500 text-white rounded-lg px-4 py-2 border border-solid border-violet-500 shadow-[0_2px_1px_rgb(45_45_60_/_0.2),_inset_0_1.5px_1px_#a78bfa,_inset_0_-2px_1px_#7c3aed] dark:shadow-[0_2px_1px_rgb(0_0_0/_0.5),_inset_0_1.5px_1px_#a78bfa,_inset_0_-2px_1px_#7c3aed] hover:bg-violet-600 active:bg-violet-700 active:shadow-none active:scale-[0.99] focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none ui-disabled:text-slate-700 ui-disabled:dark:text-slate-200 ui-disabled:bg-slate-200 ui-disabled:dark:bg-slate-700 ui-disabled:cursor-default ui-disabled:shadow-none ui-disabled:dark:shadow-none ui-disabled:hover:bg-slate-200 ui-disabled:hover:dark:bg-slate-700 ui-disabled:border-none',\n        className,\n      )}\n      {...other}\n    />\n  );\n});\n\nCustomButton.propTypes = {\n  className: PropTypes.string,\n};\n",moduleTSTailwind:"./UnstyledButtonIntroduction/tailwind/index.tsx",rawTailwindTS:"import * as React from 'react';\nimport { Button as BaseButton, ButtonProps } from '@mui/base/Button';\nimport Stack from '@mui/material/Stack';\nimport clsx from 'clsx';\nimport { useTheme } from '@mui/system';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function UnstyledButtonsIntroduction() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <div className={`${isDarkMode ? 'dark' : undefined}`}>\n      <Stack spacing={2} direction=\"row\">\n        <CustomButton>Button</CustomButton>\n        <CustomButton disabled>Disabled</CustomButton>\n      </Stack>\n    </div>\n  );\n}\n\nconst CustomButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    const { className, ...other } = props;\n    return (\n      <BaseButton\n        ref={ref}\n        className={clsx(\n          'cursor-pointer transition text-sm font-sans font-semibold leading-normal bg-violet-500 text-white rounded-lg px-4 py-2 border border-solid border-violet-500 shadow-[0_2px_1px_rgb(45_45_60_/_0.2),_inset_0_1.5px_1px_#a78bfa,_inset_0_-2px_1px_#7c3aed] dark:shadow-[0_2px_1px_rgb(0_0_0/_0.5),_inset_0_1.5px_1px_#a78bfa,_inset_0_-2px_1px_#7c3aed] hover:bg-violet-600 active:bg-violet-700 active:shadow-none active:scale-[0.99] focus-visible:shadow-[0_0_0_4px_#ddd6fe] dark:focus-visible:shadow-[0_0_0_4px_#a78bfa] focus-visible:outline-none ui-disabled:text-slate-700 ui-disabled:dark:text-slate-200 ui-disabled:bg-slate-200 ui-disabled:dark:bg-slate-700 ui-disabled:cursor-default ui-disabled:shadow-none ui-disabled:dark:shadow-none ui-disabled:hover:bg-slate-200 ui-disabled:hover:dark:bg-slate-700 ui-disabled:border-none',\n          className,\n        )}\n        {...other}\n      />\n    );\n  },\n);\n",moduleCSS:"./UnstyledButtonIntroduction/css/index.js",rawCSS:"import * as React from 'react';\nimport { Button } from '@mui/base/Button';\nimport { useTheme } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsIntroduction() {\n  return (\n    <React.Fragment>\n      <Stack spacing={2} direction=\"row\">\n        <Button className=\"IntroductionButton\">Button</Button>\n        <Button className=\"IntroductionButton\" disabled>\n          Disabled\n        </Button>\n      </Stack>\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>{`\n  .IntroductionButton {\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 600;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    background-color: ${cyan[500]};\n    padding: 8px 16px;\n    border-radius: 8px;\n    color: white;\n    transition: all 150ms ease;\n    cursor: pointer;\n    border: 1px solid ${cyan[500]};\n    box-shadow: 0 2px 1px ${\n      isDarkMode ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n    }, inset 0 1.5px 1px ${cyan[400]}, inset 0 -2px 1px ${cyan[600]};\n  }\n  .IntroductionButton:hover {\n    background-color: ${cyan[600]};\n  }\n  .IntroductionButton.base--active {\n    background-color: ${cyan[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n  .IntroductionButton.base--focusVisible {\n    box-shadow: 0 0 0 4px ${isDarkMode ? cyan[300] : cyan[200]};\n    outline: none;\n  }\n  .IntroductionButton.base--disabled {\n    background-color: ${isDarkMode ? grey[700] : grey[200]};\n    color: ${isDarkMode ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  `}</style>\n  );\n}\n",moduleTSCSS:"./UnstyledButtonIntroduction/css/index.tsx",rawCSSTS:"import * as React from 'react';\nimport { Button } from '@mui/base/Button';\nimport { useTheme } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsIntroduction() {\n  return (\n    <React.Fragment>\n      <Stack spacing={2} direction=\"row\">\n        <Button className=\"IntroductionButton\">Button</Button>\n        <Button className=\"IntroductionButton\" disabled>\n          Disabled\n        </Button>\n      </Stack>\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>{`\n  .IntroductionButton {\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-weight: 600;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    background-color: ${cyan[500]};\n    padding: 8px 16px;\n    border-radius: 8px;\n    color: white;\n    transition: all 150ms ease;\n    cursor: pointer;\n    border: 1px solid ${cyan[500]};\n    box-shadow: 0 2px 1px ${\n      isDarkMode ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n    }, inset 0 1.5px 1px ${cyan[400]}, inset 0 -2px 1px ${cyan[600]};\n  }\n  .IntroductionButton:hover {\n    background-color: ${cyan[600]};\n  }\n  .IntroductionButton.base--active {\n    background-color: ${cyan[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n  .IntroductionButton.base--focusVisible {\n    box-shadow: 0 0 0 4px ${isDarkMode ? cyan[300] : cyan[200]};\n    outline: none;\n  }\n  .IntroductionButton.base--disabled {\n    background-color: ${isDarkMode ? grey[700] : grey[200]};\n    color: ${isDarkMode ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  `}</style>\n  );\n}\n",tailwindJsxPreview:'<Stack spacing={2} direction="row">\n  <CustomButton>Button</CustomButton>\n  <CustomButton disabled>Disabled</CustomButton>\n</Stack>',cssJsxPreview:'<React.Fragment>\n  <Stack spacing={2} direction="row">\n    <Button className="IntroductionButton">Button</Button>\n    <Button className="IntroductionButton" disabled>\n      Disabled\n    </Button>\n  </Stack>\n  <Styles />\n</React.Fragment>',jsxPreview:"<Button>Button</Button>\n<Button disabled>Disabled</Button>",moduleTS:"./UnstyledButtonIntroduction/system/index.js",rawTS:"import * as React from 'react';\nimport { Button as BaseButton, buttonClasses } from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsIntroduction() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <Button>Button</Button>\n      <Button disabled>Disabled</Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  `,\n);\n"},"UnstyledButtonsSimple.js":{module:"./UnstyledButtonsSimple.js",raw:"import * as React from 'react';\nimport { Button as BaseButton } from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsSimple() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <Button>Button</Button>\n      <Button disabled>Disabled</Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &:active {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.base--disabled {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n);\n",jsxPreview:"<Button>Button</Button>\n<Button disabled>Disabled</Button>",moduleTS:"./UnstyledButtonsSimple.js",rawTS:"import * as React from 'react';\nimport { Button as BaseButton } from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsSimple() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <Button>Button</Button>\n      <Button disabled>Disabled</Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &:active {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &:focus-visible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.base--disabled {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n);\n"},"UnstyledButtonsSpan.js":{module:"./UnstyledButtonsSpan.js",raw:"import * as React from 'react';\nimport { Button as BaseButton, buttonClasses } from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsSpan() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <Button slots={{ root: 'span' }}>Button</Button>\n      <Button slots={{ root: 'span' }} disabled>\n        Disabled\n      </Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n);\n",jsxPreview:"<Button slots={{ root: 'span' }}>Button</Button>\n<Button slots={{ root: 'span' }} disabled>\n  Disabled\n</Button>",moduleTS:"./UnstyledButtonsSpan.js",rawTS:"import * as React from 'react';\nimport { Button as BaseButton, buttonClasses } from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsSpan() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <Button slots={{ root: 'span' }}>Button</Button>\n      <Button slots={{ root: 'span' }} disabled>\n        Disabled\n      </Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n);\n"},"UseButton.js":{module:"./UseButton.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\nimport { useButton } from '@mui/base/useButton';\n\nconst CustomButton = React.forwardRef(function CustomButton(props, ref) {\n  const { children, disabled } = props;\n  const { active, focusVisible, getRootProps } = useButton({\n    ...props,\n    rootRef: ref,\n  });\n\n  return (\n    <CustomButtonRoot\n      {...getRootProps()}\n      className={clsx({\n        active,\n        disabled,\n        focusVisible,\n      })}\n    >\n      {children}\n    </CustomButtonRoot>\n  );\n});\n\nCustomButton.propTypes = {\n  children: PropTypes.node,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n};\n\nexport default function UseButton() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <CustomButton onClick={() => console.log('click!')}>Button</CustomButton>\n      <CustomButton disabled>Disabled</CustomButton>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst CustomButtonRoot = styled('button')(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.active {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.focusVisible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.disabled {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n);\n",jsxPreview:"<CustomButton onClick={() => console.log('click!')}>Button</CustomButton>\n<CustomButton disabled>Disabled</CustomButton>",moduleTS:"./UseButton.js",rawTS:"import * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\nimport { useButton } from '@mui/base/useButton';\nimport { ButtonProps } from '@mui/base/Button';\n\nconst CustomButton = React.forwardRef(function CustomButton(\n  props: ButtonProps,\n  ref: React.ForwardedRef<any>,\n) {\n  const { children, disabled } = props;\n  const { active, focusVisible, getRootProps } = useButton({\n    ...props,\n    rootRef: ref,\n  });\n\n  return (\n    <CustomButtonRoot\n      {...getRootProps()}\n      className={clsx({\n        active,\n        disabled,\n        focusVisible,\n      })}\n    >\n      {children}\n    </CustomButtonRoot>\n  );\n});\n\nexport default function UseButton() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <CustomButton onClick={() => console.log('click!')}>Button</CustomButton>\n      <CustomButton disabled>Disabled</CustomButton>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst CustomButtonRoot = styled('button')(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.active {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.focusVisible {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.disabled {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n);\n"},"UnstyledButtonCustom.js":{module:"./UnstyledButtonCustom.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, buttonClasses } from '@mui/base/Button';\nimport { styled } from '@mui/system';\n\nconst ButtonRoot = React.forwardRef(function ButtonRoot(props, ref) {\n  const { children, ...other } = props;\n\n  return (\n    <svg width=\"150\" height=\"50\" {...other} ref={ref}>\n      <polygon points=\"0,50 0,0 150,0 150,50\" className=\"bg\" />\n      <polygon points=\"0,50 0,0 150,0 150,50\" className=\"borderEffect\" />\n      <foreignObject x=\"0\" y=\"0\" width=\"150\" height=\"50\">\n        <div className=\"content\">{children}</div>\n      </foreignObject>\n    </svg>\n  );\n});\n\nButtonRoot.propTypes = {\n  children: PropTypes.node,\n};\n\nconst SvgButton = React.forwardRef(function SvgButton(props, ref) {\n  return <Button {...props} slots={{ root: CustomButtonRoot }} ref={ref} />;\n});\n\nexport default function UnstyledButtonCustom() {\n  return <SvgButton>Button</SvgButton>;\n}\n\nconst blue = {\n  50: '#F0F7FF',\n  100: '#C2E0FF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E6',\n  700: '#0059B3',\n  800: '#004C99',\n  900: '#003A75',\n};\n\nconst CustomButtonRoot = styled(ButtonRoot)(\n  ({ theme }) => `\n  overflow: visible;\n  cursor: pointer;\n  --main-color: ${theme.palette.mode === 'light' ? blue[600] : blue[200]};\n  --hover-color: ${theme.palette.mode === 'light' ? blue[50] : blue[900]};\n  --active-color: ${theme.palette.mode === 'light' ? blue[100] : blue[800]};\n\n  & polygon {\n    fill: transparent;\n    transition: all 800ms ease;\n    pointer-events: none;\n  }\n\n  & .bg {\n    stroke: var(--main-color);\n    stroke-width: 1;\n    filter: drop-shadow(0 4px 16px rgba(0, 0, 0, 0.1));\n    fill: transparent;\n  }\n\n  & .borderEffect {\n    stroke: var(--main-color);\n    stroke-width: 2;\n    stroke-dasharray: 120 600;\n    stroke-dashoffset: 120;\n    fill: transparent;\n  }\n\n  &:hover,\n  &.${buttonClasses.focusVisible} {\n    .borderEffect {\n      stroke-dashoffset: -600;\n    }\n\n    .bg {\n      fill: var(--hover-color);\n    }\n  }\n\n  &:focus,\n  &.${buttonClasses.focusVisible} {\n    outline: 2px solid ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n    outline-offset: 2px;\n  }\n\n  &.${buttonClasses.active} {\n    & .bg {\n      fill: var(--active-color);\n      transition: fill 150ms ease-out;\n    }\n  }\n\n  & foreignObject {\n    pointer-events: none;\n\n    & .content {\n      font-size: 0.875rem;\n      font-family: 'IBM Plex Sans', sans-serif;\n      font-weight: 600;\n      line-height: 1.5;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: var(--main-color);\n    }\n\n    & svg {\n      margin: 0 4px;\n    }\n  }`,\n);\n",jsxPreview:"<SvgButton>Button</SvgButton>",moduleTS:"./UnstyledButtonCustom.js",rawTS:"import * as React from 'react';\nimport { Button, ButtonProps, buttonClasses } from '@mui/base/Button';\nimport { styled, Theme } from '@mui/system';\n\nconst ButtonRoot = React.forwardRef(function ButtonRoot(\n  props: React.PropsWithChildren<{}>,\n  ref: React.ForwardedRef<any>,\n) {\n  const { children, ...other } = props;\n\n  return (\n    <svg width=\"150\" height=\"50\" {...other} ref={ref}>\n      <polygon points=\"0,50 0,0 150,0 150,50\" className=\"bg\" />\n      <polygon points=\"0,50 0,0 150,0 150,50\" className=\"borderEffect\" />\n      <foreignObject x=\"0\" y=\"0\" width=\"150\" height=\"50\">\n        <div className=\"content\">{children}</div>\n      </foreignObject>\n    </svg>\n  );\n});\n\nconst SvgButton = React.forwardRef(function SvgButton(\n  props: ButtonProps,\n  ref: React.ForwardedRef<any>,\n) {\n  return <Button {...props} slots={{ root: CustomButtonRoot }} ref={ref} />;\n});\n\nexport default function UnstyledButtonCustom() {\n  return <SvgButton>Button</SvgButton>;\n}\n\nconst blue = {\n  50: '#F0F7FF',\n  100: '#C2E0FF',\n  200: '#99CCF3',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E6',\n  700: '#0059B3',\n  800: '#004C99',\n  900: '#003A75',\n};\n\nconst CustomButtonRoot = styled(ButtonRoot)(\n  ({ theme }: { theme: Theme }) => `\n  overflow: visible;\n  cursor: pointer;\n  --main-color: ${theme.palette.mode === 'light' ? blue[600] : blue[200]};\n  --hover-color: ${theme.palette.mode === 'light' ? blue[50] : blue[900]};\n  --active-color: ${theme.palette.mode === 'light' ? blue[100] : blue[800]};\n\n  & polygon {\n    fill: transparent;\n    transition: all 800ms ease;\n    pointer-events: none;\n  }\n\n  & .bg {\n    stroke: var(--main-color);\n    stroke-width: 1;\n    filter: drop-shadow(0 4px 16px rgba(0, 0, 0, 0.1));\n    fill: transparent;\n  }\n\n  & .borderEffect {\n    stroke: var(--main-color);\n    stroke-width: 2;\n    stroke-dasharray: 120 600;\n    stroke-dashoffset: 120;\n    fill: transparent;\n  }\n\n  &:hover,\n  &.${buttonClasses.focusVisible} {\n    .borderEffect {\n      stroke-dashoffset: -600;\n    }\n\n    .bg {\n      fill: var(--hover-color);\n    }\n  }\n\n  &:focus,\n  &.${buttonClasses.focusVisible} {\n    outline: 2px solid ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n    outline-offset: 2px;\n  }\n\n  &.${buttonClasses.active} {\n    & .bg {\n      fill: var(--active-color);\n      transition: fill 150ms ease-out;\n    }\n  }\n\n  & foreignObject {\n    pointer-events: none;\n\n    & .content {\n      font-size: 0.875rem;\n      font-family: 'IBM Plex Sans', sans-serif;\n      font-weight: 600;\n      line-height: 1.5;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: var(--main-color);\n    }\n\n    & svg {\n      margin: 0 4px;\n    }\n  }`,\n);\n"},"UnstyledLinkButton.js":{module:"./UnstyledLinkButton.js",raw:"import * as React from 'react';\nimport { Button as BaseButton, buttonClasses } from '@mui/base/Button';\nimport { prepareForSlot } from '@mui/base/utils';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\nimport Link from 'next/link';\n\nconst LinkSlot = prepareForSlot(Link);\n\nexport default function UnstyledLinkButton() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <Button href=\"https://mui.com/\">Standard link</Button>\n      <Button href=\"https://mui.com/\" slots={{ root: LinkSlot }}>\n        Next.js link\n      </Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  text-decoration: none;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  `,\n);\n",jsxPreview:'<Button href="https://mui.com/">Standard link</Button>\n<Button href="https://mui.com/" slots={{ root: LinkSlot }}>\n  Next.js link\n</Button>',moduleTS:"./UnstyledLinkButton.js",rawTS:"import * as React from 'react';\nimport { Button as BaseButton, buttonClasses } from '@mui/base/Button';\nimport { prepareForSlot } from '@mui/base/utils';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\nimport Link from 'next/link';\n\nconst LinkSlot = prepareForSlot(Link);\n\nexport default function UnstyledLinkButton() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <Button href=\"https://mui.com/\">Standard link</Button>\n      <Button href=\"https://mui.com/\" slots={{ root: LinkSlot }}>\n        Next.js link\n      </Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  text-decoration: none;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n  `,\n);\n"},"UnstyledButtonsDisabledFocus.js":{module:"./UnstyledButtonsDisabledFocus.js",raw:"import * as React from 'react';\nimport { Button as BaseButton, buttonClasses } from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsDisabledFocus() {\n  return (\n    <Stack spacing={2}>\n      <Button disabled>{'focusableWhenDisabled = false'}</Button>\n      <Button disabled focusableWhenDisabled>\n        {'focusableWhenDisabled = true'}\n      </Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n);\n",jsxPreview:"<Button disabled>{'focusableWhenDisabled = false'}</Button>\n<Button disabled focusableWhenDisabled>\n  {'focusableWhenDisabled = true'}\n</Button>",moduleTS:"./UnstyledButtonsDisabledFocus.js",rawTS:"import * as React from 'react';\nimport { Button as BaseButton, buttonClasses } from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsDisabledFocus() {\n  return (\n    <Stack spacing={2}>\n      <Button disabled>{'focusableWhenDisabled = false'}</Button>\n      <Button disabled focusableWhenDisabled>\n        {'focusableWhenDisabled = true'}\n      </Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n);\n"},"UnstyledButtonsDisabledFocusCustom.js":{module:"./UnstyledButtonsDisabledFocusCustom.js",raw:"import * as React from 'react';\nimport { Button as BaseButton, buttonClasses } from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nexport default function UnstyledButtonsDisabledFocusCustom() {\n  return (\n    <Stack spacing={2}>\n      <Button slots={{ root: 'span' }} disabled>\n        {'focusableWhenDisabled = false'}\n      </Button>\n      <Button slots={{ root: 'span' }} disabled focusableWhenDisabled>\n        {'focusableWhenDisabled = true'}\n      </Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n);\n",jsxPreview:"<Button slots={{ root: 'span' }} disabled>\n  {'focusableWhenDisabled = false'}\n</Button>\n<Button slots={{ root: 'span' }} disabled focusableWhenDisabled>\n  {'focusableWhenDisabled = true'}\n</Button>",moduleTS:"./UnstyledButtonsDisabledFocusCustom.js",rawTS:"import * as React from 'react';\nimport {\n  Button as BaseButton,\n  buttonClasses,\n  ButtonTypeMap,\n} from '@mui/base/Button';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\nimport { PolymorphicComponent } from '@mui/base/utils';\n\nexport default function UnstyledButtonsDisabledFocusCustom() {\n  return (\n    <Stack spacing={2}>\n      <Button slots={{ root: 'span' }} disabled>\n        {'focusableWhenDisabled = false'}\n      </Button>\n      <Button slots={{ root: 'span' }} disabled focusableWhenDisabled>\n        {'focusableWhenDisabled = true'}\n      </Button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  200: '#99CCFF',\n  300: '#66B2FF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0066CC',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Button = styled(BaseButton)(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  background-color: ${blue[500]};\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  transition: all 150ms ease;\n  cursor: pointer;\n  border: 1px solid ${blue[500]};\n  box-shadow: 0 2px 1px ${\n    theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.5)' : 'rgba(45, 45, 60, 0.2)'\n  }, inset 0 1.5px 1px ${blue[400]}, inset 0 -2px 1px ${blue[600]};\n\n  &:hover {\n    background-color: ${blue[600]};\n  }\n\n  &.${buttonClasses.active} {\n    background-color: ${blue[700]};\n    box-shadow: none;\n    transform: scale(0.99);\n  }\n\n  &.${buttonClasses.focusVisible} {\n    box-shadow: 0 0 0 4px ${theme.palette.mode === 'dark' ? blue[300] : blue[200]};\n    outline: none;\n  }\n\n  &.${buttonClasses.disabled} {\n    background-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n    color: ${theme.palette.mode === 'dark' ? grey[200] : grey[700]};\n    border: 0;\n    cursor: default;\n    box-shadow: none;\n    transform: scale(1);\n  }\n`,\n) as PolymorphicComponent<ButtonTypeMap>;\n"}};nv.scope={process:{},import:{react:f,"@mui/base/Button":g,"@mui/system":x,"@mui/material/Stack":B,"prop-types":k,clsx:y,"@mui/base/useButton":v,"@mui/base/utils":C,"next/link":w}};var nC={"./UnstyledButtonIntroduction/system/index.js":function(){return o||(o=(0,j.jsxs)(_.Z,{spacing:2,direction:"row",children:[(0,j.jsx)(M,{children:"Button"}),(0,j.jsx)(M,{disabled:!0,children:"Disabled"})]}))},"./UnstyledButtonsSimple.js":function(){return s||(s=(0,j.jsxs)(_.Z,{spacing:2,direction:"row",children:[(0,j.jsx)(z,{children:"Button"}),(0,j.jsx)(z,{disabled:!0,children:"Disabled"})]}))},"./UnstyledButtonsSpan.js":function(){return(0,j.jsxs)(_.Z,{spacing:2,direction:"row",children:[(0,j.jsx)(U,{slots:{root:"span"},children:"Button"}),(0,j.jsx)(U,{slots:{root:"span"},disabled:!0,children:"Disabled"})]})},"./UseButton.js":function(){return(0,j.jsxs)(_.Z,{spacing:2,direction:"row",children:[(0,j.jsx)(L,{onClick:function(){return console.log("click!")},children:"Button"}),a||(a=(0,j.jsx)(L,{disabled:!0,children:"Disabled"}))]})},"./UnstyledButtonCustom.js":function(){return l||(l=(0,j.jsx)(K,{children:"Button"}))},"./UnstyledLinkButton.js":function(){return(0,j.jsxs)(_.Z,{spacing:2,direction:"row",children:[c||(c=(0,j.jsx)(nt,{href:"https://mui.com/",children:"Standard link"})),(0,j.jsx)(nt,{href:"https://mui.com/",slots:{root:G},children:"Next.js link"})]})},"./UnstyledButtonsDisabledFocus.js":function(){return d||(d=(0,j.jsxs)(_.Z,{spacing:2,children:[(0,j.jsx)(ns,{disabled:!0,children:"focusableWhenDisabled = false"}),(0,j.jsx)(ns,{disabled:!0,focusableWhenDisabled:!0,children:"focusableWhenDisabled = true"})]}))},"./UnstyledButtonsDisabledFocusCustom.js":function(){return(0,j.jsxs)(_.Z,{spacing:2,children:[(0,j.jsx)(ni,{slots:{root:"span"},disabled:!0,children:"focusableWhenDisabled = false"}),(0,j.jsx)(ni,{slots:{root:"span"},disabled:!0,focusableWhenDisabled:!0,children:"focusableWhenDisabled = true"})]})},"./UnstyledButtonIntroduction/tailwind/index.js":function(){var n="dark"===(0,nl.Z)().palette.mode;return(0,j.jsx)("div",{className:"".concat(n?"dark":void 0),children:u||(u=(0,j.jsxs)(_.Z,{spacing:2,direction:"row",children:[(0,j.jsx)(nd,{children:"Button"}),(0,j.jsx)(nd,{disabled:!0,children:"Disabled"})]}))})},"./UnstyledButtonIntroduction/tailwind/index.tsx":function(){var n="dark"===(0,nl.Z)().palette.mode;return(0,j.jsx)("div",{className:"".concat(n?"dark":void 0),children:p||(p=(0,j.jsxs)(_.Z,{spacing:2,direction:"row",children:[(0,j.jsx)(np,{children:"Button"}),(0,j.jsx)(np,{disabled:!0,children:"Disabled"})]}))})},"./UnstyledButtonIntroduction/css/index.js":function(){return m||(m=(0,j.jsxs)(h.Fragment,{children:[(0,j.jsxs)(_.Z,{spacing:2,direction:"row",children:[(0,j.jsx)(D.z,{className:"IntroductionButton",children:"Button"}),(0,j.jsx)(D.z,{className:"IntroductionButton",disabled:!0,children:"Disabled"})]}),(0,j.jsx)(nh,{})]}))},"./UnstyledButtonIntroduction/css/index.tsx":function(){return b||(b=(0,j.jsxs)(h.Fragment,{children:[(0,j.jsxs)(_.Z,{spacing:2,direction:"row",children:[(0,j.jsx)(D.z,{className:"IntroductionButton",children:"Button"}),(0,j.jsx)(D.z,{className:"IntroductionButton",disabled:!0,children:"Disabled"})]}),(0,j.jsx)(nx,{})]}))}},nw={"@mui/docs/ComponentLinkHeader":nB.Z,"modules/components/ComponentPageTabs.js":nk.Z}},797475:function(n,t,e){"use strict";e.r(t),e.d(t,{useButton:function(){return o.U}});var o=e(460589)},344684:function(n,t,e){"use strict";e.r(t),e.d(t,{ClassNameConfigurator:function(){return a.A},appendOwnerState:function(){return o.$},areArraysEqual:function(){return s.H},extractEventHandlers:function(){return r._},isHostComponent:function(){return i.X},mergeSlotProps:function(){return u.L},prepareForSlot:function(){return p.B},resolveComponentProps:function(){return l.x},useRootElementName:function(){return c.F},useSlotProps:function(){return d.y}});var o=e(318692),s=e(131159),a=e(851692),r=e(202294),i=e(306806),l=e(576799),c=e(411182),d=e(996125),u=e(43866),p=e(198108)},198108:function(n,t,e){"use strict";e.d(t,{B:function(){return i}});var o=e(778521),s=e(577903),a=e(470079),r=["ownerState"];function i(n){return a.forwardRef(function(t,e){t.ownerState;var i=(0,s.Z)(t,r);return a.createElement(n,(0,o.Z)((0,o.Z)({},i),{},{ref:e}))})}},54286:function(n,t,e){"use strict";e.d(t,{Z:function(){return F}});var o,s,a,r,i,l,c=e(470079),d=e(432216),u=e(553093),p=e(388339),m=e(502894),b=e(632820),h=e(735250),f=(0,b.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{fill:"#FDB300",d:"M5.24 2.7L12 2l6.76.7L24 9.48 12 23 0 9.49z"}),(0,h.jsx)("path",{fill:"#EA6C00",d:"M4.85 9l7.13 14L0 9zM19.1 9l-7.12 14L23.95 9z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M4.85 9H19.1l-7.12 14z"}),(0,h.jsxs)("g",{children:[(0,h.jsx)("path",{fill:"#FDD231",d:"M11.98 2l-6.75.65-.38 6.34zM11.98 2l6.75.65.37 6.34z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M23.95 9l-5.22-6.35.37 6.34zM0 9l5.23-6.35-.38 6.34z"}),(0,h.jsx)("path",{fill:"#FEEEB7",d:"M11.98 2L4.85 9H19.1z"})]})]}),"Sketch"),g=(0,b.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M8 24a4 4 0 004-4v-4H8a4 4 0 000 8z",fill:"#0ACF83"}),(0,h.jsx)("path",{d:"M4 12a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#A259FF"}),(0,h.jsx)("path",{d:"M4 4a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#F24E1E"}),(0,h.jsx)("path",{d:"M12 0h4a4 4 0 010 8h-4V0z",fill:"#FF7262"}),(0,h.jsx)("path",{d:"M20 12a4 4 0 11-8 0 4 4 0 018 0z",fill:"#1ABCFE"})]}),"Figma"),x=(0,b.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M5.54 2h12.92C20.42 2 22 3.6 22 5.58v12.55a3.56 3.56 0 01-3.54 3.58H5.54A3.56 3.56 0 012 18.13V5.58A3.56 3.56 0 015.54 2z",fill:"#470137"}),(0,h.jsx)("path",{d:"M12.52 7.28L10 11.45l2.68 4.41c.01.04.02.07.01.1 0 .04-.04.01-.09.02H10.7c-.13 0-.22 0-.28-.1l-.54-1.04c-.17-.35-.36-.7-.57-1.06l-.6-1.1h-.02c-.17.36-.36.73-.56 1.09l-.57 1.07-.57 1.06c-.04.09-.1.1-.2.1H4.94c-.03 0-.06.01-.06-.03 0-.03 0-.07.02-.1l2.6-4.28-2.53-4.31c-.03-.04-.04-.07-.02-.09.02-.02.05-.03.09-.03h1.9a.5.5 0 01.11.01c.04.02.06.05.09.08.16.36.34.72.53 1.09l.6 1.06c.2.36.39.71.57 1.07h.01c.18-.37.36-.73.55-1.08.18-.36.37-.71.57-1.06l.56-1.06c0-.04.02-.07.05-.09.03-.01.06-.02.1-.01h1.77c.04-.01.09.01.1.06 0 0-.01.04-.03.05zM16.39 16.16c-.62 0-1.24-.12-1.8-.38a2.92 2.92 0 01-1.27-1.15 3.65 3.65 0 01-.46-1.91 3.46 3.46 0 011.8-3.08 4.27 4.27 0 012.29-.48c.07 0 .16 0 .26.02V6.52c0-.06.02-.1.08-.1H19c.04 0 .08.03.08.07v8.01l.02.51.03.49c0 .06-.02.11-.08.13a6.37 6.37 0 01-2.65.53zm.82-1.69v-3.7a2.11 2.11 0 00-1.45.16c-.29.15-.53.36-.71.63-.19.27-.28.63-.28 1.06 0 .3.04.6.14.87a1.44 1.44 0 00.95.93c.23.08.46.11.7.11a4.49 4.49 0 00.65-.06z",fill:"#FF61F6"})]}),"AdobeXD"),B=(0,b.Z)((0,h.jsxs)("g",{fill:"currentColor",fillRule:"nonzero",children:[(0,h.jsx)("path",{d:"M5.84 3c-.52 0-1 .25-1.3.67l-1.4 2.05c-.06.09-.1.19-.14.28h8V3H5.84zM20.86 5.72l-1.4-2.05c-.3-.42-.81-.67-1.33-.67H13v3h8c-.05-.1-.08-.2-.14-.28z",fillOpacity:".79"}),(0,h.jsx)("path",{d:"M20.98 7H3.02L3 7.11V19.4c0 .89.71 1.61 1.58 1.61h14.84A1.6 1.6 0 0021 19.4V7.1L20.98 7zm-6.87 5.36H9.89a1.6 1.6 0 01-1.58-1.61c0-.89.7-1.6 1.58-1.6h4.22c.87 0 1.58.71 1.58 1.6 0 .89-.7 1.6-1.58 1.6z",fillOpacity:".87"})]}),"BundleSize"),k=(0,b.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M6.92 6.1l2.33 7.99 2.32-8h6.3v.8l-2.37 4.14c.83.27 1.46.76 1.89 1.47.43.71.64 1.55.64 2.51 0 1.2-.31 2.2-.94 3a2.93 2.93 0 01-2.42 1.22 2.9 2.9 0 01-1.96-.72 4.25 4.25 0 01-1.23-1.96l1.31-.55c.2.5.45.9.76 1.18.32.28.69.43 1.12.43.44 0 .82-.26 1.13-.76.31-.51.47-1.12.47-1.84 0-.79-.17-1.4-.5-1.83-.38-.5-.99-.76-1.81-.76h-.64v-.78l2.24-3.92h-2.7l-.16.26-3.3 11.25h-.15l-2.4-8.14-2.41 8.14h-.16L.43 6.1H2.1l2.33 7.99L6 8.71 5.24 6.1h1.68z",fill:"#005A9C"}),(0,h.jsx)("g",{fill:"currentColor",children:(0,h.jsx)("path",{d:"M23.52 6.25l.28 1.62-.98 1.8s-.38-.76-1.01-1.19c-.53-.35-.87-.43-1.41-.33-.7.14-1.48.93-1.82 1.9-.41 1.18-.42 1.74-.43 2.26a4.9 4.9 0 00.11 1.33s-.6-1.06-.59-2.61c0-1.1.19-2.11.72-3.1.47-.87 1.17-1.4 1.8-1.45.63-.07 1.14.23 1.53.55.42.33.83 1.07.83 1.07l.97-1.85zM23.64 15.4s-.43.75-.7 1.04c-.27.28-.76.79-1.36 1.04-.6.25-.91.3-1.5.25a3.03 3.03 0 01-1.34-.52 5.08 5.08 0 01-1.67-2.04s.24.75.39 1.07c.09.18.36.74.74 1.23a3.5 3.5 0 002.1 1.42c1.04.18 1.76-.27 1.94-.38a5.32 5.32 0 001.4-1.43c.1-.14.25-.43.25-.43l-.25-1.25z"})})]}),"W3C"),y=(0,b.Z)((0,h.jsxs)("g",{fill:"none",fillRule:"evenodd",children:[(0,h.jsx)("circle",{fill:"#737373",cx:"12",cy:"12",r:"12"}),(0,h.jsx)("path",{fill:"#BDBDBD",d:"M4 4h16v16H4z"}),(0,h.jsx)("path",{fill:"#FFF",d:"M12 20l8-16H4z"})]}),"MaterialDesign"),v=e(871379),C=(0,m.ZP)("ul")({margin:0,padding:0,listStyle:"none",display:"flex",flexWrap:"wrap",gap:8,"& .MuiChip-root":{height:26,padding:"0 8px",gap:6,"& .MuiChip-label":{padding:0},"& .MuiChip-iconSmall":{margin:0,fontSize:14}}}),w={"material-ui":"@mui/material","joy-ui":"@mui/joy","base-ui":"@mui/base",system:"@mui/system"};function F(n){var t,e,m=n.markdown.headers,b=n.design,F=(0,v.qM)(),D=null!==(t=null!==(e=m.packageName)&&void 0!==e?e:w[m.productId])&&void 0!==t?t:"@mui/material";return(0,h.jsxs)(C,{children:[m.githubLabel?(0,h.jsx)("li",{children:(0,h.jsx)(d.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"".concat("https://github.com/mui/material-ui","/labels/").concat(encodeURIComponent(m.githubLabel)),icon:o||(o=(0,h.jsx)(p.default,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":F("githubLabel"),"data-ga-event-split":"0.1",label:F("githubLabel")})}):null,(0,h.jsx)("li",{children:(0,h.jsx)(u.Z,{title:F("bundleSizeTooltip"),describeChild:!0,children:(0,h.jsx)(d.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://bundlephobia.com/package/".concat(D,"@latest"),icon:s||(s=(0,h.jsx)(B,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":F("bundleSize"),"data-ga-event-split":"0.1",label:F("bundleSize")})})}),m.waiAria?(0,h.jsx)("li",{children:(0,h.jsx)(d.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:m.waiAria,icon:a||(a=(0,h.jsx)(k,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"WAI-ARIA","data-ga-event-split":"0.1",label:"WAI-ARIA"})}):null,m.materialDesign?(0,h.jsx)("li",{children:(0,h.jsx)(d.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:m.materialDesign,icon:r||(r=(0,h.jsx)(y,{})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Material Design","data-ga-event-split":"0.1",label:"Material Design"})}):null,!1===b?null:(0,h.jsxs)(c.Fragment,{children:[i||(i=(0,h.jsx)("li",{children:(0,h.jsx)(d.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/figma-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(g,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Figma","data-ga-event-split":"0.1",label:"Figma"})})),"@mui/joy"===D?null:l||(l=(0,h.jsxs)(c.Fragment,{children:[(0,h.jsx)("li",{children:(0,h.jsx)(d.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/adobe-xd-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(x,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Adobe XD","data-ga-event-split":"0.1",label:"Adobe"})}),(0,h.jsx)("li",{children:(0,h.jsx)(d.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/sketch-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(f,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Sketch","data-ga-event-split":"0.1",label:"Sketch"})})]}))]})]})}},270405:function(n,t,e){"use strict";e.r(t),e.d(t,{default:function(){return o.Z},stackClasses:function(){return s}});var o=e(815577),s=(0,e(344443).Z)("MuiStack",["root"])},884835:function(n,t,e){"use strict";var o=e(311596);function s(){}function a(){}a.resetWarningCache=s,n.exports=function(){function n(n,t,e,s,a,r){if(r!==o){var i=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return n}n.isRequired=n;var e={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:t,element:n,elementType:n,instanceOf:t,node:n,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:s};return e.PropTypes=e,e}},639519:function(n,t,e){n.exports=e(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},388339:function(n,t,e){"use strict";var o=e(11234);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var s=o(e(122268)),a=e(735250);t.default=(0,s.default)((0,a.jsx)("path",{d:"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2M7 9h10c.55 0 1 .45 1 1s-.45 1-1 1H7c-.55 0-1-.45-1-1s.45-1 1-1m6 5H7c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1m4-6H7c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1"}),"ChatRounded")}}]);