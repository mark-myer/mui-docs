(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[19661],{396500:function(n,s,a){"use strict";a.r(s),a.d(s,{buttonClasses:function(){return o.Z},default:function(){return t.Z},getButtonUtilityClass:function(){return o.F}});var t=a(651600),o=a(623477)},721322:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return z}});var t,o,e,p,r,c,l,i,u,d={};a.r(d),a.d(d,{demoComponents:function(){return q},demos:function(){return $},docs:function(){return L},srcComponents:function(){return K}});var k=a(778521),m=a(470079),h=a.t(m,2),g=a(652755),y=a(201349),b=a(396500),f=a(639519),x=a(337291),v=a(651600),C=a(735250),w=(0,x.Z)({root:{background:"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)",border:0,borderRadius:3,boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)",color:"white",height:48,padding:"0 30px"}}),B=a(483654),S=(0,B.Z)(v.Z)({background:"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)",border:0,borderRadius:3,boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)",color:"white",height:48,padding:"0 30px"}),M=a(980830),R=(0,M.Z)({root:{background:"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)",border:0,borderRadius:3,boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)",color:"white",height:48,padding:"0 30px"}})(function(n){var s=n.classes;return(0,C.jsx)(v.Z,{className:s.root,children:"Styled with HOC API"})}),F=(0,x.Z)({root:{color:"red","& p":{margin:0,color:"green","& span":{color:"blue"}}}}),j=a(577903),P=["color"],T=(0,x.Z)({root:{background:function(n){return"red"===n.color?"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)":"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)"},border:0,borderRadius:3,boxShadow:function(n){return"red"===n.color?"0 3px 5px 2px rgba(255, 105, 135, .3)":"0 3px 5px 2px rgba(33, 203, 243, .3)"},color:"white",height:48,padding:"0 30px",margin:8}});function H(n){n.color;var s=(0,j.Z)(n,P),a=T(n);return(0,C.jsx)(v.Z,(0,k.Z)({className:a.root},s))}var A=["color"],E=(0,B.Z)(function(n){n.color;var s=(0,j.Z)(n,A);return(0,C.jsx)(v.Z,(0,k.Z)({},s))})({background:function(n){return"red"===n.color?"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)":"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)"},border:0,borderRadius:3,boxShadow:function(n){return"red"===n.color?"0 3px 5px 2px rgba(255, 105, 135, .3)":"0 3px 5px 2px rgba(33, 203, 243, .3)"},color:"white",height:48,padding:"0 30px",margin:8}),I=["classes","color"],Z=(0,M.Z)({root:{background:function(n){return"red"===n.color?"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)":"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)"},border:0,borderRadius:3,boxShadow:function(n){return"red"===n.color?"0 3px 5px 2px rgba(255, 105, 135, .3)":"0 3px 5px 2px rgba(33, 203, 243, .3)"},color:"white",height:48,padding:"0 30px",margin:8}})(function(n){var s=n.classes,a=(n.color,(0,j.Z)(n,I));return(0,C.jsx)(v.Z,(0,k.Z)({className:s.root},a))}),N=a(863363),O=a(191138),U=a(577814),V=(0,x.Z)(function(n){return{root:function(s){return{backgroundColor:s.backgroundColor,color:n.color}}}}),_=m.memo(function(n){var s=V(n),a=(0,O.Z)(),t=m.useRef(1);return m.useEffect(function(){t.current+=1}),(0,C.jsxs)("div",{className:s.root,children:["rendered ",t.current," times",c||(c=(0,C.jsx)("br",{})),"color: ",a.color,l||(l=(0,C.jsx)("br",{})),"backgroundColor: ",n.backgroundColor]})}),L={en:{description:"The legacy styling solution for Material\xa0UI, now deprecated and not recommended for use.",location:"/docs/data/styles/basics/basics.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>@mui/styles (LEGACY)</h1><p class="description">The legacy styling solution for Material\xa0UI, now deprecated and not recommended for use.</p>\n\n<aside class="MuiCallout-root MuiCallout-error">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#error-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p><code>@mui/styles</code> was deprecated with the release of MUI\xa0Core v5 in late 2021.\nIt depended on <a href="https://cssinjs.org/">JSS</a> as a styling solution, which is no longer used in <code>@mui/material</code>.</p>\n<p><code>@mui/styles</code> is not compatible with <a href="https://react.dev/reference/react/StrictMode">React.StrictMode</a> or React 18, and it will not be updated.</p>\n<p>This documentation remains here for those working on legacy projects, but we <strong>strongly discourage</strong> you from using <code>@mui/styles</code> when creating a new app with Material\xa0UI—you <em>will</em> face unresolvable dependency issues.</p>\n<p>Please use <a href="/system/getting-started/"><code>@mui/system</code></a> instead.</p>\n\n</div></aside><h2 id="installation"><a href="#installation" class="title-link-to-anchor">Installation<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="installation"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>To install and save in your <code>package.json</code> dependencies, run:</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>next</code> tag is used to download the latest <b>pre-release</b>, v6 version. Remove it to get the current stable version.</p>\n\n</div></aside><!-- #default-branch-switch -->\n\n<div class="MuiCode-root"><pre><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> @mui/styles@next\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="getting-started"><a href="#getting-started" class="title-link-to-anchor">Getting started<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="getting-started"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>There are 3 possible APIs you can use to generate and apply styles, however they all share the same underlying logic.</p>\n<h3 id="hook-api"><a href="#hook-api" class="title-link-to-anchor">Hook API<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="hook-api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> makeStyles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> useStyles <span class="token operator">=</span> <span class="token function">makeStyles</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> <span class="token string">\'0 3px 5px 2px rgba(255, 105, 135, .3)\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">\'0 30px\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Hook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> classes <span class="token operator">=</span> <span class="token function">useStyles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>classes<span class="token punctuation">.</span>root<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Hook<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"Hook.js"},'<h3 id="styled-components-api"><a href="#styled-components-api" class="title-link-to-anchor">Styled components API<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="styled-components-api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Note: this only applies to the calling syntax – style definitions still use a JSS object.\nYou can also <a href="/system/styles/advanced/#string-templates">change this behavior</a>, with some limitations.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> MyButton <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Button<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> <span class="token string">\'0 3px 5px 2px rgba(255, 105, 135, .3)\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">\'0 30px\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">StyledComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyButton</span></span><span class="token punctuation">></span></span>Styled Components<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyButton</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"StyledComponents.js"},'<h3 id="higher-order-component-api"><a href="#higher-order-component-api" class="title-link-to-anchor">Higher-order component API<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="higher-order-component-api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">\'prop-types\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> withStyles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> <span class="token string">\'0 3px 5px 2px rgba(255, 105, 135, .3)\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">\'0 30px\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">HigherOrderComponent</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> classes <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>classes<span class="token punctuation">.</span>root<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Higher<span class="token operator">-</span>order component<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nHigherOrderComponent<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">classes</span><span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withStyles</span><span class="token punctuation">(</span>styles<span class="token punctuation">)</span><span class="token punctuation">(</span>HigherOrderComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"HigherOrderComponent.js"},'<h2 id="nesting-selectors"><a href="#nesting-selectors" class="title-link-to-anchor">Nesting selectors<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="nesting-selectors"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>You can nest selectors to target elements inside the current class or component.\nThe following example uses the Hook API, but it works the same way with the other APIs.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> useStyles <span class="token operator">=</span> <span class="token function">makeStyles</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'red\'</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'&amp; p\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'green\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'&amp; span\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'blue\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"NestedStylesHook.js",defaultCodeOpen:!1},'<h2 id="adapting-based-on-props"><a href="#adapting-based-on-props" class="title-link-to-anchor">Adapting based on props<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="adapting-based-on-props"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>You can pass a function to <code>makeStyles</code> (&quot;interpolation&quot;)\nin order to adapt the generated value based on the component&#39;s props.\nThe function can be provided at the style rule level, or at the CSS property level:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">const</span> useStyles <span class="token operator">=</span> <span class="token function">makeStyles</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// style rule</span>\n  <span class="token function-variable function">foo</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> props<span class="token punctuation">.</span>backgroundColor<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// CSS property</span>\n    <span class="token function-variable function">color</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> props<span class="token punctuation">.</span>color<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Simulated props for the purpose of the example</span>\n  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">\'black\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token comment">// Pass the props as the first argument of useStyles()</span>\n  <span class="token keyword">const</span> classes <span class="token operator">=</span> <span class="token function">useStyles</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>classes<span class="token punctuation">.</span>foo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>classes<span class="token punctuation">.</span>bar<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>This button component has a <code>color</code> prop that changes its color:</p>\n<h3 id="adapting-the-hook-api"><a href="#adapting-the-hook-api" class="title-link-to-anchor">Adapting the hook API<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="adapting-the-hook-api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3>',{demo:"AdaptingHook.js"},'<h3 id="adapting-the-styled-components-api"><a href="#adapting-the-styled-components-api" class="title-link-to-anchor">Adapting the styled components API<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="adapting-the-styled-components-api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3>',{demo:"AdaptingStyledComponents.js"},'<h3 id="adapting-the-higher-order-component-api"><a href="#adapting-the-higher-order-component-api" class="title-link-to-anchor">Adapting the higher-order component API<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="adapting-the-higher-order-component-api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3>',{demo:"AdaptingHOC.js"},'<h3 id="stress-test"><a href="#stress-test" class="title-link-to-anchor">Stress test<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="stress-test"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>In the following stress test, you can update the <em>theme color</em> and the <em>background-color property</em> live:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> useStyles <span class="token operator">=</span> <span class="token function">makeStyles</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> props<span class="token punctuation">.</span>backgroundColor<span class="token punctuation">,</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>color<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"StressTest.js"},'<h2 id="using-the-theme-context"><a href="#using-the-theme-context" class="title-link-to-anchor">Using the theme context<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="using-the-theme-context"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Starting from v5, Material\xa0UI no longer uses JSS as its default styling solution. If you still want to use the utilities exported by <code>@mui/styles</code> and they depend on the <code>theme</code>, you will need to provide the <code>theme</code> as part of the context. For this, you can use the <code>ThemeProvider</code> component available in <code>@mui/styles</code>, or, if you are already using <code>@mui/material</code>, you should use the one exported from <code>@mui/material/styles</code> so that the same <code>theme</code> is available for components from &#39;@mui/material&#39;.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> makeStyles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createTheme<span class="token punctuation">,</span> ThemeProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> useStyles <span class="token operator">=</span> <span class="token function">makeStyles</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> classes <span class="token operator">=</span> <span class="token function">useStyles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>classes<span class="token punctuation">.</span>root<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n'],toc:[{text:"Installation",level:2,hash:"installation",children:[]},{text:"Getting started",level:2,hash:"getting-started",children:[{text:"Hook API",level:3,hash:"hook-api"},{text:"Styled components API",level:3,hash:"styled-components-api"},{text:"Higher-order component API",level:3,hash:"higher-order-component-api"}]},{text:"Nesting selectors",level:2,hash:"nesting-selectors",children:[]},{text:"Adapting based on props",level:2,hash:"adapting-based-on-props",children:[{text:"Adapting the hook API",level:3,hash:"adapting-the-hook-api"},{text:"Adapting the styled components API",level:3,hash:"adapting-the-styled-components-api"},{text:"Adapting the higher-order component API",level:3,hash:"adapting-the-higher-order-component-api"},{text:"Stress test",level:3,hash:"stress-test"}]},{text:"Using the theme context",level:2,hash:"using-the-theme-context",children:[]}],title:"@mui/styles (LEGACY)",headers:{components:[]}}},$={"Hook.js":{module:"./Hook.js",raw:"import * as React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Button from '@mui/material/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Styled with Hook API</Button>;\n}\n",jsxPreview:"<Button className={classes.root}>Styled with Hook API</Button>",moduleTS:"./Hook.js",rawTS:"import * as React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Button from '@mui/material/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Styled with Hook API</Button>;\n}\n"},"StyledComponents.js":{module:"./StyledComponents.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/styles';\nimport Button from '@mui/material/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled with styled-components API</MyButton>;\n}\n",jsxPreview:"<MyButton>Styled with styled-components API</MyButton>",moduleTS:"./StyledComponents.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/styles';\nimport Button from '@mui/material/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled with styled-components API</MyButton>;\n}\n"},"HigherOrderComponent.js":{module:"./HigherOrderComponent.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@mui/styles';\nimport Button from '@mui/material/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction UnstyledComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Styled with HOC API</Button>;\n}\n\nUnstyledComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(UnstyledComponent);\n",moduleTS:"./HigherOrderComponent.js",rawTS:"import * as React from 'react';\nimport { withStyles, WithStyles } from '@mui/styles';\nimport Button from '@mui/material/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction UnstyledComponent(props: WithStyles<typeof styles>) {\n  const { classes } = props;\n  return <Button className={classes.root}>Styled with HOC API</Button>;\n}\n\nexport default withStyles(styles)(UnstyledComponent);\n"},"NestedStylesHook.js":{module:"./NestedStylesHook.js",raw:"import * as React from 'react';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    color: 'red',\n    '& p': {\n      margin: 0,\n      color: 'green',\n      '& span': {\n        color: 'blue',\n      },\n    },\n  },\n});\n\nexport default function NestedStylesHook() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      This is red since it is inside the root.\n      <p>\n        This is green since it is inside the paragraph{' '}\n        <span>and this is blue since it is inside the span</span>\n      </p>\n    </div>\n  );\n}\n",jsxPreview:"\nThis is red since it is inside the root.\n<p>\n  This is green since it is inside the paragraph{' '}\n  <span>and this is blue since it is inside the span</span>\n</p>",moduleTS:"./NestedStylesHook.js",rawTS:"import * as React from 'react';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    color: 'red',\n    '& p': {\n      margin: 0,\n      color: 'green',\n      '& span': {\n        color: 'blue',\n      },\n    },\n  },\n});\n\nexport default function NestedStylesHook() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      This is red since it is inside the root.\n      <p>\n        This is green since it is inside the paragraph{' '}\n        <span>and this is blue since it is inside the span</span>\n      </p>\n    </div>\n  );\n}\n"},"AdaptingHook.js":{module:"./AdaptingHook.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@mui/styles';\nimport Button from '@mui/material/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: (props) =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: (props) =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    margin: 8,\n  },\n});\n\nfunction MyButton(props) {\n  const { color, ...other } = props;\n  const classes = useStyles(props);\n  return <Button className={classes.root} {...other} />;\n}\n\nMyButton.propTypes = {\n  color: PropTypes.oneOf(['blue', 'red']).isRequired,\n};\n\nexport default function AdaptingHook() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n",jsxPreview:'<React.Fragment>\n  <MyButton color="red">Red</MyButton>\n  <MyButton color="blue">Blue</MyButton>\n</React.Fragment>',moduleTS:"./AdaptingHook.js",rawTS:"import * as React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Button, { ButtonProps as MuiButtonProps } from '@mui/material/Button';\n\ninterface Props {\n  color: 'red' | 'blue';\n}\n\nconst useStyles = makeStyles({\n  root: {\n    background: (props: Props) =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: (props: Props) =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    margin: 8,\n  },\n});\n\nfunction MyButton(props: Props & Omit<MuiButtonProps, keyof Props>) {\n  const { color, ...other } = props;\n  const classes = useStyles(props);\n  return <Button className={classes.root} {...other} />;\n}\n\nexport default function AdaptingHook() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n"},"AdaptingStyledComponents.js":{module:"./AdaptingStyledComponents.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/styles';\nimport Button from '@mui/material/Button';\n\nconst MyButton = styled(({ color, ...other }) => <Button {...other} />)({\n  background: (props) =>\n    props.color === 'red'\n      ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: (props) =>\n    props.color === 'red'\n      ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n      : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n  margin: 8,\n});\n\nexport default function AdaptingStyledComponents() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n",jsxPreview:'<React.Fragment>\n  <MyButton color="red">Red</MyButton>\n  <MyButton color="blue">Blue</MyButton>\n</React.Fragment>',moduleTS:"./AdaptingStyledComponents.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/styles';\nimport Button, { ButtonProps } from '@mui/material/Button';\n\ninterface MyButtonProps {\n  color: 'red' | 'blue';\n}\n\nconst MyButton = styled(\n  ({ color, ...other }: MyButtonProps & Omit<ButtonProps, keyof MyButtonProps>) => (\n    <Button {...other} />\n  ),\n)({\n  background: (props: MyButtonProps) =>\n    props.color === 'red'\n      ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: (props: MyButtonProps) =>\n    props.color === 'red'\n      ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n      : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n  margin: 8,\n});\n\nexport default function AdaptingStyledComponents() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n"},"AdaptingHOC.js":{module:"./AdaptingHOC.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@mui/styles';\nimport Button from '@mui/material/Button';\n\nconst styles = {\n  root: {\n    background: (props) =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: (props) =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    margin: 8,\n  },\n};\n\nfunction MyButtonRaw(props) {\n  const { classes, color, ...other } = props;\n  return <Button className={classes.root} {...other} />;\n}\n\nMyButtonRaw.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf(['blue', 'red']).isRequired,\n};\n\nconst MyButton = withStyles(styles)(MyButtonRaw);\n\nexport default function AdaptingHOC() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n",jsxPreview:'<React.Fragment>\n  <MyButton color="red">Red</MyButton>\n  <MyButton color="blue">Blue</MyButton>\n</React.Fragment>',moduleTS:"./AdaptingHOC.js",rawTS:"import * as React from 'react';\nimport { withStyles, WithStyles } from '@mui/styles';\nimport Button, { ButtonProps } from '@mui/material/Button';\n\nconst styles = {\n  root: {\n    background: (props: MyButtonRawProps) =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: (props: MyButtonRawProps) =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    margin: 8,\n  },\n};\n\ninterface MyButtonRawProps {\n  color: 'red' | 'blue';\n}\n// @babel-ignore-comment-in-output These are the props available inside MyButtonRaw\n// @babel-ignore-comment-in-output They're different from MyButtonRawProps which are the props available for dynamic styling.\ntype MyButtonRawInnerProps = MyButtonRawProps & WithStyles<typeof styles>;\n\nfunction MyButtonRaw(\n  props: MyButtonRawInnerProps & Omit<ButtonProps, keyof MyButtonRawInnerProps>,\n) {\n  const { classes, color, ...other } = props;\n  return <Button className={classes.root} {...other} />;\n}\n\nconst MyButton = withStyles(styles)(MyButtonRaw);\n\nexport default function AdaptingHOC() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n"},"StressTest.js":{module:"./StressTest.js",raw:'import * as React from \'react\';\nimport PropTypes from \'prop-types\';\nimport { ThemeProvider, useTheme, makeStyles } from \'@mui/styles\';\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n\nconst Component = React.memo((props) => {\n  const classes = useStyles(props);\n  const theme = useTheme();\n\n  const rendered = React.useRef(1);\n  React.useEffect(() => {\n    rendered.current += 1;\n  });\n\n  return (\n    <div className={classes.root}>\n      rendered {rendered.current} times\n      <br />\n      color: {theme.color}\n      <br />\n      backgroundColor: {props.backgroundColor}\n    </div>\n  );\n});\n\nComponent.propTypes = {\n  backgroundColor: PropTypes.string.isRequired,\n};\n\nexport default function StressTest() {\n  const [backgroundColor, setBackgroundColor] = React.useState(\'#2196f3\');\n  const handleBackgroundColorChange = (event) => {\n    setBackgroundColor(event.target.value);\n  };\n\n  const [color, setColor] = React.useState(\'#ffffff\');\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const theme = React.useMemo(() => ({ color }), [color]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <fieldset>\n          <div>\n            <label htmlFor="color">theme color: </label>\n            <input\n              id="color"\n              type="color"\n              onChange={handleColorChange}\n              value={color}\n            />\n          </div>\n          <div>\n            <label htmlFor="background-color">background-color property: </label>\n            <input\n              id="background-color"\n              type="color"\n              onChange={handleBackgroundColorChange}\n              value={backgroundColor}\n            />\n          </div>\n        </fieldset>\n        <Component backgroundColor={backgroundColor} />\n      </div>\n    </ThemeProvider>\n  );\n}\n',moduleTS:"./StressTest.js",rawTS:'import * as React from \'react\';\nimport { ThemeProvider, useTheme, makeStyles } from \'@mui/styles\';\n\ninterface MyTheme {\n  color: string;\n}\n\ninterface ComponentProps {\n  backgroundColor: string;\n}\n\nconst useStyles = makeStyles((theme: MyTheme) => ({\n  root: (props: ComponentProps) => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n\nconst Component = React.memo((props: ComponentProps) => {\n  const classes = useStyles(props);\n  const theme = useTheme<MyTheme>();\n\n  const rendered = React.useRef(1);\n  React.useEffect(() => {\n    rendered.current += 1;\n  });\n\n  return (\n    <div className={classes.root}>\n      rendered {rendered.current} times\n      <br />\n      color: {theme.color}\n      <br />\n      backgroundColor: {props.backgroundColor}\n    </div>\n  );\n});\n\nexport default function StressTest() {\n  const [backgroundColor, setBackgroundColor] = React.useState(\'#2196f3\');\n  const handleBackgroundColorChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setBackgroundColor(event.target.value);\n  };\n\n  const [color, setColor] = React.useState(\'#ffffff\');\n  const handleColorChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setColor(event.target.value);\n  };\n\n  const theme = React.useMemo(() => ({ color }), [color]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <fieldset>\n          <div>\n            <label htmlFor="color">theme color: </label>\n            <input\n              id="color"\n              type="color"\n              onChange={handleColorChange}\n              value={color}\n            />\n          </div>\n          <div>\n            <label htmlFor="background-color">background-color property: </label>\n            <input\n              id="background-color"\n              type="color"\n              onChange={handleBackgroundColorChange}\n              value={backgroundColor}\n            />\n          </div>\n        </fieldset>\n        <Component backgroundColor={backgroundColor} />\n      </div>\n    </ThemeProvider>\n  );\n}\n'}};$.scope={process:{},import:{react:h,"@mui/styles":y,"@mui/material/Button":b,"prop-types":f}};var q={"./Hook.js":function(){var n=w();return(0,C.jsx)(v.Z,{className:n.root,children:"Styled with Hook API"})},"./StyledComponents.js":function(){return t||(t=(0,C.jsx)(S,{children:"Styled with styled-components API"}))},"./HigherOrderComponent.js":R,"./NestedStylesHook.js":function(){var n=F();return(0,C.jsxs)("div",{className:n.root,children:["This is red since it is inside the root.",o||(o=(0,C.jsxs)("p",{children:["This is green since it is inside the paragraph"," ",(0,C.jsx)("span",{children:"and this is blue since it is inside the span"})]}))]})},"./AdaptingHook.js":function(){return e||(e=(0,C.jsxs)(m.Fragment,{children:[(0,C.jsx)(H,{color:"red",children:"Red"}),(0,C.jsx)(H,{color:"blue",children:"Blue"})]}))},"./AdaptingStyledComponents.js":function(){return p||(p=(0,C.jsxs)(m.Fragment,{children:[(0,C.jsx)(E,{color:"red",children:"Red"}),(0,C.jsx)(E,{color:"blue",children:"Blue"})]}))},"./AdaptingHOC.js":function(){return r||(r=(0,C.jsxs)(m.Fragment,{children:[(0,C.jsx)(Z,{color:"red",children:"Red"}),(0,C.jsx)(Z,{color:"blue",children:"Blue"})]}))},"./StressTest.js":function(){var n=m.useState("#2196f3"),s=(0,N.Z)(n,2),a=s[0],t=s[1],o=m.useState("#ffffff"),e=(0,N.Z)(o,2),p=e[0],r=e[1],c=m.useMemo(function(){return{color:p}},[p]);return(0,C.jsx)(U.Z,{theme:c,children:(0,C.jsxs)("div",{children:[(0,C.jsxs)("fieldset",{children:[(0,C.jsxs)("div",{children:[i||(i=(0,C.jsx)("label",{htmlFor:"color",children:"theme color: "})),(0,C.jsx)("input",{id:"color",type:"color",onChange:function(n){r(n.target.value)},value:p})]}),(0,C.jsxs)("div",{children:[u||(u=(0,C.jsx)("label",{htmlFor:"background-color",children:"background-color property: "})),(0,C.jsx)("input",{id:"background-color",type:"color",onChange:function(n){t(n.target.value)},value:a})]})]}),(0,C.jsx)(_,{backgroundColor:a})]})})}},K={};function z(){return(0,C.jsx)(g.Z,(0,k.Z)({},d))}},974167:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/system/styles/basics",function(){return a(721322)}])}},function(n){n.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,51733,92888,40179],function(){return n(n.s=974167)}),_N_E=n.O()}]);