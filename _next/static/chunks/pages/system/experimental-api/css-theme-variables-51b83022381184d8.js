(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[49004,39519],{333897:function(n,e,t){var a=t(915012),s=/^\s+/;n.exports=function(n){return n?n.slice(0,a(n)+1).replace(s,""):n}},915012:function(n){var e=/\s/;n.exports=function(n){for(var t=n.length;t--&&e.test(n.charAt(t)););return t}},889678:function(n,e,t){var a=t(706627),s=t(885365),o=t(67948),r=Math.max,c=Math.min;n.exports=function(n,e,t){var i,p,l,u,d,m,f=0,h=!1,k=!1,g=!0;if("function"!=typeof n)throw TypeError("Expected a function");function v(e){var t=i,a=p;return i=p=void 0,f=e,u=n.apply(a,t)}function y(n){var t=n-m,a=n-f;return void 0===m||t>=e||t<0||k&&a>=l}function b(){var n,t,a,o=s();if(y(o))return C(o);d=setTimeout(b,(n=o-m,t=o-f,a=e-n,k?c(a,l-t):a))}function C(n){return(d=void 0,g&&i)?v(n):(i=p=void 0,u)}function x(){var n,t=s(),a=y(t);if(i=arguments,p=this,m=t,a){if(void 0===d)return f=n=m,d=setTimeout(b,e),h?v(n):u;if(k)return clearTimeout(d),d=setTimeout(b,e),v(m)}return void 0===d&&(d=setTimeout(b,e)),u}return e=o(e)||0,a(t)&&(h=!!t.leading,l=(k="maxWait"in t)?r(o(t.maxWait)||0,e):l,g="trailing"in t?!!t.trailing:g),x.cancel=function(){void 0!==d&&clearTimeout(d),f=0,i=m=p=d=void 0},x.flush=function(){return void 0===d?u:C(s())},x}},706627:function(n){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},885365:function(n,e,t){var a=t(573401);n.exports=function(){return a.Date.now()}},123763:function(n,e,t){var a=t(889678),s=t(706627);n.exports=function(n,e,t){var o=!0,r=!0;if("function"!=typeof n)throw TypeError("Expected a function");return s(t)&&(o="leading"in t?!!t.leading:o,r="trailing"in t?!!t.trailing:r),a(n,e,{leading:o,maxWait:e,trailing:r})}},67948:function(n,e,t){var a=t(333897),s=t(706627),o=t(42848),r=0/0,c=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,p=/^0o[0-7]+$/i,l=parseInt;n.exports=function(n){if("number"==typeof n)return n;if(o(n))return r;if(s(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=s(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=a(n);var t=i.test(n);return t||p.test(n)?l(n.slice(2),t?2:8):c.test(n)?r:+n}},103244:function(n,e,t){"use strict";t.d(e,{Z:function(){return c}}),t(470079);var a,s=t(595148),o=t(342563),r=t(735250);function c(n){var e=n.injectFirst,t=n.children;return e&&a?(0,r.jsx)(s.C,{value:a,children:t}):t}"object"==typeof document&&(a=(0,o.default)({key:"css",prepend:!0}))},27175:function(n,e,t){"use strict";var a=t(387577),s=t(689132),o=t(566613),r=(0,s.Z)({defaultClassName:o.Z.root,generateClassName:a.Z.generate});e.Z=r},566613:function(n,e,t){"use strict";var a=(0,t(344443).Z)("MuiBox",["root"]);e.Z=a},10270:function(n,e,t){"use strict";var a=(0,t(896798).Z)();e.Z=a},988198:function(n,e,t){"use strict";var a=(0,t(821557).Z)();e.Z=a},876356:function(n,e,t){"use strict";t.r(e),t.d(e,{createStack:function(){return s.Z},default:function(){return a.Z},getStackUtilityClass:function(){return c},stackClasses:function(){return i}});var a=t(988198),s=t(821557),o=t(344443),r=t(92358);function c(n){return(0,r.ZP)("MuiStack",n)}var i=(0,o.Z)("MuiStack",["root"])},51591:function(n,e,t){"use strict";var a=(0,t(329172).Z)();e.Z=a},329172:function(n,e,t){"use strict";t.d(e,{Z:function(){return U}});var a=t(778521),s=t(863363),o=t(577903),r=t(614030),c=t(431114),i=t.n(c),p=t(470079),l=t(653048),u=t(207534),d=t(92358),m=t(306029),f=t(163226),h=t(153071),k=t(302312),g=t(213591),v=t(486967),y=t(234046),b=t(410231),C=t.n(b),x=t(408011),w=t.n(x),S=t(949345);function Z(n){return n?"Level".concat(n):""}function P(n){return n.unstable_level>0&&n.container}function V(n){return function(e){return"var(--Grid-".concat(e,"Spacing").concat(Z(n.unstable_level),")")}}function T(n){return function(e){return 0===n.unstable_level?"var(--Grid-".concat(e,"Spacing)"):"var(--Grid-".concat(e,"Spacing").concat(Z(n.unstable_level-1),")")}}function M(n){return 0===n.unstable_level?"var(--Grid-columns)":"var(--Grid-columns".concat(Z(n.unstable_level-1),")")}var _=function(n){var e=n.theme,t=n.ownerState,a=V(t),s={};return(0,S.t)(e.breakpoints,t.gridSize,function(n,e){var o={};!0===e&&(o={flexBasis:0,flexGrow:1,maxWidth:"100%"}),"auto"===e&&(o={flexBasis:"auto",flexGrow:0,flexShrink:0,maxWidth:"none",width:"auto"}),"number"==typeof e&&(o={flexGrow:0,flexBasis:"auto",width:"calc(100% * ".concat(e," / ").concat(M(t)).concat(P(t)?" + ".concat(a("column")):"",")")}),n(s,o)}),s},j=function(n){var e=n.theme,t=n.ownerState,a={};return(0,S.t)(e.breakpoints,t.gridOffset,function(n,e){var s={};"auto"===e&&(s={marginLeft:"auto"}),"number"==typeof e&&(s={marginLeft:0===e?"0px":"calc(100% * ".concat(e," / ").concat(M(t),")")}),n(a,s)}),a},D=function(n){var e=n.theme,t=n.ownerState;if(!t.container)return{};var a=P(t)?(0,y.Z)({},"--Grid-columns".concat(Z(t.unstable_level)),M(t)):{"--Grid-columns":12};return(0,S.t)(e.breakpoints,t.columns,function(n,e){n(a,(0,y.Z)({},"--Grid-columns".concat(Z(t.unstable_level)),e))}),a},R=function(n){var e=n.theme,t=n.ownerState;if(!t.container)return{};var a=T(t),s=P(t)?(0,y.Z)({},"--Grid-rowSpacing".concat(Z(t.unstable_level)),a("row")):{};return(0,S.t)(e.breakpoints,t.rowSpacing,function(n,a){var o;n(s,(0,y.Z)({},"--Grid-rowSpacing".concat(Z(t.unstable_level)),"string"==typeof a?a:null===(o=e.spacing)||void 0===o?void 0:o.call(e,a)))}),s},I=function(n){var e=n.theme,t=n.ownerState;if(!t.container)return{};var a=T(t),s=P(t)?(0,y.Z)({},"--Grid-columnSpacing".concat(Z(t.unstable_level)),a("column")):{};return(0,S.t)(e.breakpoints,t.columnSpacing,function(n,a){var o;n(s,(0,y.Z)({},"--Grid-columnSpacing".concat(Z(t.unstable_level)),"string"==typeof a?a:null===(o=e.spacing)||void 0===o?void 0:o.call(e,a)))}),s},A=function(n){var e=n.theme,t=n.ownerState;if(!t.container)return{};var a={};return(0,S.t)(e.breakpoints,t.direction,function(n,e){n(a,{flexDirection:e})}),a},B=function(n){var e=n.ownerState,t=V(e),s=T(e);return(0,a.Z)((0,a.Z)({minWidth:0,boxSizing:"border-box"},e.container&&(0,a.Z)((0,a.Z)({display:"flex",flexWrap:"wrap"},e.wrap&&"wrap"!==e.wrap&&{flexWrap:e.wrap}),{},{margin:"calc(".concat(t("row")," / -2) calc(").concat(t("column")," / -2)")},e.disableEqualOverflow&&{margin:"calc(".concat(t("row")," * -1) 0px 0px calc(").concat(t("column")," * -1)")})),(!e.container||P(e))&&(0,a.Z)({padding:"calc(".concat(s("row")," / 2) calc(").concat(s("column")," / 2)")},(e.disableEqualOverflow||e.parentDisableEqualOverflow)&&{padding:"".concat(s("row")," 0px 0px ").concat(s("column"))}))},E=function(n){var e=[];return i()(n).forEach(function(n){var t=(0,s.Z)(n,2),a=t[0],o=t[1];!1!==o&&void 0!==o&&e.push("grid-".concat(a,"-").concat(String(o)))}),e},G=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"xs";function t(n){return void 0!==n&&("string"==typeof n&&!C()(Number(n))||"number"==typeof n&&n>0)}if(t(n))return["spacing-".concat(e,"-").concat(String(n))];if("object"==typeof n&&!w()(n)){var a=[];return i()(n).forEach(function(n){var e=(0,s.Z)(n,2),o=e[0],r=e[1];t(r)&&a.push("spacing-".concat(o,"-").concat(String(r)))}),a}return[]},z=t(735250),O=["className","children","columns","container","component","direction","wrap","spacing","rowSpacing","columnSpacing","disableEqualOverflow","unstable_level"],W=(0,v.Z)(),H=(0,f.Z)("div",{name:"MuiGrid",slot:"Root",overridesResolver:function(n,e){return e.root}});function F(n){return(0,h.Z)({props:n,name:"MuiGrid",defaultTheme:W})}function U(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.createStyledComponent,t=n.useThemeProps,c=void 0===t?F:t,f=n.componentName,h=void 0===f?"MuiGrid":f,v=p.createContext(void 0),y=function(n,e){var t=n.container,a=n.direction,o=n.spacing,c=n.wrap,p=n.gridSize,l={root:["root",t&&"container","wrap"!==c&&"wrap-xs-".concat(String(c))].concat((0,r.Z)(void 0===a?[]:"object"==typeof a?i()(a).map(function(n){var e=(0,s.Z)(n,2),t=e[0],a=e[1];return"direction-".concat(t,"-").concat(a)}):["direction-xs-".concat(String(a))]),(0,r.Z)(E(p)),(0,r.Z)(t?G(o,e.breakpoints.keys[0]):[]))};return(0,m.Z)(l,function(n){return(0,d.ZP)(h,n)},{})},b=(void 0===e?H:e)(D,I,R,_,A,B,j),C=p.forwardRef(function(n,e){var t,r,d,m,f,h,C,x,w=(0,k.Z)(),S=c(n),Z=(0,g.Z)(S),P=p.useContext(v),V=Z.className,T=Z.children,M=Z.columns,_=Z.container,j=Z.component,D=Z.direction,R=Z.wrap,I=Z.spacing,A=void 0===I?0:I,B=Z.rowSpacing,E=Z.columnSpacing,G=Z.disableEqualOverflow,W=Z.unstable_level,H=void 0===W?0:W,F=(0,o.Z)(Z,O),U=G;H&&void 0!==G&&(U=n.disableEqualOverflow);var N={},L={},K={};i()(F).forEach(function(n){var e=(0,s.Z)(n,2),t=e[0],a=e[1];void 0!==w.breakpoints.values[t]?N[t]=a:void 0!==w.breakpoints.values[t.replace("Offset","")]?L[t.replace("Offset","")]=a:K[t]=a});var $=null!==(t=n.columns)&&void 0!==t?t:H?void 0:void 0===M?12:M,q=null!==(r=n.spacing)&&void 0!==r?r:H?void 0:A,J=null!==(d=null!==(m=n.rowSpacing)&&void 0!==m?m:n.spacing)&&void 0!==d?d:H?void 0:void 0===B?A:B,X=null!==(f=null!==(h=n.columnSpacing)&&void 0!==h?h:n.spacing)&&void 0!==f?f:H?void 0:void 0===E?A:E,Q=(0,a.Z)((0,a.Z)({},Z),{},{level:H,columns:$,container:void 0!==_&&_,direction:void 0===D?"row":D,wrap:void 0===R?"wrap":R,spacing:q,rowSpacing:J,columnSpacing:X,gridSize:N,gridOffset:L,disableEqualOverflow:null!==(C=null!==(x=U)&&void 0!==x?x:P)&&void 0!==C&&C,parentDisableEqualOverflow:P}),Y=y(Q,w),nn=(0,z.jsx)(b,(0,a.Z)((0,a.Z)({ref:e,as:void 0===j?"div":j,ownerState:Q,className:(0,l.default)(Y.root,V)},K),{},{children:p.Children.map(T,function(n){if(p.isValidElement(n)&&(0,u.Z)(n,["Grid"])){var e;return p.cloneElement(n,{unstable_level:null!==(e=n.props.unstable_level)&&void 0!==e?e:H+1})}return n})}));return void 0!==U&&U!==(null!=P&&P)&&(nn=(0,z.jsx)(v.Provider,{value:U,children:nn})),nn});return C.muiName="Grid",C}},355709:function(n,e,t){"use strict";t.r(e),t.d(e,{createGrid:function(){return s.Z},default:function(){return a.Z},getGridUtilityClass:function(){return i},gridClasses:function(){return l},unstable_traverseBreakpoints:function(){return u.t}});var a=t(51591),s=t(329172),o=t(614030),r=t(344443),c=t(92358);function i(n){return(0,c.ZP)("MuiGrid",n)}var p=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12],l=(0,r.Z)("MuiGrid",["root","container","item"].concat((0,o.Z)([0,1,2,3,4,5,6,7,8,9,10].map(function(n){return"spacing-xs-".concat(n)})),(0,o.Z)(["column-reverse","column","row-reverse","row"].map(function(n){return"direction-xs-".concat(n)})),(0,o.Z)(["nowrap","wrap-reverse","wrap"].map(function(n){return"wrap-xs-".concat(n)})),(0,o.Z)(p.map(function(n){return"grid-xs-".concat(n)})),(0,o.Z)(p.map(function(n){return"grid-sm-".concat(n)})),(0,o.Z)(p.map(function(n){return"grid-md-".concat(n)})),(0,o.Z)(p.map(function(n){return"grid-lg-".concat(n)})),(0,o.Z)(p.map(function(n){return"grid-xl-".concat(n)})))),u=t(949345)},949345:function(n,e,t){"use strict";t.d(e,{t:function(){return p}});var a=t(408011),s=t.n(a),o=t(758869),r=t.n(o),c=t(436578),i=t.n(c),p=function(n,e,t){var a,o,c=n.keys[0];s()(e)?e.forEach(function(e,a){t(function(e,t){a<=n.keys.length-1&&(0===a?r()(e,t):e[n.up(n.keys[a])]=t)},e)}):e&&"object"==typeof e?(i()(e).length>n.keys.length?n.keys:(a=n.keys,o=i()(e),a.filter(function(n){return o.includes(n)}))).forEach(function(a){if(-1!==n.keys.indexOf(a)){var s=e[a];void 0!==s&&t(function(e,t){c===a?r()(e,t):e[n.up(a)]=t},s)}}):("number"==typeof e||"string"==typeof e)&&t(function(n,e){r()(n,e)},e)}},548396:function(n,e,t){"use strict";t.r(e),t.d(e,{Box:function(){return nu.Z},Container:function(){return nA.Z},GlobalStyles:function(){return r.Z},RtlProvider:function(){return nR.Z},Stack:function(){return nH.Z},StyledEngineProvider:function(){return o.Z},ThemeProvider:function(){return nZ.Z},Unstable_Grid:function(){return nO.Z},alignContent:function(){return S},alignItems:function(){return w},alignSelf:function(){return M},alpha:function(){return nS.Fq},backgroundColor:function(){return I.Cz},bgcolor:function(){return I.n9},blend:function(){return nS.NH},border:function(){return c.Cg},borderBottom:function(){return c.h$},borderBottomColor:function(){return c.vS},borderColor:function(){return c.tv},borderLeft:function(){return c.sc},borderLeftColor:function(){return c.Vv},borderRadius:function(){return c.E0},borderRight:function(){return c.vQ},borderRightColor:function(){return c.XY},borderTop:function(){return c.j1},borderTopColor:function(){return c.SK},borderTransform:function(){return c.NL},borders:function(){return c.ZP},bottom:function(){return z},boxSizing:function(){return F.ix},breakpoints:function(){return i.ZP},color:function(){return I.$_},colorChannel:function(){return nS.n8},columnGap:function(){return R.e$},compose:function(){return l.Z},containerClasses:function(){return nz},createBox:function(){return nd.Z},createBreakpoints:function(){return nk.Z},createContainer:function(){return nI.Z},createGrid:function(){return nW.createGrid},createSpacing:function(){return ng.Z},createStack:function(){return nF.createStack},createStyled:function(){return nm.ZP},createTheme:function(){return nh.Z},createUnarySpacing:function(){return U.hB},createUnaryUnit:function(){return U.eI},css:function(){return s.css},cssContainerQueries:function(){return p.ZP},darken:function(){return nS._j},decomposeColor:function(){return nS.tB},display:function(){return v},emphasize:function(){return nS._4},experimental_sx:function(){return nU},flex:function(){return P},flexBasis:function(){return y},flexDirection:function(){return b},flexGrow:function(){return V},flexShrink:function(){return T},flexWrap:function(){return C},flexbox:function(){return D},fontFamily:function(){return N},fontSize:function(){return L},fontStyle:function(){return K},fontWeight:function(){return $},gap:function(){return R.SG},getContainerUtilityClass:function(){return nG},getContrastRatio:function(){return nS.mi},getGridUtilityClass:function(){return nW.getGridUtilityClass},getLuminance:function(){return nS.H3},getPath:function(){return u.DW},getStackUtilityClass:function(){return nF.getStackUtilityClass},getStyleFromPropValue:function(){return U.zO},getStyleValue:function(){return u.Jq},getThemeProps:function(){return nb.Z},getValue:function(){return U.NA},grid:function(){return R.ZP},gridArea:function(){return R.fD},gridAutoColumns:function(){return R.aN},gridAutoFlow:function(){return R.B},gridAutoRows:function(){return R.FW},gridClasses:function(){return nW.gridClasses},gridColumn:function(){return R.t4},gridRow:function(){return R.oI},gridTemplateAreas:function(){return R.zI},gridTemplateColumns:function(){return R.K$},gridTemplateRows:function(){return R.RG},handleBreakpoints:function(){return i.k9},height:function(){return F.Cb},hexToRgb:function(){return nS.oo},hslToRgb:function(){return nS.ve},justifyContent:function(){return x},justifyItems:function(){return _},justifySelf:function(){return j},keyframes:function(){return s.keyframes},left:function(){return O},letterSpacing:function(){return q},lighten:function(){return nS.$n},lineHeight:function(){return X},margin:function(){return U.e6},marginKeys:function(){return U.hU},maxHeight:function(){return F.kC},maxWidth:function(){return F.kk},mergeBreakpointsInOrder:function(){return i.dt},minHeight:function(){return F.jw},minWidth:function(){return F.ih},order:function(){return Z},outline:function(){return c.Kl},outlineColor:function(){return c.dx},padding:function(){return U.o3},paddingKeys:function(){return U.Jj},palette:function(){return I.ZP},paletteTransform:function(){return I.Sh},position:function(){return A},positions:function(){return W},private_safeAlpha:function(){return nS.zp},private_safeColorChannel:function(){return nS.LR},private_safeDarken:function(){return nS.q8},private_safeEmphasize:function(){return nS.fk},private_safeLighten:function(){return nS.ux},recomposeColor:function(){return nS.wy},responsivePropType:function(){return nD},rgbToHex:function(){return nS.vq},right:function(){return G},rowGap:function(){return R.s2},shadows:function(){return H},shape:function(){return nv.Z},shouldForwardProp:function(){return nm.x9},sizeHeight:function(){return F.Vs},sizeWidth:function(){return F.lO},sizing:function(){return F.ZP},sizingTransform:function(){return F.EB},spacing:function(){return U.ZP},stackClasses:function(){return nF.stackClasses},style:function(){return u.ZP},styled:function(){return nf.Z},systemDefaultTheme:function(){return nm.P_},textAlign:function(){return Q},textTransform:function(){return J},top:function(){return E},typography:function(){return nn},typographyVariant:function(){return Y},unstable_createCssVarsProvider:function(){return nP.Z},unstable_createCssVarsTheme:function(){return nj},unstable_createGetCssVar:function(){return nV.Z},unstable_createStyleFunctionSx:function(){return ne.n},unstable_cssVarsParser:function(){return nT.ZP},unstable_defaultSxConfig:function(){return na.Z},unstable_extendSxProp:function(){return nt.Z},unstable_getThemeValue:function(){return nl},unstable_prepareCssVars:function(){return nM.Z},unstable_resolveBreakpointValues:function(){return i.P$},unstable_styleFunctionSx:function(){return ne.Z},unstable_traverseBreakpoints:function(){return nW.unstable_traverseBreakpoints},useMediaQuery:function(){return nw.Z},useRtl:function(){return nR.V},useTheme:function(){return nC.Z},useThemeProps:function(){return ny.Z},useThemeWithoutDefault:function(){return nx.Z},width:function(){return F.bf},zIndex:function(){return B}});var a=t(580840),s=t(616887),o=t(103244),r=t(512055),c=t(386609),i=t(476821),p=t(143928),l=t(20131),u=t(18819),d=(0,u.ZP)({prop:"displayPrint",cssProperty:!1,transform:function(n){return{"@media print":{display:n}}}}),m=(0,u.ZP)({prop:"display"}),f=(0,u.ZP)({prop:"overflow"}),h=(0,u.ZP)({prop:"textOverflow"}),k=(0,u.ZP)({prop:"visibility"}),g=(0,u.ZP)({prop:"whiteSpace"}),v=(0,l.Z)(d,m,f,h,k,g),y=(0,u.ZP)({prop:"flexBasis"}),b=(0,u.ZP)({prop:"flexDirection"}),C=(0,u.ZP)({prop:"flexWrap"}),x=(0,u.ZP)({prop:"justifyContent"}),w=(0,u.ZP)({prop:"alignItems"}),S=(0,u.ZP)({prop:"alignContent"}),Z=(0,u.ZP)({prop:"order"}),P=(0,u.ZP)({prop:"flex"}),V=(0,u.ZP)({prop:"flexGrow"}),T=(0,u.ZP)({prop:"flexShrink"}),M=(0,u.ZP)({prop:"alignSelf"}),_=(0,u.ZP)({prop:"justifyItems"}),j=(0,u.ZP)({prop:"justifySelf"}),D=(0,l.Z)(y,b,C,x,w,S,Z,P,V,T,M,_,j),R=t(73155),I=t(984642),A=(0,u.ZP)({prop:"position"}),B=(0,u.ZP)({prop:"zIndex",themeKey:"zIndex"}),E=(0,u.ZP)({prop:"top"}),G=(0,u.ZP)({prop:"right"}),z=(0,u.ZP)({prop:"bottom"}),O=(0,u.ZP)({prop:"left"}),W=(0,l.Z)(A,B,E,G,z,O),H=(0,u.ZP)({prop:"boxShadow",themeKey:"shadows"}),F=t(278758),U=t(675517),N=(0,u.ZP)({prop:"fontFamily",themeKey:"typography"}),L=(0,u.ZP)({prop:"fontSize",themeKey:"typography"}),K=(0,u.ZP)({prop:"fontStyle",themeKey:"typography"}),$=(0,u.ZP)({prop:"fontWeight",themeKey:"typography"}),q=(0,u.ZP)({prop:"letterSpacing"}),J=(0,u.ZP)({prop:"textTransform"}),X=(0,u.ZP)({prop:"lineHeight"}),Q=(0,u.ZP)({prop:"textAlign"}),Y=(0,u.ZP)({prop:"typography",cssProperty:!1,themeKey:"typography"}),nn=(0,l.Z)(Y,N,L,K,$,q,X,Q,J),ne=t(211913),nt=t(213591),na=t(772683),ns=t(234046),no=t(436578),nr=t.n(no),nc={borders:c.ZP.filterProps,display:v.filterProps,flexbox:D.filterProps,grid:R.ZP.filterProps,positions:W.filterProps,palette:I.ZP.filterProps,shadows:H.filterProps,sizing:F.ZP.filterProps,spacing:U.ZP.filterProps,typography:nn.filterProps},ni={borders:c.ZP,display:v,flexbox:D,grid:R.ZP,positions:W,palette:I.ZP,shadows:H,sizing:F.ZP,spacing:U.ZP,typography:nn},np=nr()(nc).reduce(function(n,e){return nc[e].forEach(function(t){n[t]=ni[e]}),n},{}),nl=function(n,e,t){var a,s=(a={},(0,ns.Z)(a,n,e),(0,ns.Z)(a,"theme",t),a),o=np[n];return o?o(s):(0,ns.Z)({},n,e)},nu=t(27175),nd=t(689132),nm=t(423946),nf=t(163226),nh=t(486967),nk=t(631167),ng=t(259287),nv=t(700494),ny=t(153071),nb=t(282444),nC=t(302312),nx=t(404097),nw=t(427260),nS=t(621234),nZ=t(236017),nP=t(352132),nV=t(766332),nT=t(462065),nM=t(559714),n_=t(778521),nj=function(n){var e=(0,nM.Z)(n,(0,n_.Z)((0,n_.Z)({},n),{},{prefix:n.cssVarPrefix}));return n.vars=e.vars,n.generateThemeVars=e.generateThemeVars,n.generateStyleSheets=e.generateStyleSheets,n},nD={},nR=t(264027),nI=t(896798),nA=t(10270),nB=t(344443),nE=t(92358);function nG(n){return(0,nE.ZP)("MuiContainer",n)}var nz=(0,nB.Z)("MuiContainer",["root","disableGutters","fixed","maxWidthXs","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl"]),nO=t(51591),nW=t(355709),nH=t(988198),nF=t(876356);function nU(){throw Error((0,a.Z)(20))}},206310:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return _}});var a,s={};t.r(s),t.d(s,{demoComponents:function(){return T},demos:function(){return V},docs:function(){return P},srcComponents:function(){return M}});var o=t(778521),r=t(470079),c=t.t(r,2),i=t(652755),p=t(548396),l=t(863363),u=t(577903),d=t(559714),m=t(352132),f=t(163226),h=t(735250),k=["vars"],g={palette:{mode:"light",primary:{default:"#3990FF",dark:"#02367D"},text:{default:"#111111"}}},v={palette:{mode:"dark",primary:{default:"#265D97",dark:"#132F4C",main:"#5090D3"},text:{default:"#ffffff"}}},y=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.cssVarPrefix,t=(0,d.Z)({colorSchemes:{light:g,dark:v}},{prefix:void 0===e?"system-demo":e}),a=t.vars,s=(0,u.Z)(t,k);return(0,o.Z)({colorSchemes:{light:g,dark:v},vars:a,palette:(0,o.Z)((0,o.Z)({},g.palette),{},{colorScheme:"light"})},s)}(),b=(0,m.Z)({theme:y,modeStorageKey:"system-demo-mode",attribute:"data-system-demo-color-scheme",defaultColorScheme:{light:"light",dark:"dark"}}),C=b.CssVarsProvider,x=b.useColorScheme,w=(0,f.Z)("button")(function(n){var e=n.theme;return{backgroundColor:e.vars.palette.primary.default,border:"1px solid ".concat(e.vars.palette.primary.dark),color:e.vars.palette.text.default,padding:10,borderRadius:5,fontWeight:"bold"}}),S=(0,f.Z)("div")(function(n){var e=n.theme;return{width:"100%",minHeight:100,padding:20,color:e.vars.palette.text.default,backgroundColor:"dark"===e.palette.mode?"#111":"#fff"}});function Z(){var n=r.useState(!1),e=(0,l.Z)(n,2),t=e[0],a=e[1],s=x(),o=s.setMode,c=s.mode;return(r.useEffect(function(){a(!0)},[]),t)?(0,h.jsx)(S,{className:"App",children:(0,h.jsxs)("div",{className:"card",children:[(0,h.jsxs)("h2",{children:["Current mode: ",c]}),(0,h.jsx)(w,{type:"button",onClick:function(){o("dark"===c?"light":"dark")},children:"Toggle Mode"})]})}):null}var P={en:{description:"An overview of adopting CSS theme variables in Material\xa0UI or Joy\xa0UI.",location:"/docs/data/system/experimental-api/css-theme-variables/css-theme-variables.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>CSS theme variables</h1><p class="description">An overview of adopting CSS theme variables in Material\xa0UI or Joy\xa0UI.</p>\n\n<p><a href="https://www.w3.org/TR/css-variables-1/" target="_blank" rel="noopener nofollow">CSS variables</a> are a modern cross-browser feature that let you declare variables in CSS and reuse them in other properties.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>If this is your first time encountering CSS variables, you should check out <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties">the MDN Web Docs on CSS custom properties</a> before continuing here.</p>\n\n</div></aside><h2 id="introduction"><a href="#introduction" class="title-link-to-anchor">Introduction<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>CSS theme variable support is a new feature in MUI\xa0System added in <a href="https://github.com/mui/material-ui/releases/tag/v5.0.5"><code>v5.0.5</code></a> as an experimental export. It tells the underlying Material\xa0UI, Joy\xa0UI or even custom UI library components to use the generated CSS theme variables instead of raw values. This provides significant improvements in developer experience related to theming and customization.\nWith these variables, you can inject a theme into your app&#39;s stylesheet <em>at build time</em> to apply the user&#39;s selected settings before the whole app is rendered.\nLearn more about the <a href="https://mui.com/material-ui/customization/css-theme-variables/overview/#advantages">advantages</a> and <a href="https://mui.com/material-ui/customization/css-theme-variables/overview/#trade-offs">trade-offs</a> of using CSS theme variables.</p>\n<h3 id="advantages"><a href="#advantages" class="title-link-to-anchor">Advantages<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="advantages"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li>It lets you prevent <a href="https://github.com/mui/material-ui/issues/27651">dark-mode SSR flickering</a>.</li>\n<li>You can create unlimited color schemes beyond <code>light</code> and <code>dark</code>.</li>\n<li>It offers a better debugging experience not only for developers but also designers on your team.</li>\n<li>The color scheme of your website is automatically synced between browser tabs.</li>\n<li>It simplifies integration with third-party tools because CSS theme variables are available globally.</li>\n<li>It reduces the need for a nested theme when you want to apply dark styles to a specific part of your application.</li>\n</ul>\n<h2 id="trade-offs"><a href="#trade-offs" class="title-link-to-anchor">Trade-offs<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="trade-offs"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>For server-side applications, there are some trade-offs to consider:</p>\n<table>\n<thead>\n<tr>\n<th align="left"></th>\n<th align="left">Compare to the default method</th>\n<th align="left">Reason</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">HTML size</td>\n<td align="left">Bigger</td>\n<td align="left">CSS variables are generated for both light and dark mode at build time.</td>\n</tr>\n<tr>\n<td align="left"><a href="https://web.dev/articles/fcp">First Contentful Paint (FCP)</a></td>\n<td align="left">Longer</td>\n<td align="left">Since the HTML size is bigger, the time to download the HTML before showing the content is bit longer.</td>\n</tr>\n<tr>\n<td align="left"><a href="https://web.dev/articles/tti">Time to Interactive (TTI)</a></td>\n<td align="left">Shorter (for dark mode)</td>\n<td align="left">Stylesheets are not regenerated between light and dark mode, a lot less time is spent running JavaScript code.</td>\n</tr>\n</tbody></table>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The comparison described in the table above may not be applicable to large and complex applications since there are so many factors that can impact performance metrics.</p>\n\n</div></aside><h2 id="usage"><a href="#usage" class="title-link-to-anchor">Usage<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="usage"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The CSS variables API usage is exposed as a higher order function called <code>unstable_createCssVarsProvider</code> which can be called to create a theme provider and other utilities to share the theme config throughout your app. This is a very low-level function and has a lot of moving parts.\nIf you&#39;re using <a href="https://mui.com/material-ui/customization/css-theme-variables/overview/">Material\xa0UI</a> or <a href="https://mui.com/joy-ui/customization/using-css-variables/">Joy\xa0UI</a>, they expose their own <code>CssVarsProvider</code> component that you can use directly without configuring your theme.</p>\n<p>We&#39;ll first define a minimal theme palette for light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// extendTheme.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  unstable_createGetCssVar <span class="token keyword">as</span> systemCreateGetCssVar<span class="token punctuation">,</span>\n  unstable_prepareCssVars <span class="token keyword">as</span> prepareCssVars<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/system\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> lightColorScheme <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">\'#3990FF\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token string">\'#02367D\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">\'#111111\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// ... other colors</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> darkColorScheme <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">\'#265D97\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token string">\'#132F4C\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token string">\'#5090D3\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">\'#ffffff\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// ... other colors</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> createGetCssVar <span class="token operator">=</span> <span class="token punctuation">(</span>cssVarPrefix <span class="token operator">=</span> <span class="token string">\'my-app\'</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n  <span class="token function">systemCreateGetCssVar</span><span class="token punctuation">(</span>cssVarPrefix<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> cssVarPrefix <span class="token operator">=</span> <span class="token string">\'my-app\'</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> getCssVar <span class="token operator">=</span> <span class="token function">createGetCssVar</span><span class="token punctuation">(</span>cssVarPrefix<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">light</span><span class="token operator">:</span> lightColorScheme<span class="token punctuation">,</span>\n      <span class="token literal-property property">dark</span><span class="token operator">:</span> darkColorScheme<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// ... any other objects independent of color-scheme,</span>\n    <span class="token comment">// like fontSizes, spacing tokens, etc</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">vars</span><span class="token operator">:</span> themeVars<span class="token punctuation">,</span> generateCssVars <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">prepareCssVars</span><span class="token punctuation">(</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>colorSchemes <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">prefix</span><span class="token operator">:</span> cssVarPrefix<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  theme<span class="token punctuation">.</span>vars <span class="token operator">=</span> themeVars<span class="token punctuation">;</span>\n  theme<span class="token punctuation">.</span>generateCssVars <span class="token operator">=</span> generateCssVars<span class="token punctuation">;</span>\n  theme<span class="token punctuation">.</span>palette <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>theme<span class="token punctuation">.</span>colorSchemes<span class="token punctuation">.</span>light<span class="token punctuation">.</span>palette<span class="token punctuation">,</span>\n    <span class="token literal-property property">colorScheme</span><span class="token operator">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> theme<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> myCustomDefaultTheme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> myCustomDefaultTheme<span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Here, the returned <code>theme</code> object needs to follow a certain structure to be used correctly by the final <code>CssVarsProvider</code>. It should have a <code>colorSchemes</code> key with the light and dark (and any other) palette. <code>prepareCssVars</code> import from <code>@mui/system</code> is used to create CSS variable names which can then be easily accessed using the returned <code>vars</code>. This is also added to the <code>theme</code> object. Finally, <code>myCustomDefaultTheme</code> theme object is created that can now be passed to the <code>createCssVarsProvider</code> to get a <code>CssVarsProvider</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// CssVarsProvider.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_createCssVarsProvider <span class="token keyword">as</span> createCssVarsProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/system\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> CssVarsProvider<span class="token punctuation">,</span> useColorScheme <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createCssVarsProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">defaultColorScheme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> myCustomDefaultTheme<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> CssVarsProvider<span class="token punctuation">,</span> useColorScheme <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Now wrap your top level app component with this <code>CssVarsProvider</code> component and then you can access the passed theme value to any of the components rendered inside the provider.</p>\n<p>Example of a component using the CSS variable -</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// Button.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/system\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Button <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>default<span class="token punctuation">,</span>\n  <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">1px solid </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>dark<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>text<span class="token punctuation">.</span>default<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Button<span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The hook, <code>useColorScheme</code> can be used to get the current <code>mode</code> (light or dark) and can also update the mode like:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// App.js</span>\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> setMode<span class="token punctuation">,</span> mode <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useColorScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">toggleMode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setMode</span><span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">\'dark\'</span> <span class="token operator">?</span> <span class="token string">\'light\'</span> <span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Current Mode<span class="token operator">:</span> <span class="token punctuation">{</span>mode<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toggleMode<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Toggle Mode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// main.js</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ReactDOM <span class="token keyword">from</span> <span class="token string">\'react-dom/client\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CssVarsProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./CssVarsProvider\'</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Now, the Button&#39;s <code>backgroundColor</code>, <code>borderColor</code> and text <code>color</code> values will correctly use the colors based on the selected <code>mode</code>.</p>\n<h3 id="demo"><a href="#demo" class="title-link-to-anchor">Demo<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="demo"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3>',{demo:"CreateCssVarsProvider.js"},'<p>For framework- or language-specific setup instructions, see <a href="https://mui.com/material-ui/customization/css-theme-variables/usage/#server-side-rendering">CSS theme variables—Usage—Server-side rendering</a>.\nFor framework or language specific setup, see <a href="https://mui.com/material-ui/customization/css-theme-variables/usage/#server-side-rendering">this</a></p>\n<p>See the complete usage of <code>createCssVarsProvider</code> in <a href="https://github.com/mui/material-ui/blob/master/packages/mui-material/src/styles/CssVarsProvider.tsx">Material\xa0UI</a> and <a href="https://github.com/mui/material-ui/blob/master/packages/mui-joy/src/styles/CssVarsProvider.tsx">Joy\xa0UI</a>.</p>\n<h2 id="api"><a href="#api" class="title-link-to-anchor">API<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="createcssvarsprovider-options"><a href="#createcssvarsprovider-options" class="title-link-to-anchor"><code>createCssVarsProvider</code> options<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="createcssvarsprovider-options"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li><code>attribute?</code>: DOM attribute for applying color scheme (<code>data-color-scheme</code> by default)</li>\n<li><code>modeStorageKey?</code>: localStorage key used to store application <code>mode</code> (<code>mode</code> by default)</li>\n<li><code>colorSchemeStorageKey?</code>: localStorage key used to store <code>colorScheme</code></li>\n<li><code>defaultColorScheme</code>: Design system default color scheme (string or object depending on if the design system has 1 or more themes, can be <code>light</code> or <code>dark</code>)</li>\n<li><code>defaultMode?</code>: Design system default mode (<code>light</code> by default)</li>\n<li><code>disableTransitionOnChange?</code>: Disable CSS transitions when switching between modes or color schemes (<code>false</code> by default)</li>\n<li><code>themeId?</code>: The design system&#39;s unique id for getting the corresponded theme when there are multiple design systems.</li>\n<li><code>theme</code>: Design system default theme. It&#39;s structure, besides the minimum requirements by <code>createCssVarsProvider</code>, is upto the design system to implement.</li>\n<li><code>resolveTheme(theme: Theme) =&gt; Theme</code>: A function to be called after the CSS variables are attached. The result of this function will be the final theme pass to <code>ThemeProvider</code>.</li>\n</ul>\n<p><code>createCssVarsProvider</code> returns 3 items.</p>\n<h3 id="cssvarsprovider-gt-props"><a href="#cssvarsprovider-gt-props" class="title-link-to-anchor"><code>&lt;CssVarsProvider&gt;</code> props<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="cssvarsprovider-gt-props"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li><code>defaultMode?: &#39;light&#39; | &#39;dark&#39; | &#39;system&#39;</code> - Application&#39;s default mode (<code>light</code> by default)</li>\n<li><code>disableTransitionOnChange : boolean</code> - Disable CSS transitions when switching between modes</li>\n<li><code>theme: ThemeInput</code> - the theme provided to React&#39;s context</li>\n<li><code>modeStorageKey?: string</code> - localStorage key used to store application <code>mode</code></li>\n<li><code>attribute?: string</code> - DOM attribute for applying color scheme</li>\n</ul>\n<h3 id="usecolorscheme-colorschemecontextvalue"><a href="#usecolorscheme-colorschemecontextvalue" class="title-link-to-anchor"><code>useColorScheme: () =&gt; ColorSchemeContextValue</code><span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="usecolorscheme-colorschemecontextvalue"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li><code>mode: string</code> - The user&#39;s selected mode</li>\n<li><code>setMode: mode =&gt; {…}</code> - Function for setting the <code>mode</code>. The <code>mode</code> is saved to internal state and local storage; if <code>mode</code> is null, it will be reset to the default mode</li>\n</ul>\n<h3 id="getinitcolorschemescript-options-react-reactelement"><a href="#getinitcolorschemescript-options-react-reactelement" class="title-link-to-anchor"><code>getInitColorSchemeScript: (options) =&gt; React.ReactElement</code><span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="getinitcolorschemescript-options-react-reactelement"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><strong>options</strong></p>\n<ul>\n<li><code>defaultMode?: &#39;light&#39; | &#39;dark&#39; | &#39;system&#39;</code>: - Application&#39;s default mode before React renders the tree (<code>light</code> by default)</li>\n<li><code>modeStorageKey?: string</code>: - localStorage key used to store application <code>mode</code></li>\n<li><code>attribute?: string</code> - DOM attribute for applying color scheme</li>\n</ul>\n'],toc:[{text:"Introduction",level:2,hash:"introduction",children:[{text:"Advantages",level:3,hash:"advantages"}]},{text:"Trade-offs",level:2,hash:"trade-offs",children:[]},{text:"Usage",level:2,hash:"usage",children:[{text:"Demo",level:3,hash:"demo"}]},{text:"API",level:2,hash:"api",children:[{text:"createCssVarsProvider options",level:3,hash:"createcssvarsprovider-options"},{text:"&lt;CssVarsProvider&gt; props",level:3,hash:"cssvarsprovider-gt-props"},{text:"useColorScheme: () =&gt; ColorSchemeContextValue",level:3,hash:"usecolorscheme-colorschemecontextvalue"},{text:"getInitColorSchemeScript: (options) =&gt; React.ReactElement",level:3,hash:"getinitcolorschemescript-options-react-reactelement"}]}],title:"CSS theme variables",headers:{components:[]}}},V={"CreateCssVarsProvider.js":{module:"./CreateCssVarsProvider.js",raw:"import * as React from 'react';\nimport {\n  unstable_createCssVarsProvider as createCssVarsProvider,\n  unstable_prepareCssVars as prepareCssVars,\n  styled,\n} from '@mui/system';\n\nconst lightColorScheme = {\n  palette: {\n    mode: 'light',\n    primary: {\n      default: '#3990FF',\n      dark: '#02367D',\n    },\n    text: {\n      default: '#111111',\n    },\n    // ... other colors\n  },\n};\n\nconst darkColorScheme = {\n  palette: {\n    mode: 'dark',\n    primary: {\n      default: '#265D97',\n      dark: '#132F4C',\n      main: '#5090D3',\n    },\n    text: {\n      default: '#ffffff',\n    },\n    // ... other colors\n  },\n};\n\nfunction extendTheme({ cssVarPrefix = 'system-demo' } = {}) {\n  const { vars: themeVars, ...params } = prepareCssVars(\n    {\n      colorSchemes: {\n        light: lightColorScheme,\n        dark: darkColorScheme,\n      },\n    },\n    {\n      prefix: cssVarPrefix,\n    },\n  );\n  const theme = {\n    colorSchemes: {\n      light: lightColorScheme,\n      dark: darkColorScheme,\n    },\n    // ... any other objects independent of color-scheme,\n    // like fontSizes, spacing etc\n    vars: themeVars,\n    palette: {\n      ...lightColorScheme.palette,\n      colorScheme: 'light',\n    },\n    ...params,\n  };\n\n  return theme;\n}\n\nconst myCustomDefaultTheme = extendTheme();\n\nconst { CssVarsProvider, useColorScheme } = createCssVarsProvider({\n  theme: myCustomDefaultTheme,\n  modeStorageKey: 'system-demo-mode',\n  attribute: 'data-system-demo-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark',\n  },\n});\n\nconst Button = styled('button')(({ theme }) => ({\n  backgroundColor: theme.vars.palette.primary.default,\n  border: `1px solid ${theme.vars.palette.primary.dark}`,\n  color: theme.vars.palette.text.default,\n  padding: 10,\n  borderRadius: 5,\n  fontWeight: 'bold',\n}));\n\nconst WrapperDiv = styled('div')(({ theme }) => ({\n  width: '100%',\n  minHeight: 100,\n  padding: 20,\n  color: theme.vars.palette.text.default,\n  backgroundColor: theme.palette.mode === 'dark' ? '#111' : '#fff',\n}));\n\nfunction App() {\n  // changes specific to this demo.\n  const [shouldRender, setShouldRender] = React.useState(false);\n  const { setMode, mode } = useColorScheme();\n  const toggleMode = () => {\n    setMode(mode === 'dark' ? 'light' : 'dark');\n  };\n\n  // to avoid hydration error in demo. unrelated to the actual implementation\n  React.useEffect(() => {\n    setShouldRender(true);\n  }, []);\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  return (\n    <WrapperDiv className=\"App\">\n      <div className=\"card\">\n        <h2>Current mode: {mode}</h2>\n        <Button type=\"button\" onClick={toggleMode}>\n          Toggle Mode\n        </Button>\n      </div>\n    </WrapperDiv>\n  );\n}\n\nexport default function CreateCssVarsProvider() {\n  return (\n    <CssVarsProvider>\n      <App />\n    </CssVarsProvider>\n  );\n}\n",jsxPreview:"<CssVarsProvider>\n  <App />\n</CssVarsProvider>",moduleTS:"./CreateCssVarsProvider.js",rawTS:"import * as React from 'react';\nimport {\n  unstable_createCssVarsProvider as createCssVarsProvider,\n  unstable_prepareCssVars as prepareCssVars,\n  styled,\n} from '@mui/system';\n\ntype Theme = {\n  colorSchemes: {\n    light: typeof lightColorScheme;\n    dark: typeof lightColorScheme;\n  };\n  palette: {\n    colorScheme: 'light' | 'dark';\n  } & (typeof lightColorScheme)['palette'];\n} & ReturnType<typeof prepareCssVars>;\n\nconst lightColorScheme = {\n  palette: {\n    mode: 'light',\n    primary: {\n      default: '#3990FF',\n      dark: '#02367D',\n    },\n    text: {\n      default: '#111111',\n    },\n    // ... other colors\n  },\n};\n\nconst darkColorScheme = {\n  palette: {\n    mode: 'dark',\n    primary: {\n      default: '#265D97',\n      dark: '#132F4C',\n      main: '#5090D3',\n    },\n    text: {\n      default: '#ffffff',\n    },\n    // ... other colors\n  },\n};\n\nfunction extendTheme({ cssVarPrefix = 'system-demo' } = {}) {\n  const { vars: themeVars, ...params } = prepareCssVars(\n    {\n      colorSchemes: {\n        light: lightColorScheme,\n        dark: darkColorScheme,\n      },\n    },\n    {\n      prefix: cssVarPrefix,\n    },\n  );\n  const theme: Theme = {\n    colorSchemes: {\n      light: lightColorScheme,\n      dark: darkColorScheme,\n    },\n    // ... any other objects independent of color-scheme,\n    // like fontSizes, spacing etc\n    vars: themeVars,\n    palette: {\n      ...lightColorScheme.palette,\n      colorScheme: 'light',\n    },\n    ...params,\n  };\n\n  return theme;\n}\n\nconst myCustomDefaultTheme = extendTheme();\n\nconst { CssVarsProvider, useColorScheme } = createCssVarsProvider({\n  theme: myCustomDefaultTheme,\n  modeStorageKey: 'system-demo-mode',\n  attribute: 'data-system-demo-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark',\n  },\n});\n\nconst Button = styled('button')<{ theme?: Theme }>(({ theme }) => ({\n  backgroundColor: theme.vars.palette.primary.default,\n  border: `1px solid ${theme.vars.palette.primary.dark}`,\n  color: theme.vars.palette.text.default,\n  padding: 10,\n  borderRadius: 5,\n  fontWeight: 'bold',\n}));\n\nconst WrapperDiv = styled('div')<{ theme?: Theme }>(({ theme }) => ({\n  width: '100%',\n  minHeight: 100,\n  padding: 20,\n  color: theme.vars.palette.text.default,\n  backgroundColor: theme.palette.mode === 'dark' ? '#111' : '#fff',\n}));\n\nfunction App() {\n  // changes specific to this demo.\n  const [shouldRender, setShouldRender] = React.useState(false);\n  const { setMode, mode } = useColorScheme();\n  const toggleMode = () => {\n    setMode(mode === 'dark' ? 'light' : 'dark');\n  };\n\n  // to avoid hydration error in demo. unrelated to the actual implementation\n  React.useEffect(() => {\n    setShouldRender(true);\n  }, []);\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  return (\n    <WrapperDiv className=\"App\">\n      <div className=\"card\">\n        <h2>Current mode: {mode}</h2>\n        <Button type=\"button\" onClick={toggleMode}>\n          Toggle Mode\n        </Button>\n      </div>\n    </WrapperDiv>\n  );\n}\n\nexport default function CreateCssVarsProvider() {\n  return (\n    <CssVarsProvider>\n      <App />\n    </CssVarsProvider>\n  );\n}\n"}};V.scope={process:{},import:{react:c,"@mui/system":p}};var T={"./CreateCssVarsProvider.js":function(){return a||(a=(0,h.jsx)(C,{children:(0,h.jsx)(Z,{})}))}},M={};function _(){return(0,h.jsx)(i.Z,(0,o.Z)({},s))}},652755:function(n,e,t){"use strict";t.d(e,{Z:function(){return b}});var a,s=t(778521),o=t(470079),r=t(639519),c=t.n(r),i=t(389136),p=t(302312),l=t(513182),u=t(597683),d=t(42141),m=t(162119),f=t(871379),h=t(775196),k=t(694366),g=t(74077),v=t(735250);function y(n){var e=n.mode,t=(0,l.tv)().setMode;return o.useEffect(function(){t(e)},[e,t]),null}function b(n){var e=(0,p.Z)(),t=(0,i.useRouter)(),r=(0,d.ln)(t.asPath).canonicalAs,c=n.disableAd,b=void 0!==c&&c,C=n.disableToc,x=n.disableCssVarsProvider,w=n.demos,S=void 0===w?{}:w,Z=n.docs,P=n.demoComponents,V=n.srcComponents,T=Z[(0,f.fO)()]||Z.en,M=r.startsWith("/joy-ui/")&&!(void 0!==x&&x),_=M?l.lL:o.Fragment,j=M?h.BrandingProvider:o.Fragment,D=(0,s.Z)({},M&&{mode:e.palette.mode});return(0,v.jsxs)(m.Z,{cardOptions:{description:T.headers.cardDescription,title:T.headers.cardTitle},description:T.description,disableAd:b,disableToc:void 0!==C&&C,location:T.location,title:T.title,toc:T.toc,children:[b?null:a||(a=(0,v.jsx)(h.BrandingProvider,{children:(0,v.jsx)(g.Z,{children:(0,v.jsx)(k.ZP,{})})})),(0,v.jsxs)(_,{children:[M&&(0,v.jsx)(y,{mode:e.palette.mode}),T.rendered.map(function(n,t){return(0,v.jsx)(u.Z,{demoComponents:P,demos:S,disableAd:b,localizedDoc:T,renderedMarkdownOrDemo:n,srcComponents:V,theme:e,WrapperComponent:j,wrapperProps:D},"demos-section-".concat(t))})]})]})}y.propTypes={mode:c().oneOf(["light","dark"])}},572899:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/system/experimental-api/css-theme-variables",function(){return t(206310)}])},884835:function(n,e,t){"use strict";var a=t(311596);function s(){}function o(){}o.resetWarningCache=s,n.exports=function(){function n(n,e,t,s,o,r){if(r!==a){var c=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function e(){return n}n.isRequired=n;var t={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:e,element:n,elementType:n,instanceOf:e,node:n,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:o,resetWarningCache:s};return t.PropTypes=t,t}},639519:function(n,e,t){n.exports=t(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}},function(n){n.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,92888,40179],function(){return n(n.s=572899)}),_N_E=n.O()}]);