(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[67841],{696689:function(e,t,o){var n=o(371017)(function(e,t,o){return e+(o?"-":"")+t.toLowerCase()});e.exports=n},705794:function(e,t,o){var n=o(117431),i=n.createRender,a=n.getHeaders,s=n.getTitle,r=n.renderMarkdown;e.exports={createRender:i,getHeaders:a,getTitle:s,renderMarkdown:r}},117431:function(e,t,o){var n=o(582103).default,i=o(436578),a=o(113065).default,s=o(95018).default,r=o(315599).marked,p=o(891271),l=o(520740),c={gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1,headerPrefix:!1,headerIds:!1,mangle:!1},u=/---[\r\n]([\s\S]*)[\r\n]---/,d=/# (.*)[\r\n]/,h=/<p class="description">([\s\S]*?)<\/p>/,m=/(.*?):[\r\n]?\s+(\[[^\]]+\]|.*)/g,f=/^\s*$/,g=/[&<>"']/,b=/[&<>"']/g,y=/[<>"']|&(?!#?\w+;)/,v=/[<>"']|&(?!#?\w+;)/g,F={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},D=function(e){return F[e]};function w(e,t){if(t){if(g.test(e))return e.replace(b,D)}else if(y.test(e))return e.replace(v,D);return e}var S=["https://m2.material.io/","https://m3.material.io/","https://material.io/","https://getbootstrap.com/","https://icons.getbootstrap.com/","https://pictogrammers.com/","https://www.w3.org/","https://tailwindcss.com/","https://heroicons.com/","https://react-icons.github.io/","https://fontawesome.com/","https://www.radix-ui.com/","https://react-spectrum.adobe.com/","https://headlessui.com/","https://refine.dev/","https://scaffoldhub.io/","https://marmelab.com/"];e.exports={createRender:function(e){var t=e.headingHashes,o=e.toc,a=e.userLanguage,s=e.options,u={},d=-1;return function(h){var m=new r.Renderer;return m.heading=function(e,n){if(1===n||n>=4)return"<h".concat(n,">").concat(e,"</h").concat(n,">");var s,r=e.replace(/<a\b[^>]*>/gi,"").replace(/<\/a>/gi,"");r=r.replace(/<code\b[^>]*>/gi,"").replace(/<\/code>/gi,""),"en"===a?s=p(r,t):(d+=1,(s=i(t)[d])||(s=p(r,u)));var l=r.replace(/([^\s]\()/g,"$1&#8203;");if(2===n)o.push({text:l,level:n,hash:s,children:[]});else if(3===n){if(!o[o.length-1])throw Error("docs-infra: Missing parent level for: ".concat(r,"\n"));o[o.length-1].children.push({text:l,level:n,hash:s})}return["<h".concat(n,' id="').concat(s,'"><a href="#').concat(s,'" class="title-link-to-anchor">').concat(e,'<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a>'),'<button title="Post a comment" class="comment-link" data-feedback-hash="'.concat(s,'">'),'<svg><use xlink:href="#comment-link-icon" /></svg>',"</button>","</h".concat(n,">")].join("")},m.link=function(t,o,n){var i="";o&&(i+=' title="'.concat(o,'"')),S.some(function(e){return -1!==t.indexOf(e)})&&(i=' target="_blank" rel="noopener nofollow"');var r=t;return function(e,t,o){var n=new URL(e,"https://mui.com/");if(/\/{2,}$/.test(n.pathname))throw Error(["docs-infra: Duplicated trailing slashes. The following link:","[".concat(t,"](").concat(e,") in ").concat(o.location," has duplicated trailing slashes, please only add one."),"","See https://ahrefs.com/blog/trailing-slash/ for more details.",""].join("\n"));if("mui.com"===n.host){if("/"!==n.pathname[n.pathname.length-1])throw Error(["docs-infra: Missing trailing slash. The following link:","[".concat(t,"](").concat(e,") in ").concat(o.location," is missing a trailing slash, please add it."),"","See https://ahrefs.com/blog/trailing-slash/ for more details.",""].join("\n"));if("#"!==e[0]&&!(e.startsWith("https://")||e.startsWith("http://"))&&"/"!==e[0])throw Error(["docs-infra: Missing leading slash. The following link:","[".concat(t,"](").concat(e,") in ").concat(o.location," is missing a leading slash, please add it."),""].join("\n"))}}(t,n,e),"en"===a||0!==t.indexOf("/")||s.ignoreLanguagePages(t)||(r="/".concat(a).concat(t)),r.startsWith("".concat(s.env.SOURCE_CODE_REPO,"/blob/-/"))&&(r=r.replace("".concat(s.env.SOURCE_CODE_REPO,"/blob/-/"),"".concat(s.env.SOURCE_CODE_REPO,"/blob/v").concat(s.env.LIB_VERSION,"/"))),'<a href="'.concat(r,'"').concat(i,">").concat(n,"</a>")},m.code=function(e,t,o){var n,i=(t||"").match(/\S*/)[0],a=null===(n=(t||"").match(/title="([^"]*)"/))||void 0===n?void 0:n[1],s=l(e,i);return(null!=s&&s!==e&&(o=!0,e=s),e="".concat(e.replace(/\n$/,""),"\n"),i)?'<div class="MuiCode-root">'.concat(a?'<div class="MuiCode-title">'.concat(a,"</div>"):"",'<pre><code class="language-').concat(w(i,!0),'">').concat(o?e:w(e,!0),"</code></pre>").concat('<button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>',"\n"):"<pre><code>".concat(o?e:w(e,!0),"</code></pre>\n")},r.use({extensions:[{name:"callout",level:"block",start:function(e){var t=e.match(/:::/);return t?t.index:void 0},tokenizer:function(e){var t=/^ {0,3}(:{3,}(?=[^:\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~:]* *(?=\n|$)|$)/.exec(e);if(t){var o={type:"callout",raw:t[0],text:t[3].trim(),severity:t[2],tokens:[]};return this.lexer.blockTokens(o.text,o.tokens),o}},renderer:function(e){return'<aside class="MuiCallout-root MuiCallout-'.concat(e.severity,'">\n            ').concat(["info","success","warning","error"].includes(e.severity)?['<svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">','<use class="MuiCode-copied-icon" xlink:href="#'.concat(e.severity,'-icon" />'),"</svg>"].join("\n"):"",'\n            <div class="MuiCallout-content">\n            ').concat(this.parser.parse(e.tokens),"\n</div></aside>")}}]}),r(h,n(n({},c),{},{renderer:m}))}},getContents:function(e){return e.replace(u,"").split(/^{{("(?:demo|component)":.*)}}$/gm).flatMap(function(e){return e.split(/^(<codeblock(?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?<\/codeblock>)$/gm)}).flatMap(function(e){return e.split(/^(<featureList(?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?<\/featureList>)$/gm)}).filter(function(e){return!f.test(e)})},getDescription:function(e){var t=e.match(h);if(null!==t)return t[1].trim().replace(/`/g,"")},getCodeblock:function(e){if(e.startsWith("<codeblock")){var t,o=null===(t=e.match(/^<codeblock [^>]*storageKey=["|'](\S*)["|'].*>/m))||void 0===t?void 0:t[1];return{type:"codeblock",data:s(e.matchAll(/^```((?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*) ((?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)\n((?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?)\n```/gm)).map(function(e){var t=a(e,4);return{language:t[1],tab:t[2],code:t[3]}}).filter(function(e){return void 0!==e.tab&&!f.test(e.code)}),storageKey:o}}},getFeatureList:function(e){if(e.startsWith("<featureList"))return['<ul class="feature-list">'].concat(s(e.split("\n").filter(function(e){return e.startsWith("- ")}).map(function(e){return e.slice(2)}).map(function(e){return"<li>".concat(e,"</li>")})),["</ul>"]).join("")},getHeaders:function(e){var t=e.match(u);if(!t)return{components:[]};t=t[1];try{for(var o,n={};null!==(o=m.exec(t));){var i=o[1],a=o[2].replace(/(.*)/,"$1");"["===a[0]?(a=(a=a.replace(/'/g,'"')).replace(/,\s+\]$/g,"]"),n[i]=JSON.parse(a)):n[i]=a.replace(/^'|'$/g,"")}return n.components?n.components=n.components.split(",").map(function(e){return e.trim()}).sort():n.components=[],n.hooks?n.hooks=n.hooks.split(",").map(function(e){return e.trim()}).sort():n.hooks=[],n}catch(e){throw Error("docs-infra: ".concat(e.message," in getHeader(markdown) with markdown: \n\n").concat(t,"\n"))}},getTitle:function(e){var t=e.match(d);return null===t?"":t[1].replace(/`/g,"")},renderMarkdown:function(e){return/[-*+] `([A-Za-z]+)`/g.test(e)?r.parse(e,c):r.parseInline(e,c).replace(/(\r?\n){2}/g,"<br>").replace(/\r?\n/g," ")}}},891271:function(e){e.exports=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function e(t,o){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=1===n?t:"".concat(t,"-").concat(n);return o[i]?e(t,o,n+1):(o[i]=!0,i)}(encodeURI(e.toLowerCase().replace(/<\/?[^>]+(>|$)/g,"").replace(/=&gt;|&lt;| \/&gt;|<code>|<\/code>|&#39;/g,"").replace(/[!@#$%^&*()=_+[\]{}`~;:'"|,.<>/?\s]+/g,"-").replace(/([\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])\uFE0F?/g,"").replace(/-+/g,"-").replace(/^-|-$/g,"")),t)}},442589:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return r}}),o(470079);var n=o(512589),i=o(412007),a=JSON.parse('{"props":{"options":{"type":{"name":"array"},"required":true},"renderInput":{"type":{"name":"func"},"required":true,"signature":{"type":"function(params: object) => ReactNode","describedArgs":[]}},"autoComplete":{"type":{"name":"bool"},"default":"false"},"autoHighlight":{"type":{"name":"bool"},"default":"false"},"autoSelect":{"type":{"name":"bool"},"default":"false"},"blurOnSelect":{"type":{"name":"union","description":"\'mouse\'<br>&#124;&nbsp;\'touch\'<br>&#124;&nbsp;bool"},"default":"false"},"ChipProps":{"type":{"name":"object"},"deprecated":true,"deprecationInfo":"Use <code>slotProps.chip</code> instead. This prop will be removed in v7. See <a href=\\"/material-ui/migration/migrating-from-deprecated-apis/\\">Migrating from deprecated APIs</a> for more details."},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"clearIcon":{"type":{"name":"node"},"default":"<ClearIcon fontSize=\\"small\\" />"},"clearOnBlur":{"type":{"name":"bool"},"default":"!props.freeSolo"},"clearOnEscape":{"type":{"name":"bool"},"default":"false"},"clearText":{"type":{"name":"string"},"default":"\'Clear\'"},"closeText":{"type":{"name":"string"},"default":"\'Close\'"},"componentsProps":{"type":{"name":"shape","description":"{ clearIndicator?: object, paper?: object, popper?: object, popupIndicator?: object }"},"deprecated":true,"deprecationInfo":"Use the <code>slotProps</code> prop instead. This prop will be removed in v7. See <a href=\\"/material-ui/migration/migrating-from-deprecated-apis/\\">Migrating from deprecated APIs</a> for more details."},"defaultValue":{"type":{"name":"custom","description":"any"},"default":"props.multiple ? [] : null"},"disableClearable":{"type":{"name":"bool"},"default":"false"},"disableCloseOnSelect":{"type":{"name":"bool"},"default":"false"},"disabled":{"type":{"name":"bool"},"default":"false"},"disabledItemsFocusable":{"type":{"name":"bool"},"default":"false"},"disableListWrap":{"type":{"name":"bool"},"default":"false"},"disablePortal":{"type":{"name":"bool"},"default":"false"},"filterOptions":{"type":{"name":"func"},"default":"createFilterOptions()","signature":{"type":"function(options: Array<Value>, state: object) => Array<Value>","describedArgs":["options","state"]}},"filterSelectedOptions":{"type":{"name":"bool"},"default":"false"},"forcePopupIcon":{"type":{"name":"union","description":"\'auto\'<br>&#124;&nbsp;bool"},"default":"\'auto\'"},"freeSolo":{"type":{"name":"bool"},"default":"false"},"fullWidth":{"type":{"name":"bool"},"default":"false"},"getLimitTagsText":{"type":{"name":"func"},"default":"(more) => `+${more}`","signature":{"type":"function(more: number) => ReactNode","describedArgs":["more"]}},"getOptionDisabled":{"type":{"name":"func"},"signature":{"type":"function(option: Value) => boolean","describedArgs":["option"]}},"getOptionKey":{"type":{"name":"func"},"signature":{"type":"function(option: Value) => string | number","describedArgs":["option"]}},"getOptionLabel":{"type":{"name":"func"},"default":"(option) => option.label ?? option","signature":{"type":"function(option: Value) => string","describedArgs":[]}},"groupBy":{"type":{"name":"func"},"signature":{"type":"function(options: Value) => string","describedArgs":["options"]}},"handleHomeEndKeys":{"type":{"name":"bool"},"default":"!props.freeSolo"},"id":{"type":{"name":"string"}},"includeInputInList":{"type":{"name":"bool"},"default":"false"},"inputValue":{"type":{"name":"string"}},"isOptionEqualToValue":{"type":{"name":"func"},"signature":{"type":"function(option: Value, value: Value) => boolean","describedArgs":["option","value"]}},"limitTags":{"type":{"name":"custom","description":"integer"},"default":"-1"},"ListboxComponent":{"type":{"name":"elementType"},"default":"\'ul\'","deprecated":true,"deprecationInfo":"Use <code>slots.listbox</code> instead. This prop will be removed in v7. See <a href=\\"/material-ui/migration/migrating-from-deprecated-apis/\\">Migrating from deprecated APIs</a> for more details."},"ListboxProps":{"type":{"name":"object"},"deprecated":true,"deprecationInfo":"Use <code>slotProps.listbox</code> instead. This prop will be removed in v7. See <a href=\\"/material-ui/migration/migrating-from-deprecated-apis/\\">Migrating from deprecated APIs</a> for more details."},"loading":{"type":{"name":"bool"},"default":"false"},"loadingText":{"type":{"name":"node"},"default":"\'Loading…\'"},"multiple":{"type":{"name":"bool"},"default":"false"},"noOptionsText":{"type":{"name":"node"},"default":"\'No options\'"},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, value: Value | Array<Value>, reason: string, details?: string) => void","describedArgs":["event","value","reason"]}},"onClose":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, reason: string) => void","describedArgs":["event","reason"]}},"onHighlightChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, option: Value, reason: string) => void","describedArgs":["event","option","reason"]}},"onInputChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, value: string, reason: string) => void","describedArgs":["event","value","reason"]}},"onOpen":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent) => void","describedArgs":["event"]}},"open":{"type":{"name":"bool"}},"openOnFocus":{"type":{"name":"bool"},"default":"false"},"openText":{"type":{"name":"string"},"default":"\'Open\'"},"PaperComponent":{"type":{"name":"elementType"},"default":"Paper","deprecated":true,"deprecationInfo":"Use <code>slots.paper</code> instead. This prop will be removed in v7. See <a href=\\"/material-ui/migration/migrating-from-deprecated-apis/\\">Migrating from deprecated APIs</a> for more details."},"PopperComponent":{"type":{"name":"elementType"},"default":"Popper","deprecated":true,"deprecationInfo":"Use <code>slots.popper</code> instead. This prop will be removed in v7. See <a href=\\"/material-ui/migration/migrating-from-deprecated-apis/\\">Migrating from deprecated APIs</a> for more details."},"popupIcon":{"type":{"name":"node"},"default":"<ArrowDropDownIcon />"},"readOnly":{"type":{"name":"bool"},"default":"false"},"renderGroup":{"type":{"name":"func"},"signature":{"type":"function(params: AutocompleteRenderGroupParams) => ReactNode","describedArgs":["params"]}},"renderOption":{"type":{"name":"func"},"signature":{"type":"function(props: object, option: Value, state: object, ownerState: object) => ReactNode","describedArgs":["props","option","state","ownerState"]}},"renderTags":{"type":{"name":"func"},"signature":{"type":"function(value: Array<Value>, getTagProps: function, ownerState: object) => ReactNode","describedArgs":["value","getTagProps","ownerState"]}},"selectOnFocus":{"type":{"name":"bool"},"default":"!props.freeSolo"},"size":{"type":{"name":"union","description":"\'small\'<br>&#124;&nbsp;\'medium\'<br>&#124;&nbsp;string"},"default":"\'medium\'"},"slotProps":{"type":{"name":"shape","description":"{ chip?: func<br>&#124;&nbsp;object, clearIndicator?: func<br>&#124;&nbsp;object, listbox?: func<br>&#124;&nbsp;object, paper?: func<br>&#124;&nbsp;object, popper?: func<br>&#124;&nbsp;object, popupIndicator?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ listbox?: elementType, paper?: elementType, popper?: elementType }"},"default":"{}"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"value":{"type":{"name":"custom","description":"any"}}},"name":"Autocomplete","imports":["import Autocomplete from \'@mui/material/Autocomplete\';","import { Autocomplete } from \'@mui/material\';"],"slots":[{"name":"listbox","description":"The component used to render the listbox.","default":"\'ul\'","class":"MuiAutocomplete-listbox"},{"name":"paper","description":"The component used to render the body of the popup.","default":"Paper","class":"MuiAutocomplete-paper"},{"name":"popper","description":"The component used to position the popup.","default":"Popper","class":"MuiAutocomplete-popper"}],"classes":[{"key":"clearIndicator","className":"MuiAutocomplete-clearIndicator","description":"Styles applied to the clear indicator.","isGlobal":false},{"key":"endAdornment","className":"MuiAutocomplete-endAdornment","description":"Styles applied to the endAdornment element.","isGlobal":false},{"key":"expanded","className":"Mui-expanded","description":"State class applied to the root element if the listbox is displayed.","isGlobal":true},{"key":"focused","className":"Mui-focused","description":"State class applied to the root element if focused.","isGlobal":true},{"key":"focusVisible","className":"Mui-focusVisible","description":"Styles applied to the option elements if they are keyboard focused.","isGlobal":true},{"key":"fullWidth","className":"MuiAutocomplete-fullWidth","description":"Styles applied to the root element if `fullWidth={true}`.","isGlobal":false},{"key":"groupLabel","className":"MuiAutocomplete-groupLabel","description":"Styles applied to the group\'s label elements.","isGlobal":false},{"key":"groupUl","className":"MuiAutocomplete-groupUl","description":"Styles applied to the group\'s ul elements.","isGlobal":false},{"key":"hasClearIcon","className":"MuiAutocomplete-hasClearIcon","description":"Styles applied when the clear icon is rendered.","isGlobal":false},{"key":"hasPopupIcon","className":"MuiAutocomplete-hasPopupIcon","description":"Styles applied when the popup icon is rendered.","isGlobal":false},{"key":"input","className":"MuiAutocomplete-input","description":"Styles applied to the input element.","isGlobal":false},{"key":"inputFocused","className":"MuiAutocomplete-inputFocused","description":"Styles applied to the input element if the input is focused.","isGlobal":false},{"key":"inputRoot","className":"MuiAutocomplete-inputRoot","description":"Styles applied to the Input element.","isGlobal":false},{"key":"loading","className":"MuiAutocomplete-loading","description":"Styles applied to the loading wrapper.","isGlobal":false},{"key":"noOptions","className":"MuiAutocomplete-noOptions","description":"Styles applied to the no option wrapper.","isGlobal":false},{"key":"option","className":"MuiAutocomplete-option","description":"Styles applied to the option elements.","isGlobal":false},{"key":"popperDisablePortal","className":"MuiAutocomplete-popperDisablePortal","description":"Styles applied to the popper element if `disablePortal={true}`.","isGlobal":false},{"key":"popupIndicator","className":"MuiAutocomplete-popupIndicator","description":"Styles applied to the popup indicator.","isGlobal":false},{"key":"popupIndicatorOpen","className":"MuiAutocomplete-popupIndicatorOpen","description":"Styles applied to the popup indicator if the popup is open.","isGlobal":false},{"key":"root","className":"MuiAutocomplete-root","description":"Styles applied to the root element.","isGlobal":false},{"key":"tag","className":"MuiAutocomplete-tag","description":"Styles applied to the tag elements, for example the chips.","isGlobal":false},{"key":"tagSizeMedium","className":"MuiAutocomplete-tagSizeMedium","description":"Styles applied to the tag elements, for example the chips if `size=\\"medium\\"`.","isGlobal":false},{"key":"tagSizeSmall","className":"MuiAutocomplete-tagSizeSmall","description":"Styles applied to the tag elements, for example the chips if `size=\\"small\\"`.","isGlobal":false}],"spread":true,"themeDefaultProps":true,"muiName":"MuiAutocomplete","filename":"/packages/mui-material/src/Autocomplete/Autocomplete.js","inheritance":null,"demos":"<ul><li><a href=\\"/material-ui/react-autocomplete/\\">Autocomplete</a></li></ul>","cssComponent":false}'),s=o(735250);function r(e){var t=e.descriptions,o=e.pageContent;return(0,s.jsx)(n.Z,{descriptions:t,pageContent:o})}r.getInitialProps=function(){var e=o(25102);return{descriptions:(0,i.Z)(e),pageContent:a}}},412007:function(e,t,o){"use strict";o.d(t,{Z:function(){return s}});var n=o(705794),i=o(187509),a=/-([a-z]{2})\.json$/;function s(e){var t={},o={},s=[];return e.keys().forEach(function(e){e.match(a)?s.push(e):s=[e].concat(s)}),s.forEach(function(r){var p=r.match(a),l=null!==p?p[1]:"en",c=e(r)||null;if(null!==c&&c.componentDescription){var u=[],d=(0,n.createRender)({headingHashes:t,toc:u,userLanguage:l,location:s,options:{ignoreLanguagePages:i.LANGUAGES_IGNORE_PAGES,env:{SOURCE_CODE_REPO:""}}});c.componentDescription=d(c.componentDescription),c.componentDescriptionToc=u}o[l]=c}),o}},936246:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/autocomplete",function(){return o(442589)}])},25102:function(e,t,o){var n={"./autocomplete.json":547695};function i(e){return o(a(e))}function a(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=a,e.exports=i,i.id=25102},36790:function(e,t,o){"use strict";function n(e){if(void 0===e)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return e}o.d(t,{Z:function(){return n}})},376757:function(e,t,o){"use strict";o.d(t,{Z:function(){return c}});var n=o(136729),i=o(267765),a=o(861963);function s(e){return(s=i?a.bind():function(e){return e.__proto__||a(e)})(e)}function r(){try{var e=!Boolean.prototype.valueOf.call(n(Boolean,[],function(){}))}catch(e){}return(r=function(){return!!e})()}var p=o(931467),l=o(36790);function c(e){var t=r();return function(){var o,i=s(e);if(t){var a=s(this).constructor;o=n(i,arguments,a)}else o=i.apply(this,arguments);return function(e,t){if(t&&("object"==(0,p.Z)(t)||"function"==typeof t))return t;if(void 0!==t)throw TypeError("Derived constructors may only return object or undefined");return(0,l.Z)(e)}(this,o)}}},206782:function(e,t,o){"use strict";o.d(t,{Z:function(){return s}});var n=o(17800),i=o(303268),a=o(909101);function s(e,t){if("function"!=typeof t&&null!==t)throw TypeError("Super expression must either be null or a function");e.prototype=n(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),i(e,"prototype",{writable:!1}),t&&(0,a.Z)(e,t)}},909101:function(e,t,o){"use strict";o.d(t,{Z:function(){return i}});var n=o(267765);function i(e,t){return(i=n?n.bind():function(e,t){return e.__proto__=t,e})(e,t)}},547695:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"autoComplete":{"description":"If <code>true</code>, the portion of the selected suggestion that the user hasn&#39;t typed, known as the completion string, appears inline after the input cursor in the textbox. The inline completion string is visually highlighted and has a selected state."},"autoHighlight":{"description":"If <code>true</code>, the first option is automatically highlighted."},"autoSelect":{"description":"If <code>true</code>, the selected option becomes the value of the input when the Autocomplete loses focus unless the user chooses a different option or changes the character string in the input.<br>When using the <code>freeSolo</code> mode, the typed value will be the input value if the Autocomplete loses focus without highlighting an option."},"blurOnSelect":{"description":"<p>Control if the input should be blurred when an option is selected:</p>\\n<ul>\\n<li><code>false</code> the input is not blurred.</li>\\n<li><code>true</code> the input is always blurred.</li>\\n<li><code>touch</code> the input is blurred after a touch event.</li>\\n<li><code>mouse</code> the input is blurred after a mouse event.</li>\\n</ul>\\n"},"ChipProps":{"description":"Props applied to the <a href=\\"/material-ui/api/chip/\\"><code>Chip</code></a> element."},"classes":{"description":"Override or extend the styles applied to the component."},"clearIcon":{"description":"The icon to display in place of the default clear icon."},"clearOnBlur":{"description":"If <code>true</code>, the input&#39;s text is cleared on blur if no value is selected.<br>Set it to <code>true</code> if you want to help the user enter a new value. Set it to <code>false</code> if you want to help the user resume their search."},"clearOnEscape":{"description":"If <code>true</code>, clear all values when the user presses escape and the popup is closed."},"clearText":{"description":"Override the default text for the <em>clear</em> icon button.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"closeText":{"description":"Override the default text for the <em>close popup</em> icon button.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"componentsProps":{"description":"The props used for each slot inside."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disableClearable":{"description":"If <code>true</code>, the input can&#39;t be cleared."},"disableCloseOnSelect":{"description":"If <code>true</code>, the popup won&#39;t close when a value is selected."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disabledItemsFocusable":{"description":"If <code>true</code>, will allow focus on disabled items."},"disableListWrap":{"description":"If <code>true</code>, the list box in the popup will not wrap focus."},"disablePortal":{"description":"If <code>true</code>, the <code>Popper</code> content will be under the DOM hierarchy of the parent component."},"filterOptions":{"description":"A function that determines the filtered options to be rendered on search.","typeDescriptions":{"options":"The options to render.","state":"The state of the component."}},"filterSelectedOptions":{"description":"If <code>true</code>, hide the selected options from the list box."},"forcePopupIcon":{"description":"Force the visibility display of the popup icon."},"freeSolo":{"description":"If <code>true</code>, the Autocomplete is free solo, meaning that the user input is not bound to provided options."},"fullWidth":{"description":"If <code>true</code>, the input will take up the full width of its container."},"getLimitTagsText":{"description":"The label to display when the tags are truncated (<code>limitTags</code>).","typeDescriptions":{"more":"The number of truncated tags."}},"getOptionDisabled":{"description":"Used to determine the disabled state for a given option.","typeDescriptions":{"option":"The option to test."}},"getOptionKey":{"description":"Used to determine the key for a given option. This can be useful when the labels of options are not unique (since labels are used as keys by default).","typeDescriptions":{"option":"The option to get the key for."}},"getOptionLabel":{"description":"Used to determine the string value for a given option. It&#39;s used to fill the input (and the list box options if <code>renderOption</code> is not provided).<br>If used in free solo mode, it must accept both the type of the options and a string."},"groupBy":{"description":"If provided, the options will be grouped under the returned string. The groupBy value is also used as the text for group headings when <code>renderGroup</code> is not provided.","typeDescriptions":{"options":"The options to group."}},"handleHomeEndKeys":{"description":"If <code>true</code>, the component handles the &quot;Home&quot; and &quot;End&quot; keys when the popup is open. It should move focus to the first option and last option, respectively."},"id":{"description":"This prop is used to help implement the accessibility logic. If you don&#39;t provide an id it will fall back to a randomly generated one."},"includeInputInList":{"description":"If <code>true</code>, the highlight can move to the input."},"inputValue":{"description":"The input value."},"isOptionEqualToValue":{"description":"Used to determine if the option represents the given value. Uses strict equality by default. ⚠️ Both arguments need to be handled, an option can only match with one value.","typeDescriptions":{"option":"The option to test.","value":"The value to test against."}},"limitTags":{"description":"The maximum number of tags that will be visible when not focused. Set <code>-1</code> to disable the limit."},"ListboxComponent":{"description":"The component used to render the listbox."},"ListboxProps":{"description":"Props applied to the Listbox element."},"loading":{"description":"If <code>true</code>, the component is in a loading state. This shows the <code>loadingText</code> in place of suggestions (only if there are no suggestions to show, for example <code>options</code> are empty)."},"loadingText":{"description":"Text to display when in a loading state.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"multiple":{"description":"If <code>true</code>, <code>value</code> must be an array and the menu will support multiple selections."},"noOptionsText":{"description":"Text to display when there are no options.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"onChange":{"description":"Callback fired when the value changes.","typeDescriptions":{"event":"The event source of the callback.","value":"The new value of the component.","reason":"One of &quot;createOption&quot;, &quot;selectOption&quot;, &quot;removeOption&quot;, &quot;blur&quot; or &quot;clear&quot;."}},"onClose":{"description":"Callback fired when the popup requests to be closed. Use in controlled mode (see open).","typeDescriptions":{"event":"The event source of the callback.","reason":"Can be: <code>&quot;toggleInput&quot;</code>, <code>&quot;escape&quot;</code>, <code>&quot;selectOption&quot;</code>, <code>&quot;removeOption&quot;</code>, <code>&quot;blur&quot;</code>."}},"onHighlightChange":{"description":"Callback fired when the highlight option changes.","typeDescriptions":{"event":"The event source of the callback.","option":"The highlighted option.","reason":"Can be: <code>&quot;keyboard&quot;</code>, <code>&quot;auto&quot;</code>, <code>&quot;mouse&quot;</code>, <code>&quot;touch&quot;</code>."}},"onInputChange":{"description":"Callback fired when the input value changes.","typeDescriptions":{"event":"The event source of the callback.","value":"The new value of the text input.","reason":"Can be: <code>&quot;input&quot;</code> (user input), <code>&quot;reset&quot;</code> (programmatic change), <code>&quot;clear&quot;</code>."}},"onOpen":{"description":"Callback fired when the popup requests to be opened. Use in controlled mode (see open).","typeDescriptions":{"event":"The event source of the callback."}},"open":{"description":"If <code>true</code>, the component is shown."},"openOnFocus":{"description":"If <code>true</code>, the popup will open on input focus."},"openText":{"description":"Override the default text for the <em>open popup</em> icon button.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"options":{"description":"Array of options."},"PaperComponent":{"description":"The component used to render the body of the popup."},"PopperComponent":{"description":"The component used to position the popup."},"popupIcon":{"description":"The icon to display in place of the default popup icon."},"readOnly":{"description":"If <code>true</code>, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted."},"renderGroup":{"description":"Render the group.","typeDescriptions":{"params":"The group to render."}},"renderInput":{"description":"Render the input."},"renderOption":{"description":"Render the option, use <code>getOptionLabel</code> by default.","typeDescriptions":{"props":"The props to apply on the li element.","option":"The option to render.","state":"The state of each option.","ownerState":"The state of the Autocomplete component."}},"renderTags":{"description":"Render the selected value.","typeDescriptions":{"value":"The <code>value</code> provided to the component.","getTagProps":"A tag props getter.","ownerState":"The state of the Autocomplete component."}},"selectOnFocus":{"description":"If <code>true</code>, the input&#39;s text is selected on focus. It helps the user clear the selected value."},"size":{"description":"The size of the component."},"slotProps":{"description":"The props used for each slot inside."},"slots":{"description":"The components used for each slot inside."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"The value of the autocomplete.<br>The value must have reference equality with the option in order to be selected. You can customize the equality behavior with the <code>isOptionEqualToValue</code> prop."}},"classDescriptions":{"clearIndicator":{"description":"Styles applied to {{nodeName}}.","nodeName":"the clear indicator"},"endAdornment":{"description":"Styles applied to {{nodeName}}.","nodeName":"the endAdornment element"},"expanded":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the listbox is displayed"},"focused":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"focused"},"focusVisible":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the option elements","conditions":"they are keyboard focused"},"fullWidth":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>fullWidth={true}</code>"},"groupLabel":{"description":"Styles applied to {{nodeName}}.","nodeName":"the group&#39;s label elements"},"groupUl":{"description":"Styles applied to {{nodeName}}.","nodeName":"the group&#39;s ul elements"},"hasClearIcon":{"description":"Styles applied when the clear icon is rendered."},"hasPopupIcon":{"description":"Styles applied when the popup icon is rendered."},"input":{"description":"Styles applied to {{nodeName}}.","nodeName":"the input element"},"inputFocused":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the input element","conditions":"the input is focused"},"inputRoot":{"description":"Styles applied to {{nodeName}}.","nodeName":"the Input element"},"loading":{"description":"Styles applied to {{nodeName}}.","nodeName":"the loading wrapper"},"noOptions":{"description":"Styles applied to {{nodeName}}.","nodeName":"the no option wrapper"},"option":{"description":"Styles applied to {{nodeName}}.","nodeName":"the option elements"},"popperDisablePortal":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the popper element","conditions":"<code>disablePortal={true}</code>"},"popupIndicator":{"description":"Styles applied to {{nodeName}}.","nodeName":"the popup indicator"},"popupIndicatorOpen":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the popup indicator","conditions":"the popup is open"},"root":{"description":"Styles applied to the root element."},"tag":{"description":"Styles applied to {{nodeName}}, {{conditions}}.","nodeName":"the tag elements","conditions":"for example the chips"},"tagSizeMedium":{"description":"Styles applied to {{nodeName}}, {{conditions}}.","nodeName":"the tag elements","conditions":"for example the chips if <code>size=\\"medium\\"</code>"},"tagSizeSmall":{"description":"Styles applied to {{nodeName}}, {{conditions}}.","nodeName":"the tag elements","conditions":"for example the chips if <code>size=\\"small\\"</code>"}},"slotDescriptions":{"listbox":"The component used to render the listbox.","paper":"The component used to render the body of the popup.","popper":"The component used to position the popup."}}')}},function(e){e.O(0,[49774,9535,73976,97146,59727,85925,17376,17103,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,12589,92888,40179],function(){return e(e.s=936246)}),_N_E=e.O()}]);