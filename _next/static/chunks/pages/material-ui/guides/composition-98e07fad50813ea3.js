(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[22133,39519],{333897:function(n,a,s){var t=s(915012),o=/^\s+/;n.exports=function(n){return n?n.slice(0,t(n)+1).replace(o,""):n}},915012:function(n){var a=/\s/;n.exports=function(n){for(var s=n.length;s--&&a.test(n.charAt(s)););return s}},889678:function(n,a,s){var t=s(706627),o=s(885365),e=s(67948),p=Math.max,c=Math.min;n.exports=function(n,a,s){var i,l,r,u,d,k,m=0,h=!1,f=!1,g=!0;if("function"!=typeof n)throw TypeError("Expected a function");function y(a){var s=i,t=l;return i=l=void 0,m=a,u=n.apply(t,s)}function v(n){var s=n-k,t=n-m;return void 0===k||s>=a||s<0||f&&t>=r}function C(){var n,s,t,e=o();if(v(e))return w(e);d=setTimeout(C,(n=e-k,s=e-m,t=a-n,f?c(t,r-s):t))}function w(n){return(d=void 0,g&&i)?y(n):(i=l=void 0,u)}function b(){var n,s=o(),t=v(s);if(i=arguments,l=this,k=s,t){if(void 0===d)return m=n=k,d=setTimeout(C,a),h?y(n):u;if(f)return clearTimeout(d),d=setTimeout(C,a),y(k)}return void 0===d&&(d=setTimeout(C,a)),u}return a=e(a)||0,t(s)&&(h=!!s.leading,r=(f="maxWait"in s)?p(e(s.maxWait)||0,a):r,g="trailing"in s?!!s.trailing:g),b.cancel=function(){void 0!==d&&clearTimeout(d),m=0,i=k=l=d=void 0},b.flush=function(){return void 0===d?u:w(o())},b}},706627:function(n){n.exports=function(n){var a=typeof n;return null!=n&&("object"==a||"function"==a)}},885365:function(n,a,s){var t=s(573401);n.exports=function(){return t.Date.now()}},123763:function(n,a,s){var t=s(889678),o=s(706627);n.exports=function(n,a,s){var e=!0,p=!0;if("function"!=typeof n)throw TypeError("Expected a function");return o(s)&&(e="leading"in s?!!s.leading:e,p="trailing"in s?!!s.trailing:p),t(n,a,{leading:e,maxWait:a,trailing:p})}},67948:function(n,a,s){var t=s(333897),o=s(706627),e=s(42848),p=0/0,c=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,l=/^0o[0-7]+$/i,r=parseInt;n.exports=function(n){if("number"==typeof n)return n;if(e(n))return p;if(o(n)){var a="function"==typeof n.valueOf?n.valueOf():n;n=o(a)?a+"":a}if("string"!=typeof n)return 0===n?n:+n;n=t(n);var s=i.test(n);return s||l.test(n)?r(n.slice(2),s?2:8):c.test(n)?p:+n}},206719:function(n,a,s){"use strict";var t=s(778521),o=s(577903),e=s(863363),p=s(614030),c=s(431114),i=s.n(c),l=s(470079),r=s(653048),u=s(306029),d=s(532785),k=s(360731),m=s(502894),h=s(397107),f=s(735250),g=["baseClassName","className","color","component","fontSize"],y=(0,k.Uu)("MuiIcon"),v=function(n){var a=n.color,s=n.fontSize,t=n.classes,o={root:["root","inherit"!==a&&"color".concat((0,d.Z)(a)),"fontSize".concat((0,d.Z)(s))]};return(0,u.Z)(o,h.d,t)},C=(0,m.ZP)("span",{name:"MuiIcon",slot:"Root",overridesResolver:function(n,a){var s=n.ownerState;return[a.root,"inherit"!==s.color&&a["color".concat((0,d.Z)(s.color))],a["fontSize".concat((0,d.Z)(s.fontSize))]]}})(function(n){var a=n.theme;return{userSelect:"none",width:"1em",height:"1em",overflow:"hidden",display:"inline-block",textAlign:"center",flexShrink:0,variants:[{props:{fontSize:"inherit"},style:{fontSize:"inherit"}},{props:{fontSize:"small"},style:{fontSize:a.typography.pxToRem(20)}},{props:{fontSize:"medium"},style:{fontSize:a.typography.pxToRem(24)}},{props:{fontSize:"large"},style:{fontSize:a.typography.pxToRem(36)}},{props:{color:"action"},style:{color:(a.vars||a).palette.action.active}},{props:{color:"disabled"},style:{color:(a.vars||a).palette.action.disabled}},{props:{color:"inherit"},style:{color:void 0}}].concat((0,p.Z)(i()(a.palette).filter(function(n){var a=(0,e.Z)(n,2)[1];return a&&a.main}).map(function(n){var s=(0,e.Z)(n,1)[0];return{props:{color:s},style:{color:(a.vars||a).palette[s].main}}})))}}),w=l.forwardRef(function(n,a){var s=y({props:n,name:"MuiIcon"}),e=s.baseClassName,p=void 0===e?"material-icons":e,c=s.className,i=s.color,l=s.component,u=void 0===l?"span":l,d=s.fontSize,k=(0,o.Z)(s,g),m=(0,t.Z)((0,t.Z)({},s),{},{baseClassName:p,color:void 0===i?"inherit":i,component:u,fontSize:void 0===d?"medium":d}),h=v(m);return(0,f.jsx)(C,(0,t.Z)({as:u,className:(0,r.default)(p,"notranslate",h.root,c),ownerState:m,"aria-hidden":!0,ref:a},k))});w&&(w.muiName="Icon"),a.Z=w},397107:function(n,a,s){"use strict";s.d(a,{d:function(){return e}});var t=s(344443),o=s(92358);function e(n){return(0,o.ZP)("MuiIcon",n)}var p=(0,t.Z)("MuiIcon",["root","colorPrimary","colorSecondary","colorAction","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeMedium","fontSizeLarge"]);a.Z=p},520382:function(n,a,s){"use strict";s.r(a),s.d(a,{default:function(){return t.Z},getIconUtilityClass:function(){return o.d},iconClasses:function(){return o.Z}});var t=s(206719),o=s(397107)},362023:function(n,a,s){"use strict";s.r(a),s.d(a,{default:function(){return t.Z},getIconButtonUtilityClass:function(){return o.r},iconButtonClasses:function(){return o.Z}});var t=s(214077),o=s(315192)},892112:function(n,a,s){"use strict";s.r(a),s.d(a,{default:function(){return v}});var t,o={};s.r(o),s.d(o,{demoComponents:function(){return g},demos:function(){return f},docs:function(){return h},srcComponents:function(){return y}});var e=s(778521),p=s(470079),c=s.t(p,2),i=s(652755),l=s(362023),r=s(520382),u=s(214077),d=s(206719),k=s(735250);function m(n){return(0,k.jsx)(d.Z,(0,e.Z)({},n))}m.muiName="Icon";var h={en:{description:"Material\xa0UI tries to make composition as easy as possible.",location:"/docs/data/material/guides/composition/composition.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>Composition</h1><p class="description">Material\xa0UI tries to make composition as easy as possible.</p>\n\n<h2 id="wrapping-components"><a href="#wrapping-components" class="title-link-to-anchor">Wrapping components<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="wrapping-components"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>To provide maximum flexibility and performance, Material\xa0UI needs a way to know the nature of the child elements a component receives.\nTo solve this problem, we tag some of the components with a <code>muiName</code> static property when needed.</p>\n<p>You may, however, need to wrap a component in order to enhance it, which can conflict with the <code>muiName</code> solution.\nIf you wrap a component, verify if that component has this static property set.</p>\n<p>If you encounter this issue, you need to use the same tag for your wrapping component that is used with the wrapped component.\nIn addition, you should forward the props, as the parent component may need to control the wrapped components props.</p>\n<p>Let&#39;s see an example:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">const</span> <span class="token function-variable function">WrappedIcon</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\nWrappedIcon<span class="token punctuation">.</span>muiName <span class="token operator">=</span> Icon<span class="token punctuation">.</span>muiName<span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"Composition.js"},'<h2 id="component-prop"><a href="#component-prop" class="title-link-to-anchor">Component prop<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="component-prop"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Material\xa0UI allows you to change the root element that will be rendered via a prop called <code>component</code>.</p>\n<h3 id="how-does-it-work"><a href="#how-does-it-work" class="title-link-to-anchor">How does it work?<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="how-does-it-work"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The custom component will be rendered by Material\xa0UI like this:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>component<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>For example, by default a <code>List</code> component will render a <code>&lt;ul&gt;</code> element.\nThis can be changed by passing a <a href="https://react.dev/reference/react/Component">React component</a> to the <code>component</code> prop.\nThe following example will render the <code>List</code> component with a <code>&lt;nav&gt;</code> element as root element instead:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">List</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItem</span></span> <span class="token attr-name">button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItemText</span></span> <span class="token attr-name">primary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Trash<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ListItem</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItem</span></span> <span class="token attr-name">button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItemText</span></span> <span class="token attr-name">primary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Spam<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ListItem</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">List</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>This pattern is very powerful and allows for great flexibility, as well as a way to interoperate with other libraries, such as your favorite routing or forms library.\nBut it also <strong>comes with a small caveat!</strong></p>\n<h3 id="inlining-amp-caveat"><a href="#inlining-amp-caveat" class="title-link-to-anchor">Inlining &amp; caveat<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="inlining-amp-caveat"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Using an inline function as an argument for the <code>component</code> prop may result in <strong>unexpected unmounting</strong>, since a new component is passed every time React renders.\nFor instance, if you want to create a custom <code>ListItem</code> that acts as a link, you could do the following:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-router-dom\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">ListItemLink</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> icon<span class="token punctuation">,</span> primary<span class="token punctuation">,</span> to <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">CustomLink</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>to<span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItem</span></span> <span class="token attr-name">button</span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>CustomLink<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItemIcon</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>icon<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ListItemIcon</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItemText</span></span> <span class="token attr-name">primary</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>primary<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ListItem</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>However, since we are using an inline function to change the rendered component, React will remount the link every time <code>ListItemLink</code> is rendered. Not only will React update the DOM unnecessarily but the state will be lost, for example the ripple effect of the <code>ListItem</code> will also not work correctly.</p>\n\n</div></aside><p>The solution is simple: <strong>avoid inline functions and pass a static component to the <code>component</code> prop</strong> instead.\nLet&#39;s change the <code>ListItemLink</code> component so <code>CustomLink</code> always reference the same component:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Link<span class="token punctuation">,</span> LinkProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-router-dom\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">ListItemLink</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> icon<span class="token punctuation">,</span> primary<span class="token punctuation">,</span> to <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> CustomLink <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useMemo</span><span class="token punctuation">(</span>\n    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n      React<span class="token punctuation">.</span>forwardRef<span class="token operator">&lt;</span>HTMLAnchorElement<span class="token punctuation">,</span> Omit<span class="token operator">&lt;</span>RouterLinkProps<span class="token punctuation">,</span> <span class="token string">\'to\'</span><span class="token operator">>></span><span class="token punctuation">(</span>\n        <span class="token keyword">function</span> <span class="token function">Link</span><span class="token punctuation">(</span>linkProps<span class="token punctuation">,</span> ref<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>to<span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>linkProps<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>to<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItem</span></span> <span class="token attr-name">button</span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>CustomLink<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItemIcon</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>icon<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ListItemIcon</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItemText</span></span> <span class="token attr-name">primary</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>primary<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ListItem</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="prop-forwarding-amp-caveat"><a href="#prop-forwarding-amp-caveat" class="title-link-to-anchor">Prop forwarding &amp; caveat<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="prop-forwarding-amp-caveat"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You can take advantage of the prop forwarding to simplify the code.\nIn this example, we don&#39;t create any intermediary component:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-router-dom\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListItem</span></span> <span class="token attr-name">button</span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Link<span class="token punctuation">}</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>However, this strategy suffers from a limitation: prop name collisions.\nThe component receiving the <code>component</code> prop (for example ListItem) might intercept the prop (for example to) that is destined to the leaf element (for example Link).</p>\n\n</div></aside><h3 id="with-typescript"><a href="#with-typescript" class="title-link-to-anchor">With TypeScript<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="with-typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To be able to use the <code>component</code> prop, the type of the props should be used with type arguments. Otherwise, the <code>component</code> prop will not be present.</p>\n<p>The examples below use <code>TypographyProps</code> but the same will work for any component which has props defined with <code>OverrideProps</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token keyword">import</span> <span class="token punctuation">{</span> TypographyProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/Typography\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">CustomComponent</span><span class="token punctuation">(</span>props<span class="token operator">:</span> TypographyProps<span class="token operator">&lt;</span><span class="token string">\'a\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> component<span class="token operator">:</span> <span class="token string">\'a\'</span> <span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">/* ... */</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// ...</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CustomComponent</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Now the <code>CustomComponent</code> can be used with a <code>component</code> prop which should be set to <code>&#39;a&#39;</code>.\nIn addition, the <code>CustomComponent</code> will have all props of a <code>&lt;a&gt;</code> HTML element.\nThe other props of the <code>Typography</code> component will also be present in props of the <code>CustomComponent</code>.</p>\n<p>You can find a code example with the Button and react-router-dom in <a href="/material-ui/integrations/routing/#component-prop">these demos</a>.</p>\n<h4>Generic</h4><p>It&#39;s also possible to have a generic <code>CustomComponent</code> which will accept any React component, and HTML elements.</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token keyword">function</span> GenericCustomComponent<span class="token operator">&lt;</span><span class="token constant">C</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>ElementType</span><span class="token operator">></span><span class="token punctuation">(</span>\n  props<span class="token operator">:</span> TypographyProps<span class="token operator">&lt;</span><span class="token constant">C</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> component<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">C</span> <span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">/* ... */</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>If the <code>GenericCustomComponent</code> is used with a <code>component</code> prop provided, it should also have all props required by the provided component.</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token keyword">function</span> <span class="token function">ThirdPartyComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span> prop1 <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> prop1<span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">/* ... */</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// ...</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GenericCustomComponent</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ThirdPartyComponent<span class="token punctuation">}</span></span> <span class="token attr-name">prop1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>some value<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The <code>prop1</code> became required for the <code>GenericCustomComponent</code> as the <code>ThirdPartyComponent</code> has it as a requirement.</p>\n<p>Not every component fully supports any component type you pass in.\nIf you encounter a component that rejects its <code>component</code> props in TypeScript, please open an issue.\nThere is an ongoing effort to fix this by making component props generic.</p>\n<h2 id="caveat-with-refs"><a href="#caveat-with-refs" class="title-link-to-anchor">Caveat with refs<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="caveat-with-refs"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>This section covers caveats when using a custom component as <code>children</code> or for the\n<code>component</code> prop.</p>\n<p>Some of the components need access to the DOM node. This was previously possible\nby using <code>ReactDOM.findDOMNode</code>. This function is deprecated in favor of <code>ref</code> and\nref forwarding. However, only the following component types can be given a <code>ref</code>:</p>\n<ul>\n<li>Any Material\xa0UI component</li>\n<li>class components, that is <code>React.Component</code> or <code>React.PureComponent</code></li>\n<li>DOM (or host) components, for example <code>div</code> or <code>button</code></li>\n<li><a href="https://react.dev/reference/react/forwardRef">React.forwardRef components</a></li>\n<li><a href="https://react.dev/reference/react/lazy">React.lazy components</a></li>\n<li><a href="https://react.dev/reference/react/memo">React.memo components</a></li>\n</ul>\n<p>If you don&#39;t use one of the above types when using your components in conjunction with Material\xa0UI, you might see a warning from\nReact in your console similar to:</p>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?</p>\n\n</div></aside><p>Note that you will still get this warning for <code>lazy</code> and <code>memo</code> components if their wrapped component can&#39;t hold a ref.\nIn some instances, an additional warning is issued to help with debugging, similar to:</p>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Invalid prop <code>component</code> supplied to <code>ComponentName</code>. Expected an element type that can hold a ref.</p>\n\n</div></aside><p>Only the two most common use cases are covered. For more information see <a href="https://react.dev/reference/react/forwardRef">this section in the official React docs</a>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const MyButton = () => &lt;div role="button" />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const MyButton = React.forwardRef((props, ref) =>\n</span><span class="token prefix inserted">+</span><span class="token line">  &lt;div role="button" {...props} ref={ref} />);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">&lt;Button component={MyButton} />;</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const SomeContent = props => &lt;div {...props}>Hello, World!&lt;/div>;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const SomeContent = React.forwardRef((props, ref) =>\n</span><span class="token prefix inserted">+</span><span class="token line">  &lt;div {...props} ref={ref}>Hello, World!&lt;/div>);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">&lt;Tooltip title="Hello again.">&lt;SomeContent />&lt;/Tooltip>;</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>To find out if the Material\xa0UI component you&#39;re using has this requirement, check\nout the props API documentation for that component. If you need to forward refs\nthe description will link to this section.</p>\n<h3 id="caveat-with-strictmode"><a href="#caveat-with-strictmode" class="title-link-to-anchor">Caveat with StrictMode<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="caveat-with-strictmode"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>If you use class components for the cases described above you will still see\nwarnings in <code>React.StrictMode</code>.\n<code>ReactDOM.findDOMNode</code> is used internally for backwards compatibility.\nYou can use <code>React.forwardRef</code> and a designated prop in your class component to forward the <code>ref</code> to a DOM component.\nDoing so should not trigger any more warnings related to the deprecation of <code>ReactDOM.findDOMNode</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">class Component extends React.Component {\n</span><span class="token prefix unchanged"> </span><span class="token line">  render() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    const { props } = this;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    const { forwardedRef, ...props } = this.props;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    return &lt;div {...props} ref={forwardedRef} />;\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">export default Component;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">export default React.forwardRef((props, ref) => &lt;Component {...props} forwardedRef={ref} />);</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n'],toc:[{text:"Wrapping components",level:2,hash:"wrapping-components",children:[]},{text:"Component prop",level:2,hash:"component-prop",children:[{text:"How does it work?",level:3,hash:"how-does-it-work"},{text:"Inlining &amp; caveat",level:3,hash:"inlining-amp-caveat"},{text:"Prop forwarding &amp; caveat",level:3,hash:"prop-forwarding-amp-caveat"},{text:"With TypeScript",level:3,hash:"with-typescript"}]},{text:"Caveat with refs",level:2,hash:"caveat-with-refs",children:[{text:"Caveat with StrictMode",level:3,hash:"caveat-with-strictmode"}]}],title:"Composition",headers:{components:[]}}},f={"Composition.js":{module:"./Composition.js",raw:"import * as React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\n\nfunction WrappedIcon(props) {\n  return <Icon {...props} />;\n}\n\nWrappedIcon.muiName = 'Icon';\n\nexport default function Composition() {\n  return (\n    <div>\n      <IconButton>\n        <Icon>alarm</Icon>\n      </IconButton>\n      <IconButton>\n        <WrappedIcon>alarm</WrappedIcon>\n      </IconButton>\n    </div>\n  );\n}\n",jsxPreview:"<IconButton>\n  <Icon>alarm</Icon>\n</IconButton>\n<IconButton>\n  <WrappedIcon>alarm</WrappedIcon>\n</IconButton>",moduleTS:"./Composition.js",rawTS:"import * as React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Icon, { IconProps } from '@mui/material/Icon';\n\nfunction WrappedIcon(props: IconProps) {\n  return <Icon {...props} />;\n}\nWrappedIcon.muiName = 'Icon';\n\nexport default function Composition() {\n  return (\n    <div>\n      <IconButton>\n        <Icon>alarm</Icon>\n      </IconButton>\n      <IconButton>\n        <WrappedIcon>alarm</WrappedIcon>\n      </IconButton>\n    </div>\n  );\n}\n"}};f.scope={process:{},import:{react:c,"@mui/material/IconButton":l,"@mui/material/Icon":r}};var g={"./Composition.js":function(){return t||(t=(0,k.jsxs)("div",{children:[(0,k.jsx)(u.Z,{children:(0,k.jsx)(d.Z,{children:"alarm"})}),(0,k.jsx)(u.Z,{children:(0,k.jsx)(m,{children:"alarm"})})]}))}},y={};function v(){return(0,k.jsx)(i.Z,(0,e.Z)({},o))}},652755:function(n,a,s){"use strict";s.d(a,{Z:function(){return C}});var t,o=s(778521),e=s(470079),p=s(639519),c=s.n(p),i=s(389136),l=s(302312),r=s(513182),u=s(597683),d=s(42141),k=s(162119),m=s(871379),h=s(775196),f=s(694366),g=s(74077),y=s(735250);function v(n){var a=n.mode,s=(0,r.tv)().setMode;return e.useEffect(function(){s(a)},[a,s]),null}function C(n){var a=(0,l.Z)(),s=(0,i.useRouter)(),p=(0,d.ln)(s.asPath).canonicalAs,c=n.disableAd,C=void 0!==c&&c,w=n.disableToc,b=n.disableCssVarsProvider,x=n.demos,M=void 0===x?{}:x,I=n.docs,T=n.demoComponents,L=n.srcComponents,R=I[(0,m.fO)()]||I.en,Z=p.startsWith("/joy-ui/")&&!(void 0!==b&&b),P=Z?r.lL:e.Fragment,S=Z?h.BrandingProvider:e.Fragment,j=(0,o.Z)({},Z&&{mode:a.palette.mode});return(0,y.jsxs)(k.Z,{cardOptions:{description:R.headers.cardDescription,title:R.headers.cardTitle},description:R.description,disableAd:C,disableToc:void 0!==w&&w,location:R.location,title:R.title,toc:R.toc,children:[C?null:t||(t=(0,y.jsx)(h.BrandingProvider,{children:(0,y.jsx)(g.Z,{children:(0,y.jsx)(f.ZP,{})})})),(0,y.jsxs)(P,{children:[Z&&(0,y.jsx)(v,{mode:a.palette.mode}),R.rendered.map(function(n,s){return(0,y.jsx)(u.Z,{demoComponents:T,demos:M,disableAd:C,localizedDoc:R,renderedMarkdownOrDemo:n,srcComponents:L,theme:a,WrapperComponent:S,wrapperProps:j},"demos-section-".concat(s))})]})]})}v.propTypes={mode:c().oneOf(["light","dark"])}},924796:function(n,a,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/guides/composition",function(){return s(892112)}])},884835:function(n,a,s){"use strict";var t=s(311596);function o(){}function e(){}e.resetWarningCache=o,n.exports=function(){function n(n,a,s,o,e,p){if(p!==t){var c=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function a(){return n}n.isRequired=n;var s={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:a,element:n,elementType:n,instanceOf:a,node:n,objectOf:a,oneOf:a,oneOfType:a,shape:a,exact:a,checkPropTypes:e,resetWarningCache:o};return s.PropTypes=s,s}},639519:function(n,a,s){n.exports=s(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}},function(n){n.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,92888,40179],function(){return n(n.s=924796)}),_N_E=n.O()}]);