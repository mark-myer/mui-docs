(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[17882,39519],{333897:function(n,e,o){var a=o(915012),s=/^\s+/;n.exports=function(n){return n?n.slice(0,a(n)+1).replace(s,""):n}},915012:function(n){var e=/\s/;n.exports=function(n){for(var o=n.length;o--&&e.test(n.charAt(o)););return o}},889678:function(n,e,o){var a=o(706627),s=o(885365),t=o(67948),i=Math.max,c=Math.min;n.exports=function(n,e,o){var p,l,r,d,u,h,m=0,g=!1,v=!1,f=!0;if("function"!=typeof n)throw TypeError("Expected a function");function k(e){var o=p,a=l;return p=l=void 0,m=e,d=n.apply(a,o)}function b(n){var o=n-h,a=n-m;return void 0===h||o>=e||o<0||v&&a>=r}function y(){var n,o,a,t=s();if(b(t))return w(t);u=setTimeout(y,(n=t-h,o=t-m,a=e-n,v?c(a,r-o):a))}function w(n){return(u=void 0,f&&p)?k(n):(p=l=void 0,d)}function x(){var n,o=s(),a=b(o);if(p=arguments,l=this,h=o,a){if(void 0===u)return m=n=h,u=setTimeout(y,e),g?k(n):d;if(v)return clearTimeout(u),u=setTimeout(y,e),k(h)}return void 0===u&&(u=setTimeout(y,e)),d}return e=t(e)||0,a(o)&&(g=!!o.leading,r=(v="maxWait"in o)?i(t(o.maxWait)||0,e):r,f="trailing"in o?!!o.trailing:f),x.cancel=function(){void 0!==u&&clearTimeout(u),m=0,p=h=l=u=void 0},x.flush=function(){return void 0===u?d:w(s())},x}},706627:function(n){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},885365:function(n,e,o){var a=o(573401);n.exports=function(){return a.Date.now()}},123763:function(n,e,o){var a=o(889678),s=o(706627);n.exports=function(n,e,o){var t=!0,i=!0;if("function"!=typeof n)throw TypeError("Expected a function");return s(o)&&(t="leading"in o?!!o.leading:t,i="trailing"in o?!!o.trailing:i),a(n,e,{leading:t,maxWait:e,trailing:i})}},67948:function(n,e,o){var a=o(333897),s=o(706627),t=o(42848),i=0/0,c=/^[-+]0x[0-9a-f]+$/i,p=/^0b[01]+$/i,l=/^0o[0-7]+$/i,r=parseInt;n.exports=function(n){if("number"==typeof n)return n;if(t(n))return i;if(s(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=s(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=a(n);var o=p.test(n);return o||l.test(n)?r(n.slice(2),o?2:8):c.test(n)?i:+n}},453482:function(n,e,o){"use strict";o.r(e),o.d(e,{default:function(){return d}});var a={};o.r(a),o.d(a,{demoComponents:function(){return p},demos:function(){return c},docs:function(){return i},srcComponents:function(){return l}});var s=o(778521);o(470079);var t=o(652755),i={en:{description:"We have learned a great deal regarding how Material\xa0UI is used, and the v1 rewrite allowed us to completely rethink the component API.",location:"/docs/data/material/guides/api/api.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>API design approach</h1><p class="description">We have learned a great deal regarding how Material\xa0UI is used, and the v1 rewrite allowed us to completely rethink the component API.</p>\n\n<blockquote>\n<p>API design is hard because you can make it seem simple but it&#39;s actually deceptively complex, or make it actually simple but seem complex.\n<a href="https://x.com/sebmarkbage/status/728433349337841665">@sebmarkbage</a></p>\n</blockquote>\n<p>As Sebastian Markbage <a href="https://2014.jsconf.eu/speakers/sebastian-markbage-minimal-api-surface-area-learning-patterns-instead-of-frameworks.html">pointed out</a>, no abstraction is superior to wrong abstractions.\nWe are providing low-level components to maximize composition capabilities.</p>\n<h2 id="composition"><a href="#composition" class="title-link-to-anchor">Composition<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="composition"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>You may have noticed some inconsistency in the API regarding composing components.\nTo provide some transparency, we have been using the following rules when designing the API:</p>\n<ol>\n<li>Using the <code>children</code> prop is the idiomatic way to do composition with React.</li>\n<li>Sometimes we only need limited child composition, for instance when we don&#39;t need to allow child order permutations.\nIn this case, providing explicit props makes the implementation simpler and more performant; for example, the <code>Tab</code> takes an <code>icon</code> and a <code>label</code> prop.</li>\n<li>API consistency matters.</li>\n</ol>\n<h2 id="rules"><a href="#rules" class="title-link-to-anchor">Rules<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="rules"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Aside from the above composition trade-off, we enforce the following rules:</p>\n<h3 id="spread"><a href="#spread" class="title-link-to-anchor">Spread<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="spread"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Props supplied to a component which are not explicitly documented are spread to the root element;\nfor instance, the <code>className</code> prop is applied to the root.</p>\n<p>Now, let&#39;s say you want to disable the ripples on the <code>MenuItem</code>.\nYou can take advantage of the spread behavior:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">disableRipple</span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The <code>disableRipple</code> prop will flow this way: <a href="/material-ui/api/menu-item/"><code>MenuItem</code></a> &gt; <a href="/material-ui/api/list-item/"><code>ListItem</code></a> &gt; <a href="/material-ui/api/button-base/"><code>ButtonBase</code></a>.</p>\n<h3 id="native-properties"><a href="#native-properties" class="title-link-to-anchor">Native properties<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="native-properties"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>We avoid documenting native properties supported by the DOM like <a href="/material-ui/customization/how-to-customize/#overriding-styles-with-class-names"><code>className</code></a>.</p>\n<h3 id="css-classes"><a href="#css-classes" class="title-link-to-anchor">CSS Classes<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="css-classes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>All components accept a <a href="/material-ui/customization/how-to-customize/#overriding-styles-with-class-names"><code>classes</code></a> prop to customize the styles.\nThe classes design answers two constraints:\nto make the classes structure as simple as possible, while sufficient to implement the Material Design guidelines.</p>\n<ul>\n<li>The class applied to the root element is always called <code>root</code>.</li>\n<li>All the default styles are grouped in a single class.</li>\n<li>The classes applied to non-root elements are prefixed with the name of the element, for example <code>paperWidthXs</code> in the Dialog component.</li>\n<li>The variants applied by a boolean prop <strong>aren&#39;t</strong> prefixed, for example the <code>rounded</code> class\napplied by the <code>rounded</code> prop.</li>\n<li>The variants applied by an enum prop <strong>are</strong> prefixed, for example the <code>colorPrimary</code> class\napplied by the <code>color=&quot;primary&quot;</code> prop.</li>\n<li>A variant has <strong>one level of specificity</strong>.\nThe <code>color</code> and <code>variant</code> props are considered a variant.\nThe lower the style specificity is, the simpler it is to override.</li>\n<li>We increase the specificity for a variant modifier.\nWe already <strong>have to do it</strong> for the pseudo-classes (<code>:hover</code>, <code>:focus</code>, etc.).\nIt allows much more control at the cost of more boilerplate.\nHopefully, it&#39;s also more intuitive.</li>\n</ul>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> green<span class="token punctuation">[</span><span class="token number">600</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'&amp;$checked\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">color</span><span class="token operator">:</span> green<span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">checked</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="nested-components"><a href="#nested-components" class="title-link-to-anchor">Nested components<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="nested-components"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Nested components inside a component have:</p>\n<ul>\n<li>their own flattened props when these are key to the top level component abstraction,\nfor instance an <code>id</code> prop for the <code>Input</code> component.</li>\n<li>their own <code>xxxProps</code> prop when users might need to tweak the internal render method&#39;s subcomponents,\nfor instance, exposing the <code>inputProps</code> and <code>InputProps</code> props on components that use <code>Input</code> internally.</li>\n<li>their own <code>xxxComponent</code> prop for performing component injection.</li>\n<li>their own <code>xxxRef</code> prop when you might need to perform imperative actions,\nfor instance, exposing an <code>inputRef</code> prop to access the native <code>input</code> on the <code>Input</code> component.\nThis helps answer the question <a href="/material-ui/getting-started/faq/#how-can-i-access-the-dom-element">&quot;How can I access the DOM element?&quot;</a></li>\n</ul>\n<h3 id="prop-naming"><a href="#prop-naming" class="title-link-to-anchor">Prop naming<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="prop-naming"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li><p><strong>Boolean</strong></p>\n<ul>\n<li><p>The default value of a boolean prop should be <code>false</code>. This allows for better shorthand notation. Consider an example of an input that is enabled by default. How should you name the prop that controls this state? It should be called <code>disabled</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx">❌ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">enabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n✅ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">disabled</span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n</li>\n<li><p>If the name of the boolean is a single word, it should be an adjective or a noun rather than a verb. This is because props describe <em>states</em> and not <em>actions</em>. For example an input prop can be controlled by a state, which wouldn&#39;t be described with a verb:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">const</span> <span class="token punctuation">[</span>disabled<span class="token punctuation">,</span> setDisabled<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n❌ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">disable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n✅ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id="controlled-components"><a href="#controlled-components" class="title-link-to-anchor">Controlled components<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="controlled-components"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Most controlled components are controlled by the <code>value</code> and the <code>onChange</code> props.\nThe <code>open</code> / <code>onClose</code> / <code>onOpen</code> combination is also used for displaying related state.\nIn the cases where there are more events, the noun comes first, and then the verb—for example: <code>onPageChange</code>, <code>onRowsChange</code>.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <ul>\n<li>A component is <strong>controlled</strong> when it&#39;s managed by its parent using props.</li>\n<li>A component is <strong>uncontrolled</strong> when it&#39;s managed by its own local state.</li>\n</ul>\n<p>Learn more about controlled and uncontrolled components in the <a href="https://react.dev/learn/sharing-state-between-components#controlled-and-uncontrolled-components">React documentation</a>.</p>\n\n</div></aside><h3 id="boolean-vs-enum"><a href="#boolean-vs-enum" class="title-link-to-anchor">boolean vs. enum<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="boolean-vs-enum"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>There are two options to design the API for the variations of a component: with a <em>boolean</em>; or with an <em>enum</em>.\nFor example, let&#39;s take a button that has different types. Each option has its pros and cons:</p>\n<ul>\n<li><p>Option 1 <em>boolean</em>:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx">type Props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  contained<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n  fab<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>This API enables the shorthand notation:\n<code>&lt;Button&gt;</code>, <code>&lt;Button contained /&gt;</code>, <code>&lt;Button fab /&gt;</code>.</p>\n</li>\n<li><p>Option 2 <em>enum</em>:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx">type Props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  variant<span class="token operator">:</span> <span class="token string">\'text\'</span> <span class="token operator">|</span> <span class="token string">\'contained\'</span> <span class="token operator">|</span> <span class="token string">\'fab\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>This API is more verbose:\n<code>&lt;Button&gt;</code>, <code>&lt;Button variant=&quot;contained&quot;&gt;</code>, <code>&lt;Button variant=&quot;fab&quot;&gt;</code>.</p>\n<p>However, it prevents an invalid combination from being used,\nbounds the number of props exposed,\nand can easily support new values in the future.</p>\n</li>\n</ul>\n<p>The Material\xa0UI components use a combination of the two approaches according to the following rules:</p>\n<ul>\n<li>A <em>boolean</em> is used when <strong>2</strong> possible values are required.</li>\n<li>An <em>enum</em> is used when <strong>&gt; 2</strong> possible values are required, or if there is the possibility that additional possible values may be required in the future.</li>\n</ul>\n<p>Going back to the previous button example; since it requires 3 possible values, we use an <em>enum</em>.</p>\n<h3 id="ref"><a href="#ref" class="title-link-to-anchor">Ref<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="ref"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The <code>ref</code> is forwarded to the root element. This means that, without changing the rendered root element\nvia the <code>component</code> prop, it is forwarded to the outermost DOM element which the component\nrenders. If you pass a different component via the <code>component</code> prop, the ref will be attached\nto that component instead.</p>\n<h2 id="glossary"><a href="#glossary" class="title-link-to-anchor">Glossary<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="glossary"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><ul>\n<li><strong>host component</strong>: a DOM node type in the context of <code>react-dom</code>, for example a <code>&#39;div&#39;</code>. See also <a href="https://legacy.reactjs.org/docs/implementation-notes.html#mounting-host-elements">React Implementation Notes</a>.</li>\n<li><strong>host element</strong>: a DOM node in the context of <code>react-dom</code>, for example an instance of <code>window.HTMLDivElement</code>.</li>\n<li><strong>outermost</strong>: The first component when reading the component tree from top to bottom, that is breadth-first search.</li>\n<li><strong>root component</strong>: the outermost component that renders a host component.</li>\n<li><strong>root element</strong>: the outermost element that renders a host component.</li>\n</ul>\n'],toc:[{text:"Composition",level:2,hash:"composition",children:[]},{text:"Rules",level:2,hash:"rules",children:[{text:"Spread",level:3,hash:"spread"},{text:"Native properties",level:3,hash:"native-properties"},{text:"CSS Classes",level:3,hash:"css-classes"},{text:"Nested components",level:3,hash:"nested-components"},{text:"Prop naming",level:3,hash:"prop-naming"},{text:"Controlled components",level:3,hash:"controlled-components"},{text:"boolean vs. enum",level:3,hash:"boolean-vs-enum"},{text:"Ref",level:3,hash:"ref"}]},{text:"Glossary",level:2,hash:"glossary",children:[]}],title:"API design approach",headers:{components:[]}}},c={};c.scope={process:{},import:{}};var p={},l={},r=o(735250);function d(){return(0,r.jsx)(t.Z,(0,s.Z)({},a))}},652755:function(n,e,o){"use strict";o.d(e,{Z:function(){return y}});var a,s=o(778521),t=o(470079),i=o(639519),c=o.n(i),p=o(389136),l=o(302312),r=o(513182),d=o(597683),u=o(42141),h=o(162119),m=o(871379),g=o(775196),v=o(694366),f=o(74077),k=o(735250);function b(n){var e=n.mode,o=(0,r.tv)().setMode;return t.useEffect(function(){o(e)},[e,o]),null}function y(n){var e=(0,l.Z)(),o=(0,p.useRouter)(),i=(0,u.ln)(o.asPath).canonicalAs,c=n.disableAd,y=void 0!==c&&c,w=n.disableToc,x=n.disableCssVarsProvider,C=n.demos,M=void 0===C?{}:C,T=n.docs,P=n.demoComponents,I=n.srcComponents,A=T[(0,m.fO)()]||T.en,H=i.startsWith("/joy-ui/")&&!(void 0!==x&&x),O=H?r.lL:t.Fragment,Z=H?g.BrandingProvider:t.Fragment,j=(0,s.Z)({},H&&{mode:e.palette.mode});return(0,k.jsxs)(h.Z,{cardOptions:{description:A.headers.cardDescription,title:A.headers.cardTitle},description:A.description,disableAd:y,disableToc:void 0!==w&&w,location:A.location,title:A.title,toc:A.toc,children:[y?null:a||(a=(0,k.jsx)(g.BrandingProvider,{children:(0,k.jsx)(f.Z,{children:(0,k.jsx)(v.ZP,{})})})),(0,k.jsxs)(O,{children:[H&&(0,k.jsx)(b,{mode:e.palette.mode}),A.rendered.map(function(n,o){return(0,k.jsx)(d.Z,{demoComponents:P,demos:M,disableAd:y,localizedDoc:A,renderedMarkdownOrDemo:n,srcComponents:I,theme:e,WrapperComponent:Z,wrapperProps:j},"demos-section-".concat(o))})]})]})}b.propTypes={mode:c().oneOf(["light","dark"])}},702521:function(n,e,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/guides/api",function(){return o(453482)}])},884835:function(n,e,o){"use strict";var a=o(311596);function s(){}function t(){}t.resetWarningCache=s,n.exports=function(){function n(n,e,o,s,t,i){if(i!==a){var c=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function e(){return n}n.isRequired=n;var o={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:e,element:n,elementType:n,instanceOf:e,node:n,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:t,resetWarningCache:s};return o.PropTypes=o,o}},639519:function(n,e,o){n.exports=o(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}},function(n){n.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,92888,40179],function(){return n(n.s=702521)}),_N_E=n.O()}]);