(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[65936,39519],{333897:function(n,s,a){var e=a(915012),t=/^\s+/;n.exports=function(n){return n?n.slice(0,e(n)+1).replace(t,""):n}},915012:function(n){var s=/\s/;n.exports=function(n){for(var a=n.length;a--&&s.test(n.charAt(a)););return a}},889678:function(n,s,a){var e=a(706627),t=a(885365),p=a(67948),o=Math.max,c=Math.min;n.exports=function(n,s,a){var i,l,r,u,d,k,h=0,g=!1,m=!1,f=!0;if("function"!=typeof n)throw TypeError("Expected a function");function y(s){var a=i,e=l;return i=l=void 0,h=s,u=n.apply(e,a)}function v(n){var a=n-k,e=n-h;return void 0===k||a>=s||a<0||m&&e>=r}function x(){var n,a,e,p=t();if(v(p))return C(p);d=setTimeout(x,(n=p-k,a=p-h,e=s-n,m?c(e,r-a):e))}function C(n){return(d=void 0,f&&i)?y(n):(i=l=void 0,u)}function b(){var n,a=t(),e=v(a);if(i=arguments,l=this,k=a,e){if(void 0===d)return h=n=k,d=setTimeout(x,s),g?y(n):u;if(m)return clearTimeout(d),d=setTimeout(x,s),y(k)}return void 0===d&&(d=setTimeout(x,s)),u}return s=p(s)||0,e(a)&&(g=!!a.leading,r=(m="maxWait"in a)?o(p(a.maxWait)||0,s):r,f="trailing"in a?!!a.trailing:f),b.cancel=function(){void 0!==d&&clearTimeout(d),h=0,i=k=l=d=void 0},b.flush=function(){return void 0===d?u:C(t())},b}},706627:function(n){n.exports=function(n){var s=typeof n;return null!=n&&("object"==s||"function"==s)}},885365:function(n,s,a){var e=a(573401);n.exports=function(){return e.Date.now()}},123763:function(n,s,a){var e=a(889678),t=a(706627);n.exports=function(n,s,a){var p=!0,o=!0;if("function"!=typeof n)throw TypeError("Expected a function");return t(a)&&(p="leading"in a?!!a.leading:p,o="trailing"in a?!!a.trailing:o),e(n,s,{leading:p,maxWait:s,trailing:o})}},67948:function(n,s,a){var e=a(333897),t=a(706627),p=a(42848),o=0/0,c=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,l=/^0o[0-7]+$/i,r=parseInt;n.exports=function(n){if("number"==typeof n)return n;if(p(n))return o;if(t(n)){var s="function"==typeof n.valueOf?n.valueOf():n;n=t(s)?s+"":s}if("string"!=typeof n)return 0===n?n:+n;n=e(n);var a=i.test(n);return a||l.test(n)?r(n.slice(2),a?2:8):c.test(n)?o:+n}},590596:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return u}});var e={};a.r(e),a.d(e,{demoComponents:function(){return i},demos:function(){return c},docs:function(){return o},srcComponents:function(){return l}});var t=a(778521);a(470079);var p=a(652755),o={en:{description:"Learn how to use Material\xa0UI with Next.js",location:"/docs/data/material/integrations/nextjs/nextjs.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>Next.js integration</h1><p class="description">Learn how to use Material\xa0UI with Next.js</p>\n\n<h2 id="app-router"><a href="#app-router" class="title-link-to-anchor">App Router<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="app-router"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>This section walks through the Material\xa0UI integration with the Next.js <a href="https://nextjs.org/docs/app">App Router</a>, an evolution of the <a href="#pages-router">Pages Router</a>, and, currently, the recommended way of building new Next.js applications starting from version 13.</p>\n<h3 id="installing-the-dependencies"><a href="#installing-the-dependencies" class="title-link-to-anchor">Installing the dependencies<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="installing-the-dependencies"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Start by ensuring that you already have <code>@mui/material</code> and <code>next</code> installed.\nThen, run one of the following commands to install the dependencies:</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>next</code> tag is used to download the latest <b>pre-release</b>, v6 version. Remove it to get the current stable version.</p>\n\n</div></aside><!-- #default-branch-switch -->\n\n',{type:"codeblock",data:[{language:"bash",tab:"npm",code:"npm install @mui/material-nextjs@next @emotion/cache"},{language:"bash",tab:"yarn",code:"yarn add @mui/material-nextjs@next @emotion/cache"},{language:"bash",tab:"pnpm",code:"pnpm add @mui/material-nextjs@next @emotion/cache"}],storageKey:"package-manager"},'<h3 id="configuration"><a href="#configuration" class="title-link-to-anchor">Configuration<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="configuration"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Inside <code>app/layout.tsx</code>, import the <code>AppRouterCacheProvider</code> and wrap all elements under the <code>&lt;body&gt;</code> with it:</p>\n<div class="MuiCode-root"><div class="MuiCode-title">app/layout.tsx</div><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { AppRouterCacheProvider } from \'@mui/material-nextjs/v13-appRouter\';\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">// or `v1X-appRouter` if you are using Next.js v1X\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function RootLayout(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;html lang="en">\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;body>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">        &lt;AppRouterCacheProvider>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">          {props.children}\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">        &lt;/AppRouterCacheProvider>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">      &lt;/body>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/html>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>AppRouterCacheProvider</code> component is responsible for collecting the CSS generated by MUI\xa0System on the server, as Next.js is streaming chunks of the .html page to the client.</p>\n<p>While it&#39;s not required to use the <code>AppRouterCacheProvider</code> component, it&#39;s recommended to use it to ensure that the styles are appended to the <code>&lt;head&gt;</code> and not rendering in the <code>&lt;body&gt;</code>.\nSee <a href="https://github.com/mui/material-ui/issues/26561#issuecomment-855286153">https://github.com/mui/material-ui/issues/26561#issuecomment-855286153</a> for why it&#39;s better.</p>\n\n</div></aside><h4>Custom cache (optional)</h4><p>Use the <code>options</code> prop to override the default <a href="https://emotion.sh/docs/@emotion/cache#options">cache options</a>—for example, the code snippet below shows how to change the CSS key to <code>css</code> (the default is <code>mui</code>):</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> &lt;AppRouterCacheProvider\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   options={{ key: \'css\' }}\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> >\n</span><span class="token prefix unchanged"> </span><span class="token line">   {children}\n</span><span class="token prefix unchanged"> </span><span class="token line"> &lt;/AppRouterCacheProvider></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="theming"><a href="#theming" class="title-link-to-anchor">Theming<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="theming"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Create a new file and export a custom theme that includes the <code>&#39;use client&#39;;</code> directive:</p>\n<div class="MuiCode-root"><div class="MuiCode-title">src/theme.ts</div><pre><code class="language-js"><span class="token string">\'use client\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Roboto <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'next/font/google\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> roboto <span class="token operator">=</span> <span class="token function">Roboto</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">weight</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'300\'</span><span class="token punctuation">,</span> <span class="token string">\'400\'</span><span class="token punctuation">,</span> <span class="token string">\'500\'</span><span class="token punctuation">,</span> <span class="token string">\'700\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">subsets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'latin\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">\'swap\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">typography</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">fontFamily</span><span class="token operator">:</span> roboto<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontFamily<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> theme<span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then in <code>src/app/layout.tsx</code>, pass the theme to <code>ThemeProvider</code>:</p>\n<div class="MuiCode-root"><div class="MuiCode-title">app/layout.tsx</div><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { AppRouterCacheProvider } from \'@mui/material-nextjs/v13-appRouter\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ThemeProvider } from \'@mui/material/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import theme from \'../theme\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function RootLayout(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const { children } = props;\n</span><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;html lang="en">\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;body>\n</span><span class="token prefix unchanged"> </span><span class="token line">         &lt;AppRouterCacheProvider>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">           &lt;ThemeProvider theme={theme}>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">             {children}\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">           &lt;/ThemeProvider>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">         &lt;/AppRouterCacheProvider>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;/body>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/html>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>To learn more about theming, check out the <a href="/material-ui/customization/theming/">theming guide</a> page.</p>\n<h4>CSS theme variables</h4><p>If you want to use <a href="/material-ui/customization/css-theme-variables/overview/">CSS theme variables</a>, use the <code>extendTheme</code> and <code>CssVarsProvider</code> utilities instead:</p>\n<div class="MuiCode-root"><div class="MuiCode-title">src/theme.ts</div><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">\'use client\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { extendTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">// app/layout.tsx\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { ThemeProvider } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { CssVarsProvider } from \'@mui/material/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Learn more about <a href="/material-ui/customization/css-theme-variables/overview/#advantages">the advantages of CSS theme variables</a>.</p>\n<h3 id="using-other-styling-solutions"><a href="#using-other-styling-solutions" class="title-link-to-anchor">Using other styling solutions<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="using-other-styling-solutions"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>If you are using a styling solution other than Emotion to customize Material\xa0UI components, set <code>enableCssLayer: true</code> in the <code>options</code> prop:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AppRouterCacheProvider</span></span> <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">enableCssLayer</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>This option ensures that the styles generated by Material\xa0UI will be wrapped in a CSS <code>@layer mui</code> rule, which is overridden by anonymous layer styles when using Material\xa0UI with CSS\xa0Modules, Tailwind\xa0CSS, or even plain CSS without using <code>@layer</code>.</p>\n<p>To learn more about it, see <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@layer">the MDN CSS layer documentation</a>.</p>\n<h2 id="pages-router"><a href="#pages-router" class="title-link-to-anchor">Pages Router<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="pages-router"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>This section walks through the Material\xa0UI integration with the Next.js <a href="https://nextjs.org/docs/pages/building-your-application">Pages Router</a>, for both <a href="https://nextjs.org/docs/pages/building-your-application/rendering/server-side-rendering">Server-side Rendering</a> (SSR) and <a href="https://nextjs.org/docs/pages/building-your-application/rendering/static-site-generation">Static Site Generation</a> (SSG).</p>\n<h3 id="installing-the-dependencies-2"><a href="#installing-the-dependencies-2" class="title-link-to-anchor">Installing the dependencies<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="installing-the-dependencies-2"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Start by ensuring that you already have <code>@mui/material</code> and <code>next</code> installed.\nThen, run one of the following commands to install the dependencies:</p>\n',{type:"codeblock",data:[{language:"bash",tab:"npm",code:"npm install @mui/material-nextjs @emotion/cache @emotion/server"},{language:"bash",tab:"yarn",code:"yarn add @mui/material-nextjs @emotion/cache @emotion/server"},{language:"bash",tab:"pnpm",code:"pnpm add @mui/material-nextjs @emotion/cache @emotion/server"}],storageKey:"package-manager"},'<h3 id="configuration-2"><a href="#configuration-2" class="title-link-to-anchor">Configuration<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="configuration-2"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Inside the <code>pages/_document.tsx</code> file:</p>\n<ul>\n<li>Import <code>documentGetInitialProps</code> and use it as the Document&#39;s <code>getInitialProps</code>.</li>\n<li>Import <code>DocumentHeadTags</code> and render it inside the <code>&lt;Head&gt;</code>.</li>\n</ul>\n<div class="MuiCode-root"><div class="MuiCode-title">pages/_document.tsx</div><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import {\n</span><span class="token prefix inserted">+</span><span class="token line">  DocumentHeadTags,\n</span><span class="token prefix inserted">+</span><span class="token line">  documentGetInitialProps,\n</span><span class="token prefix inserted">+</span><span class="token line">} from \'@mui/material-nextjs/v13-pagesRouter\';\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">// or `v1X-pagesRouter` if you are using Next.js v1X\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function MyDocument(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;Html lang="en">\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;Head>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">        &lt;DocumentHeadTags {...props} />\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        ...\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;/Head>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;body>\n</span><span class="token prefix unchanged"> </span><span class="token line">        &lt;Main />\n</span><span class="token prefix unchanged"> </span><span class="token line">        &lt;NextScript />\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;/body>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/Html>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">MyDocument.getInitialProps = async (ctx) => {\n</span><span class="token prefix inserted">+</span><span class="token line">  const finalProps = await documentGetInitialProps(ctx);\n</span><span class="token prefix inserted">+</span><span class="token line">  return finalProps;\n</span><span class="token prefix inserted">+</span><span class="token line">};</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then, inside <code>pages/_app.tsx</code>, import the <code>AppCacheProvider</code> component and render it as the root element:</p>\n<div class="MuiCode-root"><div class="MuiCode-title">pages/_app.tsx</div><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { AppCacheProvider } from \'@mui/material-nextjs/v13-pagesRouter\';\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">// Or `v1X-pages` if you are using Next.js v1X\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function MyApp(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    &lt;AppCacheProvider {...props}>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">      &lt;Head>\n</span><span class="token prefix unchanged"> </span><span class="token line">        ...\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;/Head>\n</span><span class="token prefix unchanged"> </span><span class="token line">      ...\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    &lt;/AppCacheProvider>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>AppCacheProvider</code> component is responsible for collecting the CSS generated by MUI\xa0System on the server, as Next.js is rendering the .html page to the client.</p>\n<p>While it&#39;s not required to use the <code>AppCacheProvider</code> component, it&#39;s recommended to use it to ensure that the styles are appended to the <code>&lt;head&gt;</code> and not rendering in the <code>&lt;body&gt;</code>.\nSee <a href="https://github.com/mui/material-ui/issues/26561#issuecomment-855286153">https://github.com/mui/material-ui/issues/26561#issuecomment-855286153</a> for why it&#39;s better.</p>\n\n</div></aside><h4>Custom cache (optional)</h4><p>To use a custom <a href="https://emotion.sh/docs/@emotion/cache">Emotion cache</a>, pass it to the <code>emotionCache</code> property in <code>_document.tsx</code>:</p>\n<div class="MuiCode-root"><div class="MuiCode-title">pages/_document.tsx</div><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">...\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">MyDocument.getInitialProps = async (ctx) => {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const finalProps = await documentGetInitialProps(ctx, {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    emotionCache: createCustomCache(),\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  });\n</span><span class="token prefix unchanged"> </span><span class="token line">  return finalProps;\n</span><span class="token prefix unchanged"> </span><span class="token line">};</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>App enhancement (optional)</h4><p>Pass an array to the <code>plugins</code> property to enhance the app with additional features, like server-side-rendered styles if you&#39;re using JSS and styled-components.</p>\n<p>Each plugin must have the following properties:</p>\n<ul>\n<li><code>enhanceApp</code>: a higher-order component that receives the <code>App</code> component and returns a new app component.</li>\n<li><code>resolveProps</code>: a function that receives the initial props and returns a new props object.</li>\n</ul>\n<p>When run, <code>enhanceApp</code> from each plugin is called first, from top to bottom, and then the process is repeated for <code>resolveProps</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> ServerStyleSheet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'styled-components\'</span><span class="token punctuation">;</span>\n\nMyDocument<span class="token punctuation">.</span><span class="token function-variable function">getInitialProps</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> jssSheets <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSSServerStyleSheets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> styledComponentsSheet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerStyleSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> finalProps <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">documentGetInitialProps</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">emotionCache</span><span class="token operator">:</span> <span class="token function">createEmotionCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token comment">// styled-components</span>\n          <span class="token function-variable function">enhanceApp</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">App</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n            styledComponentsSheet<span class="token punctuation">.</span><span class="token function">collectStyles</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">resolveProps</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">initialProps</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token operator">...</span>initialProps<span class="token punctuation">,</span>\n            <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              styledComponentsSheet<span class="token punctuation">.</span><span class="token function">getStyleElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token operator">...</span>initialProps<span class="token punctuation">.</span>styles<span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token comment">// JSS</span>\n          <span class="token function-variable function">enhanceApp</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">App</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> jssSheets<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">resolveProps</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">initialProps</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> css <span class="token operator">=</span> jssSheets<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n              <span class="token operator">...</span>initialProps<span class="token punctuation">,</span>\n              <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token operator">...</span>initialProps<span class="token punctuation">.</span>styles<span class="token punctuation">,</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span>\n                  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jss-server-side<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jss-server-side<span class="token punctuation">"</span></span>\n                  <span class="token comment">// eslint-disable-next-line react/no-danger</span>\n                  <span class="token attr-name">dangerouslySetInnerHTML</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">__html</span><span class="token operator">:</span> css <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n                <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertion-point-jss<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertion-point-jss<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> finalProps<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n    styledComponentsSheet<span class="token punctuation">.</span><span class="token function">seal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="typescript"><a href="#typescript" class="title-link-to-anchor">TypeScript<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>If you are using TypeScript, add <code>DocumentHeadTagsProps</code> to the Document&#39;s props interface:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import type { DocumentHeadTagsProps } from \'@mui/material-nextjs/v13-pagesRouter\';\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">// or `v1X-pagesRouter` if you are using Next.js v1X\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">export default function MyDocument(props: DocumentProps &amp; DocumentHeadTagsProps) {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  ...\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="theming-2"><a href="#theming-2" class="title-link-to-anchor">Theming<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="theming-2"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>In <code>pages/_app.tsx</code>, create a new theme and pass it to <code>ThemeProvider</code>:</p>\n<div class="MuiCode-root"><div class="MuiCode-title">pages/_app.tsx</div><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Head from \'next/head\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import { AppProps } from \'next/app\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import { AppCacheProvider } from \'@mui/material-nextjs/v13-pagesRouter\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ThemeProvider, createTheme } from \'@mui/material/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { Roboto } from \'next/font/google\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const roboto = Roboto({\n</span><span class="token prefix inserted">+</span><span class="token line">  weight: [\'300\', \'400\', \'500\', \'700\'],\n</span><span class="token prefix inserted">+</span><span class="token line">  subsets: [\'latin\'],\n</span><span class="token prefix inserted">+</span><span class="token line">  display: \'swap\',\n</span><span class="token prefix inserted">+</span><span class="token line">});\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({\n</span><span class="token prefix inserted">+</span><span class="token line">  typography: {\n</span><span class="token prefix inserted">+</span><span class="token line">    fontFamily: roboto.style.fontFamily,\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span><span class="token prefix inserted">+</span><span class="token line">});\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function MyApp(props: AppProps) {\n</span><span class="token prefix unchanged"> </span><span class="token line"> const { Component, pageProps } = props;\n</span><span class="token prefix unchanged"> </span><span class="token line"> return (\n</span><span class="token prefix unchanged"> </span><span class="token line">   &lt;AppCacheProvider {...props}>\n</span><span class="token prefix unchanged"> </span><span class="token line">     &lt;Head>...&lt;/Head>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">     &lt;ThemeProvider theme={theme}>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">       &lt;Component {...pageProps} />\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">     &lt;/ThemeProvider>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   &lt;/AppCacheProvider>\n</span><span class="token prefix unchanged"> </span><span class="token line"> );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>To learn more about theming, check out the <a href="/material-ui/customization/theming/">Theming guide</a>.</p>\n<h4>CSS theme variables</h4><p>If you want to use <a href="/material-ui/customization/css-theme-variables/overview/">CSS theme variables</a>, use the <code>extendTheme</code> and <code>CssVarsProvider</code> instead:</p>\n<div class="MuiCode-root"><div class="MuiCode-title">pages/_app.tsx</div><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { ThemeProvider, createTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { CssVarsProvider, extendTheme } from \'@mui/material/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Learn more about <a href="/material-ui/customization/css-theme-variables/overview/#advantages">the advantages of CSS theme variables</a>.</p>\n'],toc:[{text:"App Router",level:2,hash:"app-router",children:[{text:"Installing the dependencies",level:3,hash:"installing-the-dependencies"},{text:"Configuration",level:3,hash:"configuration"},{text:"Theming",level:3,hash:"theming"},{text:"Using other styling solutions",level:3,hash:"using-other-styling-solutions"}]},{text:"Pages Router",level:2,hash:"pages-router",children:[{text:"Installing the dependencies",level:3,hash:"installing-the-dependencies-2"},{text:"Configuration",level:3,hash:"configuration-2"},{text:"TypeScript",level:3,hash:"typescript"},{text:"Theming",level:3,hash:"theming-2"}]}],title:"Next.js integration",headers:{components:[]}}},c={};c.scope={process:{},import:{}};var i={},l={},r=a(735250);function u(){return(0,r.jsx)(p.Z,(0,t.Z)({},e))}},652755:function(n,s,a){"use strict";a.d(s,{Z:function(){return x}});var e,t=a(778521),p=a(470079),o=a(639519),c=a.n(o),i=a(389136),l=a(302312),r=a(513182),u=a(597683),d=a(42141),k=a(162119),h=a(871379),g=a(775196),m=a(694366),f=a(74077),y=a(735250);function v(n){var s=n.mode,a=(0,r.tv)().setMode;return p.useEffect(function(){a(s)},[s,a]),null}function x(n){var s=(0,l.Z)(),a=(0,i.useRouter)(),o=(0,d.ln)(a.asPath).canonicalAs,c=n.disableAd,x=void 0!==c&&c,C=n.disableToc,b=n.disableCssVarsProvider,w=n.demos,M=void 0===w?{}:w,P=n.docs,S=n.demoComponents,T=n.srcComponents,j=P[(0,h.fO)()]||P.en,A=o.startsWith("/joy-ui/")&&!(void 0!==b&&b),R=A?r.lL:p.Fragment,H=A?g.BrandingProvider:p.Fragment,I=(0,t.Z)({},A&&{mode:s.palette.mode});return(0,y.jsxs)(k.Z,{cardOptions:{description:j.headers.cardDescription,title:j.headers.cardTitle},description:j.description,disableAd:x,disableToc:void 0!==C&&C,location:j.location,title:j.title,toc:j.toc,children:[x?null:e||(e=(0,y.jsx)(g.BrandingProvider,{children:(0,y.jsx)(f.Z,{children:(0,y.jsx)(m.ZP,{})})})),(0,y.jsxs)(R,{children:[A&&(0,y.jsx)(v,{mode:s.palette.mode}),j.rendered.map(function(n,a){return(0,y.jsx)(u.Z,{demoComponents:S,demos:M,disableAd:x,localizedDoc:j,renderedMarkdownOrDemo:n,srcComponents:T,theme:s,WrapperComponent:H,wrapperProps:I},"demos-section-".concat(a))})]})]})}v.propTypes={mode:c().oneOf(["light","dark"])}},930738:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/integrations/nextjs",function(){return a(590596)}])},884835:function(n,s,a){"use strict";var e=a(311596);function t(){}function p(){}p.resetWarningCache=t,n.exports=function(){function n(n,s,a,t,p,o){if(o!==e){var c=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function s(){return n}n.isRequired=n;var a={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:s,element:n,elementType:n,instanceOf:s,node:n,objectOf:s,oneOf:s,oneOfType:s,shape:s,exact:s,checkPropTypes:p,resetWarningCache:t};return a.PropTypes=a,a}},639519:function(n,s,a){n.exports=a(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}},function(n){n.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,92888,40179],function(){return n(n.s=930738)}),_N_E=n.O()}]);