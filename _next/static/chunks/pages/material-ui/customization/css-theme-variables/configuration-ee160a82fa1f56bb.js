(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[54675,39519],{333897:function(n,a,s){var t=s(915012),e=/^\s+/;n.exports=function(n){return n?n.slice(0,t(n)+1).replace(e,""):n}},915012:function(n){var a=/\s/;n.exports=function(n){for(var s=n.length;s--&&a.test(n.charAt(s)););return s}},889678:function(n,a,s){var t=s(706627),e=s(885365),p=s(67948),o=Math.max,c=Math.min;n.exports=function(n,a,s){var l,i,r,u,k,d,m=0,h=!1,y=!1,g=!0;if("function"!=typeof n)throw TypeError("Expected a function");function v(a){var s=l,t=i;return l=i=void 0,m=a,u=n.apply(t,s)}function f(n){var s=n-d,t=n-m;return void 0===d||s>=a||s<0||y&&t>=r}function C(){var n,s,t,p=e();if(f(p))return b(p);k=setTimeout(C,(n=p-d,s=p-m,t=a-n,y?c(t,r-s):t))}function b(n){return(k=void 0,g&&l)?v(n):(l=i=void 0,u)}function w(){var n,s=e(),t=f(s);if(l=arguments,i=this,d=s,t){if(void 0===k)return m=n=d,k=setTimeout(C,a),h?v(n):u;if(y)return clearTimeout(k),k=setTimeout(C,a),v(d)}return void 0===k&&(k=setTimeout(C,a)),u}return a=p(a)||0,t(s)&&(h=!!s.leading,r=(y="maxWait"in s)?o(p(s.maxWait)||0,a):r,g="trailing"in s?!!s.trailing:g),w.cancel=function(){void 0!==k&&clearTimeout(k),m=0,l=d=i=k=void 0},w.flush=function(){return void 0===k?u:b(e())},w}},706627:function(n){n.exports=function(n){var a=typeof n;return null!=n&&("object"==a||"function"==a)}},885365:function(n,a,s){var t=s(573401);n.exports=function(){return t.Date.now()}},123763:function(n,a,s){var t=s(889678),e=s(706627);n.exports=function(n,a,s){var p=!0,o=!0;if("function"!=typeof n)throw TypeError("Expected a function");return e(s)&&(p="leading"in s?!!s.leading:p,o="trailing"in s?!!s.trailing:o),t(n,a,{leading:p,maxWait:a,trailing:o})}},67948:function(n,a,s){var t=s(333897),e=s(706627),p=s(42848),o=0/0,c=/^[-+]0x[0-9a-f]+$/i,l=/^0b[01]+$/i,i=/^0o[0-7]+$/i,r=parseInt;n.exports=function(n){if("number"==typeof n)return n;if(p(n))return o;if(e(n)){var a="function"==typeof n.valueOf?n.valueOf():n;n=e(a)?a+"":a}if("string"!=typeof n)return 0===n?n:+n;n=t(n);var s=l.test(n);return s||i.test(n)?r(n.slice(2),s?2:8):c.test(n)?o:+n}},411390:function(n,a,s){"use strict";s.r(a),s.d(a,{default:function(){return i}}),s(470079);var t,e=s(652755),p={en:{description:"A guide for configuring CSS theme variables in Material\xa0UI.",location:"/docs/data/material/customization/css-theme-variables/configuration.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>CSS theme variables - Configuration</h1><p class="description">A guide for configuring CSS theme variables in Material\xa0UI.</p>\n\n<h2 id="theming"><a href="#theming" class="title-link-to-anchor">Theming<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="theming"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p><code>extendTheme</code> is an API that extends the default theme. It returns a theme that can only be used by the <code>CssVarsProvider</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> CssVarsProvider<span class="token punctuation">,</span> extendTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// ...custom theme</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p><code>extendTheme</code> is not the same as <a href="/material-ui/customization/theming/#createtheme-options-args-theme"><code>createTheme</code></a>.\nDo not use them interchangeably.</p>\n<ul>\n<li><code>createTheme()</code> returns a theme for <code>ThemeProvider</code>.</li>\n<li><code>extendTheme()</code> returns a theme for <code>CssVarsProvider</code>.</li>\n</ul>\n\n</div></aside><h3 id="color-schemes"><a href="#color-schemes" class="title-link-to-anchor">Color schemes<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="color-schemes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The major difference from the default approach is in palette customization.\nWith the <code>extendTheme</code> API, you can specify the palette for all color schemes at once (<code>light</code> and <code>dark</code> are built in) under the <code>colorSchemes</code> node.</p>\n<p>Here&#39;s an example of how to customize the <code>primary</code> palette:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> pink <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/colors\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">main</span><span class="token operator">:</span> pink<span class="token punctuation">[</span><span class="token number">600</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">main</span><span class="token operator">:</span> pink<span class="token punctuation">[</span><span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="components"><a href="#components" class="title-link-to-anchor">Components<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="components"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><a href="/material-ui/customization/theme-components/">Component customization</a> remains the same as the default approach.\nWe recommend using the value from <code>theme.vars.*</code> whenever possible for a better debugging experience:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme<span class="token punctuation">,</span> ownerState <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'outlined\'</span> <span class="token operator">&amp;&amp;</span>\n            ownerState<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">\'primary\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n              <span class="token comment">// this is the same as writing:</span>\n              <span class="token comment">// backgroundColor: \'var(--mui-palette-background-paper)\',</span>\n              <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>background<span class="token punctuation">.</span>paper<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="channel-tokens"><a href="#channel-tokens" class="title-link-to-anchor">Channel tokens<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="channel-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>A channel token is a variable that consists of <a href="https://www.w3.org/TR/css-color-4/#color-syntax" target="_blank" rel="noopener nofollow">color space channels</a> but without the alpha component. The value of a channel token is separated by a space, for example <code>12 223 31</code>, which can be combined with the <a href="https://www.w3.org/TR/css-color-4/#color-functions" target="_blank" rel="noopener nofollow">color functions</a> to create a translucent color.</p>\n<p>The <code>extendTheme()</code> automatically generates channel tokens that are likely to be used frequently from the theme palette. Those colors are suffixed with <code>Channel</code>, for example:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> light <span class="token operator">=</span> theme<span class="token punctuation">.</span>colorSchemes<span class="token punctuation">.</span>light<span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>light<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>mainChannel<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \'25 118 210\'</span>\n<span class="token comment">// This token is generated from `theme.colorSchemes.light.palette.primary.main`.</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>You can use the channel tokens to create a translucent color like this:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme<span class="token punctuation">,</span> ownerState <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'outlined\'</span> <span class="token operator">&amp;&amp;</span>\n            ownerState<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">\'primary\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>mainChannel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> / 0.12)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Don&#39;t use a comma (<code>,</code>) as a separator because the channel colors use empty spaces to define <a href="https://www.w3.org/TR/css-color-4/#transparency" target="_blank" rel="noopener nofollow">transparency</a>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>mainChannel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 0.12)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token comment">// \uD83D\uDEAB this does not work</span>\n<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>mainChannel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> / 0.12)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token comment">// ✅ always use `/`</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n\n</div></aside><h2 id="adding-new-theme-tokens"><a href="#adding-new-theme-tokens" class="title-link-to-anchor">Adding new theme tokens<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="adding-new-theme-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>You can add other key-value pairs to the theme input which will be generated as a part of the CSS theme variables:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// The best part is that you can refer to the variables wherever you like \uD83E\uDD29</span>\n        <span class="token literal-property property">gradient</span><span class="token operator">:</span>\n          <span class="token string">\'linear-gradient(to left, var(--mui-palette-primary-main), var(--mui-palette-primary-dark))\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">subtle</span><span class="token operator">:</span> <span class="token string">\'var(--mui-palette-neutral-200)\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">gradient</span><span class="token operator">:</span>\n          <span class="token string">\'linear-gradient(to left, var(--mui-palette-primary-light), var(--mui-palette-primary-main))\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">subtle</span><span class="token operator">:</span> <span class="token string">\'var(--mui-palette-neutral-600)\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then, you can access those variables from the <code>theme.vars</code> object:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> Divider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'hr\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token string">\'1px solid\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">borderColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>border<span class="token punctuation">.</span>subtle<span class="token punctuation">,</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>gradient<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Or use <code>var()</code> to refer to the CSS variable directly:</p>\n<div class="MuiCode-root"><pre><code class="language-css"><span class="token comment">/* global.css */</span>\n<span class="token selector">.external-section</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--mui-palette-gradient<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>If you&#39;re using a <a href="/material-ui/customization/css-theme-variables/configuration/#changing-variable-prefixes">custom prefix</a>, make sure to replace the default <code>--mui</code>.</p>\n\n</div></aside><h3 id="typescript"><a href="#typescript" class="title-link-to-anchor">TypeScript<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You must augment the theme palette to avoid type errors:</p>\n<div class="MuiCode-root"><pre><code class="language-ts">declare module <span class="token string">\'@mui/material/styles\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">PaletteOptions</span> <span class="token punctuation">{</span>\n    gradient<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    border<span class="token operator">:</span> <span class="token punctuation">{</span>\n      subtle<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">interface</span> <span class="token class-name">Palette</span> <span class="token punctuation">{</span>\n    gradient<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    border<span class="token operator">:</span> <span class="token punctuation">{</span>\n      subtle<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="changing-variable-prefixes"><a href="#changing-variable-prefixes" class="title-link-to-anchor">Changing variable prefixes<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="changing-variable-prefixes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>To change the default variable prefix (<code>--mui</code>), provide a string to <code>cssVarPrefix</code> property, as shown below:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">cssVarPrefix</span><span class="token operator">:</span> <span class="token string">\'any\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// the stylesheet will be like this:</span>\n<span class="token comment">// --any-palette-primary-main: ...;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>To remove the prefix, use an empty string as a value:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">cssVarPrefix</span><span class="token operator">:</span> <span class="token string">\'\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// the stylesheet will be like this:</span>\n<span class="token comment">// --palette-primary-main: ...;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="custom-styles-per-mode"><a href="#custom-styles-per-mode" class="title-link-to-anchor">Custom styles per mode<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="custom-styles-per-mode"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>To customize the style without creating new tokens, you can use the <code>theme.getColorSchemeSelector</code> utility:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> Button <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// in default mode.</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'#fff\'</span><span class="token punctuation">,</span>\n  <span class="token string-property property">\'&amp;:hover\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>dark<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// in dark mode.</span>\n  <span class="token punctuation">[</span>theme<span class="token punctuation">.</span><span class="token function">getColorSchemeSelector</span><span class="token punctuation">(</span><span class="token string">\'dark\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>dark<span class="token punctuation">,</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n    <span class="token string-property property">\'&amp;:hover\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'#fff\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>dark<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Using this utility is equivalent to writing a plain string <code>&#39;[data-mui-color-scheme=&quot;dark&quot;] &amp;&#39;</code> if you don&#39;t have a custom configuration.</p>\n\n</div></aside><h2 id="force-a-specific-color-scheme"><a href="#force-a-specific-color-scheme" class="title-link-to-anchor">Force a specific color scheme<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="force-a-specific-color-scheme"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Specify <code>data-mui-color-scheme=&quot;dark&quot;</code> to any DOM node to force the children components to appear as if they are in dark mode.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-mui-color-scheme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Paper</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">p</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>normal<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Password<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>normal<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Sign <span class="token keyword">in</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Paper</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="dark-color-scheme-application"><a href="#dark-color-scheme-application" class="title-link-to-anchor">Dark color scheme application<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="dark-color-scheme-application"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>For an application that only has a dark mode, set the default mode to <code>dark</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// remove the `light` color scheme to optimize the HTML size for server-side application</span>\n<span class="token keyword">delete</span> theme<span class="token punctuation">.</span>colorSchemes<span class="token punctuation">.</span>light<span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span> <span class="token attr-name">defaultMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token operator">...</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>For a server-side application, provide the same value to <a href="/material-ui/customization/css-theme-variables/usage/#server-side-rendering"><code>getInitColorSchemeScript()</code></a>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">getInitColorSchemeScript</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">defaultMode</span><span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>In development, make sure to clear local storage and refresh the page after you configure the <code>defaultMode</code>.</p>\n\n</div></aside>'],toc:[{text:"Theming",level:2,hash:"theming",children:[{text:"Color schemes",level:3,hash:"color-schemes"},{text:"Components",level:3,hash:"components"},{text:"Channel tokens",level:3,hash:"channel-tokens"}]},{text:"Adding new theme tokens",level:2,hash:"adding-new-theme-tokens",children:[{text:"TypeScript",level:3,hash:"typescript"}]},{text:"Changing variable prefixes",level:2,hash:"changing-variable-prefixes",children:[]},{text:"Custom styles per mode",level:2,hash:"custom-styles-per-mode",children:[]},{text:"Force a specific color scheme",level:2,hash:"force-a-specific-color-scheme",children:[]},{text:"Dark color scheme application",level:2,hash:"dark-color-scheme-application",children:[]}],title:"CSS theme variables - Configuration",headers:{components:[]}}},o={};o.scope={process:{},import:{}};var c={},l=s(735250);function i(){return t||(t=(0,l.jsx)(e.Z,{demos:o,docs:p,demoComponents:c}))}},652755:function(n,a,s){"use strict";s.d(a,{Z:function(){return C}});var t,e=s(778521),p=s(470079),o=s(639519),c=s.n(o),l=s(389136),i=s(302312),r=s(513182),u=s(597683),k=s(42141),d=s(162119),m=s(871379),h=s(775196),y=s(694366),g=s(74077),v=s(735250);function f(n){var a=n.mode,s=(0,r.tv)().setMode;return p.useEffect(function(){s(a)},[a,s]),null}function C(n){var a=(0,i.Z)(),s=(0,l.useRouter)(),o=(0,k.ln)(s.asPath).canonicalAs,c=n.disableAd,C=void 0!==c&&c,b=n.disableToc,w=n.disableCssVarsProvider,M=n.demos,x=void 0===M?{}:M,T=n.docs,P=n.demoComponents,S=n.srcComponents,j=T[(0,m.fO)()]||T.en,A=o.startsWith("/joy-ui/")&&!(void 0!==w&&w),H=A?r.lL:p.Fragment,V=A?h.BrandingProvider:p.Fragment,_=(0,e.Z)({},A&&{mode:a.palette.mode});return(0,v.jsxs)(d.Z,{cardOptions:{description:j.headers.cardDescription,title:j.headers.cardTitle},description:j.description,disableAd:C,disableToc:void 0!==b&&b,location:j.location,title:j.title,toc:j.toc,children:[C?null:t||(t=(0,v.jsx)(h.BrandingProvider,{children:(0,v.jsx)(g.Z,{children:(0,v.jsx)(y.ZP,{})})})),(0,v.jsxs)(H,{children:[A&&(0,v.jsx)(f,{mode:a.palette.mode}),j.rendered.map(function(n,s){return(0,v.jsx)(u.Z,{demoComponents:P,demos:x,disableAd:C,localizedDoc:j,renderedMarkdownOrDemo:n,srcComponents:S,theme:a,WrapperComponent:V,wrapperProps:_},"demos-section-".concat(s))})]})]})}f.propTypes={mode:c().oneOf(["light","dark"])}},689796:function(n,a,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/customization/css-theme-variables/configuration",function(){return s(411390)}])},884835:function(n,a,s){"use strict";var t=s(311596);function e(){}function p(){}p.resetWarningCache=e,n.exports=function(){function n(n,a,s,e,p,o){if(o!==t){var c=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function a(){return n}n.isRequired=n;var s={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:a,element:n,elementType:n,instanceOf:a,node:n,objectOf:a,oneOf:a,oneOfType:a,shape:a,exact:a,checkPropTypes:p,resetWarningCache:e};return s.PropTypes=s,s}},639519:function(n,a,s){n.exports=s(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}},function(n){n.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,92888,40179],function(){return n(n.s=689796)}),_N_E=n.O()}]);