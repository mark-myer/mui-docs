(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[54805],{696689:function(e,t,o){var n=o(371017)(function(e,t,o){return e+(o?"-":"")+t.toLowerCase()});e.exports=n},705794:function(e,t,o){var n=o(117431),i=n.createRender,a=n.getHeaders,r=n.getTitle,s=n.renderMarkdown;e.exports={createRender:i,getHeaders:a,getTitle:r,renderMarkdown:s}},117431:function(e,t,o){var n=o(582103).default,i=o(436578),a=o(113065).default,r=o(95018).default,s=o(315599).marked,c=o(891271),l=o(520740),p={gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1,headerPrefix:!1,headerIds:!1,mangle:!1},d=/---[\r\n]([\s\S]*)[\r\n]---/,u=/# (.*)[\r\n]/,m=/<p class="description">([\s\S]*?)<\/p>/,h=/(.*?):[\r\n]?\s+(\[[^\]]+\]|.*)/g,f=/^\s*$/,b=/[&<>"']/,g=/[&<>"']/g,y=/[<>"']|&(?!#?\w+;)/,v=/[<>"']|&(?!#?\w+;)/g,F={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},C=function(e){return F[e]};function T(e,t){if(t){if(b.test(e))return e.replace(g,C)}else if(y.test(e))return e.replace(v,C);return e}var D=["https://m2.material.io/","https://m3.material.io/","https://material.io/","https://getbootstrap.com/","https://icons.getbootstrap.com/","https://pictogrammers.com/","https://www.w3.org/","https://tailwindcss.com/","https://heroicons.com/","https://react-icons.github.io/","https://fontawesome.com/","https://www.radix-ui.com/","https://react-spectrum.adobe.com/","https://headlessui.com/","https://refine.dev/","https://scaffoldhub.io/","https://marmelab.com/"];e.exports={createRender:function(e){var t=e.headingHashes,o=e.toc,a=e.userLanguage,r=e.options,d={},u=-1;return function(m){var h=new s.Renderer;return h.heading=function(e,n){if(1===n||n>=4)return"<h".concat(n,">").concat(e,"</h").concat(n,">");var r,s=e.replace(/<a\b[^>]*>/gi,"").replace(/<\/a>/gi,"");s=s.replace(/<code\b[^>]*>/gi,"").replace(/<\/code>/gi,""),"en"===a?r=c(s,t):(u+=1,(r=i(t)[u])||(r=c(s,d)));var l=s.replace(/([^\s]\()/g,"$1&#8203;");if(2===n)o.push({text:l,level:n,hash:r,children:[]});else if(3===n){if(!o[o.length-1])throw Error("docs-infra: Missing parent level for: ".concat(s,"\n"));o[o.length-1].children.push({text:l,level:n,hash:r})}return["<h".concat(n,' id="').concat(r,'"><a href="#').concat(r,'" class="title-link-to-anchor">').concat(e,'<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a>'),'<button title="Post a comment" class="comment-link" data-feedback-hash="'.concat(r,'">'),'<svg><use xlink:href="#comment-link-icon" /></svg>',"</button>","</h".concat(n,">")].join("")},h.link=function(t,o,n){var i="";o&&(i+=' title="'.concat(o,'"')),D.some(function(e){return -1!==t.indexOf(e)})&&(i=' target="_blank" rel="noopener nofollow"');var s=t;return function(e,t,o){var n=new URL(e,"https://mui.com/");if(/\/{2,}$/.test(n.pathname))throw Error(["docs-infra: Duplicated trailing slashes. The following link:","[".concat(t,"](").concat(e,") in ").concat(o.location," has duplicated trailing slashes, please only add one."),"","See https://ahrefs.com/blog/trailing-slash/ for more details.",""].join("\n"));if("mui.com"===n.host){if("/"!==n.pathname[n.pathname.length-1])throw Error(["docs-infra: Missing trailing slash. The following link:","[".concat(t,"](").concat(e,") in ").concat(o.location," is missing a trailing slash, please add it."),"","See https://ahrefs.com/blog/trailing-slash/ for more details.",""].join("\n"));if("#"!==e[0]&&!(e.startsWith("https://")||e.startsWith("http://"))&&"/"!==e[0])throw Error(["docs-infra: Missing leading slash. The following link:","[".concat(t,"](").concat(e,") in ").concat(o.location," is missing a leading slash, please add it."),""].join("\n"))}}(t,n,e),"en"===a||0!==t.indexOf("/")||r.ignoreLanguagePages(t)||(s="/".concat(a).concat(t)),s.startsWith("".concat(r.env.SOURCE_CODE_REPO,"/blob/-/"))&&(s=s.replace("".concat(r.env.SOURCE_CODE_REPO,"/blob/-/"),"".concat(r.env.SOURCE_CODE_REPO,"/blob/v").concat(r.env.LIB_VERSION,"/"))),'<a href="'.concat(s,'"').concat(i,">").concat(n,"</a>")},h.code=function(e,t,o){var n,i=(t||"").match(/\S*/)[0],a=null===(n=(t||"").match(/title="([^"]*)"/))||void 0===n?void 0:n[1],r=l(e,i);return(null!=r&&r!==e&&(o=!0,e=r),e="".concat(e.replace(/\n$/,""),"\n"),i)?'<div class="MuiCode-root">'.concat(a?'<div class="MuiCode-title">'.concat(a,"</div>"):"",'<pre><code class="language-').concat(T(i,!0),'">').concat(o?e:T(e,!0),"</code></pre>").concat('<button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>',"\n"):"<pre><code>".concat(o?e:T(e,!0),"</code></pre>\n")},s.use({extensions:[{name:"callout",level:"block",start:function(e){var t=e.match(/:::/);return t?t.index:void 0},tokenizer:function(e){var t=/^ {0,3}(:{3,}(?=[^:\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~:]* *(?=\n|$)|$)/.exec(e);if(t){var o={type:"callout",raw:t[0],text:t[3].trim(),severity:t[2],tokens:[]};return this.lexer.blockTokens(o.text,o.tokens),o}},renderer:function(e){return'<aside class="MuiCallout-root MuiCallout-'.concat(e.severity,'">\n            ').concat(["info","success","warning","error"].includes(e.severity)?['<svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">','<use class="MuiCode-copied-icon" xlink:href="#'.concat(e.severity,'-icon" />'),"</svg>"].join("\n"):"",'\n            <div class="MuiCallout-content">\n            ').concat(this.parser.parse(e.tokens),"\n</div></aside>")}}]}),s(m,n(n({},p),{},{renderer:h}))}},getContents:function(e){return e.replace(d,"").split(/^{{("(?:demo|component)":.*)}}$/gm).flatMap(function(e){return e.split(/^(<codeblock(?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?<\/codeblock>)$/gm)}).flatMap(function(e){return e.split(/^(<featureList(?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?<\/featureList>)$/gm)}).filter(function(e){return!f.test(e)})},getDescription:function(e){var t=e.match(m);if(null!==t)return t[1].trim().replace(/`/g,"")},getCodeblock:function(e){if(e.startsWith("<codeblock")){var t,o=null===(t=e.match(/^<codeblock [^>]*storageKey=["|'](\S*)["|'].*>/m))||void 0===t?void 0:t[1];return{type:"codeblock",data:r(e.matchAll(/^```((?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*) ((?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)\n((?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?)\n```/gm)).map(function(e){var t=a(e,4);return{language:t[1],tab:t[2],code:t[3]}}).filter(function(e){return void 0!==e.tab&&!f.test(e.code)}),storageKey:o}}},getFeatureList:function(e){if(e.startsWith("<featureList"))return['<ul class="feature-list">'].concat(r(e.split("\n").filter(function(e){return e.startsWith("- ")}).map(function(e){return e.slice(2)}).map(function(e){return"<li>".concat(e,"</li>")})),["</ul>"]).join("")},getHeaders:function(e){var t=e.match(d);if(!t)return{components:[]};t=t[1];try{for(var o,n={};null!==(o=h.exec(t));){var i=o[1],a=o[2].replace(/(.*)/,"$1");"["===a[0]?(a=(a=a.replace(/'/g,'"')).replace(/,\s+\]$/g,"]"),n[i]=JSON.parse(a)):n[i]=a.replace(/^'|'$/g,"")}return n.components?n.components=n.components.split(",").map(function(e){return e.trim()}).sort():n.components=[],n.hooks?n.hooks=n.hooks.split(",").map(function(e){return e.trim()}).sort():n.hooks=[],n}catch(e){throw Error("docs-infra: ".concat(e.message," in getHeader(markdown) with markdown: \n\n").concat(t,"\n"))}},getTitle:function(e){var t=e.match(u);return null===t?"":t[1].replace(/`/g,"")},renderMarkdown:function(e){return/[-*+] `([A-Za-z]+)`/g.test(e)?s.parse(e,p):s.parseInline(e,p).replace(/(\r?\n){2}/g,"<br>").replace(/\r?\n/g," ")}}},891271:function(e){e.exports=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function e(t,o){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=1===n?t:"".concat(t,"-").concat(n);return o[i]?e(t,o,n+1):(o[i]=!0,i)}(encodeURI(e.toLowerCase().replace(/<\/?[^>]+(>|$)/g,"").replace(/=&gt;|&lt;| \/&gt;|<code>|<\/code>|&#39;/g,"").replace(/[!@#$%^&*()=_+[\]{}`~;:'"|,.<>/?\s]+/g,"-").replace(/([\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])\uFE0F?/g,"").replace(/-+/g,"-").replace(/^-|-$/g,"")),t)}},457434:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return s}}),o(470079);var n=o(512589),i=o(412007),a=JSON.parse('{"props":{"options":{"type":{"name":"array"},"required":true},"aria-describedby":{"type":{"name":"string"}},"aria-label":{"type":{"name":"string"}},"aria-labelledby":{"type":{"name":"string"}},"autoComplete":{"type":{"name":"bool"},"default":"false"},"autoFocus":{"type":{"name":"bool"}},"autoHighlight":{"type":{"name":"bool"},"default":"false"},"autoSelect":{"type":{"name":"bool"},"default":"false"},"blurOnSelect":{"type":{"name":"union","description":"\'mouse\'<br>&#124;&nbsp;\'touch\'<br>&#124;&nbsp;bool"},"default":"false"},"clearIcon":{"type":{"name":"node"},"default":"<ClearIcon fontSize=\\"md\\" />"},"clearOnBlur":{"type":{"name":"bool"},"default":"!props.freeSolo"},"clearOnEscape":{"type":{"name":"bool"},"default":"false"},"clearText":{"type":{"name":"string"},"default":"\'Clear\'"},"closeText":{"type":{"name":"string"},"default":"\'Close\'"},"color":{"type":{"name":"enum","description":"\'danger\'<br>&#124;&nbsp;\'neutral\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'"},"default":"\'neutral\'","additionalInfo":{"joy-color":true}},"defaultValue":{"type":{"name":"custom","description":"any"},"default":"props.multiple ? [] : null"},"disableClearable":{"type":{"name":"bool"},"default":"false"},"disableCloseOnSelect":{"type":{"name":"bool"},"default":"false"},"disabled":{"type":{"name":"bool"},"default":"false"},"disabledItemsFocusable":{"type":{"name":"bool"},"default":"false"},"disableListWrap":{"type":{"name":"bool"},"default":"false"},"endDecorator":{"type":{"name":"node"}},"error":{"type":{"name":"bool"},"default":"false"},"filterOptions":{"type":{"name":"func"},"default":"createFilterOptions()","signature":{"type":"function(options: Array<Value>, state: object) => Array<Value>","describedArgs":["options","state"]}},"filterSelectedOptions":{"type":{"name":"bool"},"default":"false"},"forcePopupIcon":{"type":{"name":"union","description":"\'auto\'<br>&#124;&nbsp;bool"},"default":"\'auto\'"},"freeSolo":{"type":{"name":"bool"},"default":"false"},"getLimitTagsText":{"type":{"name":"func"},"default":"(more: string | number) => `+${more}`","signature":{"type":"function(more: string | number) => ReactNode","describedArgs":["more"]}},"getOptionDisabled":{"type":{"name":"func"},"signature":{"type":"function(option: Value) => boolean","describedArgs":["option"]}},"getOptionKey":{"type":{"name":"func"},"signature":{"type":"function(option: Value) => string | number","describedArgs":["option"]}},"getOptionLabel":{"type":{"name":"func"},"default":"(option) => option.label ?? option","signature":{"type":"function(option: Value) => string","describedArgs":[]}},"groupBy":{"type":{"name":"func"},"signature":{"type":"function(options: Value) => string","describedArgs":["options"]}},"handleHomeEndKeys":{"type":{"name":"bool"},"default":"!props.freeSolo"},"id":{"type":{"name":"string"}},"includeInputInList":{"type":{"name":"bool"},"default":"false"},"inputValue":{"type":{"name":"string"}},"isOptionEqualToValue":{"type":{"name":"func"},"signature":{"type":"function(option: Value, value: Value) => boolean","describedArgs":["option","value"]}},"limitTags":{"type":{"name":"custom","description":"integer"},"default":"-1"},"loading":{"type":{"name":"bool"},"default":"false"},"loadingText":{"type":{"name":"node"},"default":"\'Loading…\'"},"multiple":{"type":{"name":"bool"},"default":"false"},"name":{"type":{"name":"string"}},"noOptionsText":{"type":{"name":"node"},"default":"\'No options\'"},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, value: Value | Array<Value>, reason: string, details?: string) => void","describedArgs":["event","value","reason"]}},"onClose":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, reason: string) => void","describedArgs":["event","reason"]}},"onHighlightChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, option: Value, reason: string) => void","describedArgs":["event","option","reason"]}},"onInputChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, value: string, reason: string) => void","describedArgs":["event","value","reason"]}},"onOpen":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent) => void","describedArgs":["event"]}},"open":{"type":{"name":"bool"}},"openOnFocus":{"type":{"name":"bool"},"default":"false"},"openText":{"type":{"name":"string"},"default":"\'Open\'"},"placeholder":{"type":{"name":"string"}},"popupIcon":{"type":{"name":"node"},"default":"<ArrowDropDownIcon />"},"readOnly":{"type":{"name":"bool"},"default":"false"},"renderGroup":{"type":{"name":"func"},"signature":{"type":"function(params: AutocompleteRenderGroupParams) => ReactNode","describedArgs":["params"]}},"renderOption":{"type":{"name":"func"},"signature":{"type":"function(props: object, option: T, state: object) => ReactNode","describedArgs":["props","option","state"]}},"renderTags":{"type":{"name":"func"},"signature":{"type":"function(value: Array<T>, getTagProps: function, ownerState: object) => ReactNode","describedArgs":["value","getTagProps","ownerState"]}},"required":{"type":{"name":"bool"}},"selectOnFocus":{"type":{"name":"bool"},"default":"!props.freeSolo"},"size":{"type":{"name":"union","description":"\'sm\'<br>&#124;&nbsp;\'md\'<br>&#124;&nbsp;\'lg\'<br>&#124;&nbsp;string"},"default":"\'md\'","additionalInfo":{"joy-size":true}},"slotProps":{"type":{"name":"shape","description":"{ clearIndicator?: func<br>&#124;&nbsp;object, endDecorator?: func<br>&#124;&nbsp;object, input?: func<br>&#124;&nbsp;object, limitTag?: func<br>&#124;&nbsp;object, listbox?: func<br>&#124;&nbsp;object, loading?: func<br>&#124;&nbsp;object, noOptions?: func<br>&#124;&nbsp;object, option?: func<br>&#124;&nbsp;object, popupIndicator?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object, startDecorator?: func<br>&#124;&nbsp;object, wrapper?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ clearIndicator?: elementType, endDecorator?: elementType, input?: elementType, limitTag?: elementType, listbox?: elementType, loading?: elementType, noOptions?: elementType, option?: elementType, popupIndicator?: elementType, root?: elementType, startDecorator?: elementType, wrapper?: elementType }"},"default":"{}","additionalInfo":{"slotsApi":true}},"startDecorator":{"type":{"name":"node"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"type":{"type":{"name":"string"}},"value":{"type":{"name":"custom","description":"any"}},"variant":{"type":{"name":"enum","description":"\'outlined\'<br>&#124;&nbsp;\'plain\'<br>&#124;&nbsp;\'soft\'<br>&#124;&nbsp;\'solid\'"},"default":"\'outlined\'","additionalInfo":{"joy-variant":true}}},"name":"Autocomplete","imports":["import Autocomplete from \'@mui/joy/Autocomplete\';","import { Autocomplete } from \'@mui/joy\';"],"slots":[{"name":"root","description":"The component that renders the root.","default":"\'div\'","class":"MuiAutocomplete-root"},{"name":"wrapper","description":"The component that renders the wrapper.","default":"\'div\'","class":"MuiAutocomplete-wrapper"},{"name":"input","description":"The component that renders the input.","default":"\'input\'","class":"MuiAutocomplete-input"},{"name":"startDecorator","description":"The component that renders the start decorator.","default":"\'div\'","class":"MuiAutocomplete-startDecorator"},{"name":"endDecorator","description":"The component that renders the end decorator.","default":"\'div\'","class":"MuiAutocomplete-endDecorator"},{"name":"clearIndicator","description":"The component that renders the clear indicator.","default":"\'button\'","class":"MuiAutocomplete-clearIndicator"},{"name":"popupIndicator","description":"The component that renders the popup indicator.","default":"\'button\'","class":"MuiAutocomplete-popupIndicator"},{"name":"listbox","description":"The component that renders the listbox.","default":"\'ul\'","class":"MuiAutocomplete-listbox"},{"name":"option","description":"The component that renders the option.","default":"\'li\'","class":"MuiAutocomplete-option"},{"name":"loading","description":"The component that renders the loading.","default":"\'li\'","class":"MuiAutocomplete-loading"},{"name":"noOptions","description":"The component that renders the no-options.","default":"\'li\'","class":"MuiAutocomplete-noOptions"},{"name":"limitTag","description":"The component that renders the limit tag.","default":"\'div\'","class":"MuiAutocomplete-limitTag"}],"classes":[{"key":"colorContext","className":"MuiAutocomplete-colorContext","description":"Class name applied to the root element when color inversion is triggered.","isGlobal":false},{"key":"colorDanger","className":"MuiAutocomplete-colorDanger","description":"Class name applied to the root element if `color=\\"danger\\"`.","isGlobal":false},{"key":"colorNeutral","className":"MuiAutocomplete-colorNeutral","description":"Class name applied to the root element if `color=\\"neutral\\"`.","isGlobal":false},{"key":"colorPrimary","className":"MuiAutocomplete-colorPrimary","description":"Class name applied to the root element if `color=\\"primary\\"`.","isGlobal":false},{"key":"colorSuccess","className":"MuiAutocomplete-colorSuccess","description":"Class name applied to the root element if `color=\\"success\\"`.","isGlobal":false},{"key":"colorWarning","className":"MuiAutocomplete-colorWarning","description":"Class name applied to the root element if `color=\\"warning\\"`.","isGlobal":false},{"key":"disabled","className":"Mui-disabled","description":"Class name applied to the root element if `disabled={true}`.","isGlobal":true},{"key":"error","className":"Mui-error","description":"State class applied to the root element if `error={true}`.","isGlobal":true},{"key":"focused","className":"Mui-focused","description":"Class name applied to the root element if the component is focused.","isGlobal":true},{"key":"formControl","className":"MuiAutocomplete-formControl","description":"Class name applied to the root element if the component is a descendant of `FormControl`.","isGlobal":false},{"key":"hasClearIcon","className":"MuiAutocomplete-hasClearIcon","description":"Class name applied when the clear icon is rendered.","isGlobal":false},{"key":"hasPopupIcon","className":"MuiAutocomplete-hasPopupIcon","description":"Class name applied when the popup icon is rendered.","isGlobal":false},{"key":"multiple","className":"MuiAutocomplete-multiple","description":"Class name applied to the wrapper element if `multiple={true}`.","isGlobal":false},{"key":"popupIndicatorOpen","className":"MuiAutocomplete-popupIndicatorOpen","description":"Class name applied to the popup indicator if the popup is open.","isGlobal":false},{"key":"sizeLg","className":"MuiAutocomplete-sizeLg","description":"Class name applied to the root element if `size=\\"lg\\"`.","isGlobal":false},{"key":"sizeMd","className":"MuiAutocomplete-sizeMd","description":"Class name applied to the root element if `size=\\"md\\"`.","isGlobal":false},{"key":"sizeSm","className":"MuiAutocomplete-sizeSm","description":"Class name applied to the root element if `size=\\"sm\\"`.","isGlobal":false},{"key":"variantOutlined","className":"MuiAutocomplete-variantOutlined","description":"Class name applied to the root element if `variant=\\"outlined\\"`.","isGlobal":false},{"key":"variantPlain","className":"MuiAutocomplete-variantPlain","description":"Class name applied to the root element if `variant=\\"plain\\"`.","isGlobal":false},{"key":"variantSoft","className":"MuiAutocomplete-variantSoft","description":"Class name applied to the root element if `variant=\\"soft\\"`.","isGlobal":false},{"key":"variantSolid","className":"MuiAutocomplete-variantSolid","description":"Class name applied to the root element if `variant=\\"solid\\"`.","isGlobal":false}],"spread":true,"themeDefaultProps":true,"muiName":"JoyAutocomplete","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-joy/src/Autocomplete/Autocomplete.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/joy-ui/react-autocomplete/\\">Autocomplete</a></li></ul>","cssComponent":false}'),r=o(735250);function s(e){var t=e.descriptions,o=e.pageContent;return(0,r.jsx)(n.Z,{descriptions:t,pageContent:o})}s.getInitialProps=function(){var e=o(542714);return{descriptions:(0,i.Z)(e),pageContent:a}}},412007:function(e,t,o){"use strict";o.d(t,{Z:function(){return r}});var n=o(705794),i=o(187509),a=/-([a-z]{2})\.json$/;function r(e){var t={},o={},r=[];return e.keys().forEach(function(e){e.match(a)?r.push(e):r=[e].concat(r)}),r.forEach(function(s){var c=s.match(a),l=null!==c?c[1]:"en",p=e(s)||null;if(null!==p&&p.componentDescription){var d=[],u=(0,n.createRender)({headingHashes:t,toc:d,userLanguage:l,location:r,options:{ignoreLanguagePages:i.LANGUAGES_IGNORE_PAGES,env:{SOURCE_CODE_REPO:""}}});p.componentDescription=u(p.componentDescription),p.componentDescriptionToc=d}o[l]=p}),o}},702640:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/api/autocomplete",function(){return o(457434)}])},542714:function(e,t,o){var n={"./autocomplete.json":893855};function i(e){return o(a(e))}function a(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=a,e.exports=i,i.id=542714},36790:function(e,t,o){"use strict";function n(e){if(void 0===e)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return e}o.d(t,{Z:function(){return n}})},376757:function(e,t,o){"use strict";o.d(t,{Z:function(){return p}});var n=o(136729),i=o(267765),a=o(861963);function r(e){return(r=i?a.bind():function(e){return e.__proto__||a(e)})(e)}function s(){try{var e=!Boolean.prototype.valueOf.call(n(Boolean,[],function(){}))}catch(e){}return(s=function(){return!!e})()}var c=o(931467),l=o(36790);function p(e){var t=s();return function(){var o,i=r(e);if(t){var a=r(this).constructor;o=n(i,arguments,a)}else o=i.apply(this,arguments);return function(e,t){if(t&&("object"==(0,c.Z)(t)||"function"==typeof t))return t;if(void 0!==t)throw TypeError("Derived constructors may only return object or undefined");return(0,l.Z)(e)}(this,o)}}},206782:function(e,t,o){"use strict";o.d(t,{Z:function(){return r}});var n=o(17800),i=o(303268),a=o(909101);function r(e,t){if("function"!=typeof t&&null!==t)throw TypeError("Super expression must either be null or a function");e.prototype=n(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),i(e,"prototype",{writable:!1}),t&&(0,a.Z)(e,t)}},909101:function(e,t,o){"use strict";o.d(t,{Z:function(){return i}});var n=o(267765);function i(e,t){return(i=n?n.bind():function(e,t){return e.__proto__=t,e})(e,t)}},893855:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"aria-describedby":{"description":"Identifies the element (or elements) that describes the object."},"aria-label":{"description":"Defines a string value that labels the current element."},"aria-labelledby":{"description":"Identifies the element (or elements) that labels the current element."},"autoComplete":{"description":"If <code>true</code>, the portion of the selected suggestion that the user hasn&#39;t typed, known as the completion string, appears inline after the input cursor in the textbox. The inline completion string is visually highlighted and has a selected state."},"autoFocus":{"description":"If <code>true</code>, the <code>input</code> element is focused during the first mount."},"autoHighlight":{"description":"If <code>true</code>, the first option is automatically highlighted."},"autoSelect":{"description":"If <code>true</code>, the selected option becomes the value of the input when the Autocomplete loses focus unless the user chooses a different option or changes the character string in the input.<br>When using the <code>freeSolo</code> mode, the typed value will be the input value if the Autocomplete loses focus without highlighting an option."},"blurOnSelect":{"description":"<p>Control if the input should be blurred when an option is selected:</p>\\n<ul>\\n<li><code>false</code> the input is not blurred.</li>\\n<li><code>true</code> the input is always blurred.</li>\\n<li><code>touch</code> the input is blurred after a touch event.</li>\\n<li><code>mouse</code> the input is blurred after a mouse event.</li>\\n</ul>\\n"},"clearIcon":{"description":"The icon to display in place of the default clear icon."},"clearOnBlur":{"description":"If <code>true</code>, the input&#39;s text is cleared on blur if no value is selected.<br>Set it to <code>true</code> if you want to help the user enter a new value. Set it to <code>false</code> if you want to help the user resume their search."},"clearOnEscape":{"description":"If <code>true</code>, clear all values when the user presses escape and the popup is closed."},"clearText":{"description":"Override the default text for the <em>clear</em> icon button.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"closeText":{"description":"Override the default text for the <em>close popup</em> icon button.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"color":{"description":"The color of the component. It supports those theme colors that make sense for this component."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disableClearable":{"description":"If <code>true</code>, the input can&#39;t be cleared."},"disableCloseOnSelect":{"description":"If <code>true</code>, the popup won&#39;t close when a value is selected."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disabledItemsFocusable":{"description":"If <code>true</code>, will allow focus on disabled items."},"disableListWrap":{"description":"If <code>true</code>, the list box in the popup will not wrap focus."},"endDecorator":{"description":"Trailing adornment for this input."},"error":{"description":"If <code>true</code>, the <code>input</code> will indicate an error. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"filterOptions":{"description":"A function that determines the filtered options to be rendered on search.","typeDescriptions":{"options":"The options to render.","state":"The state of the component."}},"filterSelectedOptions":{"description":"If <code>true</code>, hide the selected options from the list box."},"forcePopupIcon":{"description":"Force the visibility display of the popup icon."},"freeSolo":{"description":"If <code>true</code>, the Autocomplete is free solo, meaning that the user input is not bound to provided options."},"getLimitTagsText":{"description":"The label to display when the tags are truncated (<code>limitTags</code>).","typeDescriptions":{"more":"The number of truncated tags."}},"getOptionDisabled":{"description":"Used to determine the disabled state for a given option.","typeDescriptions":{"option":"The option to test."}},"getOptionKey":{"description":"Used to determine the key for a given option. This can be useful when the labels of options are not unique (since labels are used as keys by default).","typeDescriptions":{"option":"The option to get the key for."}},"getOptionLabel":{"description":"Used to determine the string value for a given option. It&#39;s used to fill the input (and the list box options if <code>renderOption</code> is not provided).<br>If used in free solo mode, it must accept both the type of the options and a string."},"groupBy":{"description":"If provided, the options will be grouped under the returned string. The groupBy value is also used as the text for group headings when <code>renderGroup</code> is not provided.","typeDescriptions":{"options":"The options to group."}},"handleHomeEndKeys":{"description":"If <code>true</code>, the component handles the &quot;Home&quot; and &quot;End&quot; keys when the popup is open. It should move focus to the first option and last option, respectively."},"id":{"description":"This prop is used to help implement the accessibility logic. If you don&#39;t provide an id it will fall back to a randomly generated one."},"includeInputInList":{"description":"If <code>true</code>, the highlight can move to the input."},"inputValue":{"description":"The input value."},"isOptionEqualToValue":{"description":"Used to determine if the option represents the given value. Uses strict equality by default. ⚠️ Both arguments need to be handled, an option can only match with one value.","typeDescriptions":{"option":"The option to test.","value":"The value to test against."}},"limitTags":{"description":"The maximum number of tags that will be visible when not focused. Set <code>-1</code> to disable the limit."},"loading":{"description":"If <code>true</code>, the component is in a loading state. This shows the <code>loadingText</code> in place of suggestions (only if there are no suggestions to show, for example <code>options</code> are empty)."},"loadingText":{"description":"Text to display when in a loading state.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"multiple":{"description":"If <code>true</code>, <code>value</code> must be an array and the menu will support multiple selections."},"name":{"description":"Name attribute of the <code>input</code> element."},"noOptionsText":{"description":"Text to display when there are no options.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"onChange":{"description":"Callback fired when the value changes.","typeDescriptions":{"event":"The event source of the callback.","value":"The new value of the component.","reason":"One of &quot;createOption&quot;, &quot;selectOption&quot;, &quot;removeOption&quot;, &quot;blur&quot; or &quot;clear&quot;."}},"onClose":{"description":"Callback fired when the popup requests to be closed. Use in controlled mode (see open).","typeDescriptions":{"event":"The event source of the callback.","reason":"Can be: <code>&quot;toggleInput&quot;</code>, <code>&quot;escape&quot;</code>, <code>&quot;selectOption&quot;</code>, <code>&quot;removeOption&quot;</code>, <code>&quot;blur&quot;</code>."}},"onHighlightChange":{"description":"Callback fired when the highlight option changes.","typeDescriptions":{"event":"The event source of the callback.","option":"The highlighted option.","reason":"Can be: <code>&quot;keyboard&quot;</code>, <code>&quot;auto&quot;</code>, <code>&quot;mouse&quot;</code>, <code>&quot;touch&quot;</code>."}},"onInputChange":{"description":"Callback fired when the input value changes.","typeDescriptions":{"event":"The event source of the callback.","value":"The new value of the text input.","reason":"Can be: <code>&quot;input&quot;</code> (user input), <code>&quot;reset&quot;</code> (programmatic change), <code>&quot;clear&quot;</code>."}},"onOpen":{"description":"Callback fired when the popup requests to be opened. Use in controlled mode (see open).","typeDescriptions":{"event":"The event source of the callback."}},"open":{"description":"If <code>true</code>, the component is shown."},"openOnFocus":{"description":"If <code>true</code>, the popup will open on input focus."},"openText":{"description":"Override the default text for the <em>open popup</em> icon button.<br>For localization purposes, you can use the provided <a href=\\"/material-ui/guides/localization/\\">translations</a>."},"options":{"description":"Array of options."},"placeholder":{"description":"The input placeholder"},"popupIcon":{"description":"The icon to display in place of the default popup icon."},"readOnly":{"description":"If <code>true</code>, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted."},"renderGroup":{"description":"Render the group.","typeDescriptions":{"params":"The group to render."}},"renderOption":{"description":"Render the option, use <code>getOptionLabel</code> by default.","typeDescriptions":{"props":"The props to apply on the li element.","option":"The option to render.","state":"The state of the component."}},"renderTags":{"description":"Render the selected value.","typeDescriptions":{"value":"The <code>value</code> provided to the component.","getTagProps":"A tag props getter.","ownerState":"The state of the Autocomplete component."}},"required":{"description":"If <code>true</code>, the <code>input</code> element is required. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."},"selectOnFocus":{"description":"If <code>true</code>, the input&#39;s text is selected on focus. It helps the user clear the selected value."},"size":{"description":"The size of the component."},"slotProps":{"description":"The props used for each slot inside."},"slots":{"description":"The components used for each slot inside."},"startDecorator":{"description":"Leading adornment for this input."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"type":{"description":"Type of the <code>input</code> element. It should be <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\\">a valid HTML5 input type</a>."},"value":{"description":"The value of the autocomplete.<br>The value must have reference equality with the option in order to be selected. You can customize the equality behavior with the <code>isOptionEqualToValue</code> prop."},"variant":{"description":"The <a href=\\"https://mui.com/joy-ui/main-features/global-variants/\\">global variant</a> to use."}},"classDescriptions":{"colorContext":{"description":"Class name applied to {{nodeName}} when {{conditions}}.","nodeName":"the root element","conditions":"color inversion is triggered"},"colorDanger":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"danger\\"</code>"},"colorNeutral":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"neutral\\"</code>"},"colorPrimary":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorSuccess":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"success\\"</code>"},"colorWarning":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"warning\\"</code>"},"disabled":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"error":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>error={true}</code>"},"focused":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the component is focused"},"formControl":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the component is a descendant of <code>FormControl</code>"},"hasClearIcon":{"description":"Class name applied when the clear icon is rendered."},"hasPopupIcon":{"description":"Class name applied when the popup icon is rendered."},"multiple":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the wrapper element","conditions":"<code>multiple={true}</code>"},"popupIndicatorOpen":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the popup indicator","conditions":"the popup is open"},"sizeLg":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"lg\\"</code>"},"sizeMd":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"md\\"</code>"},"sizeSm":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"sm\\"</code>"},"variantOutlined":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"outlined\\"</code>"},"variantPlain":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"plain\\"</code>"},"variantSoft":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"soft\\"</code>"},"variantSolid":{"description":"Class name applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>variant=\\"solid\\"</code>"}},"slotDescriptions":{"clearIndicator":"The component that renders the clear indicator.","endDecorator":"The component that renders the end decorator.","input":"The component that renders the input.","limitTag":"The component that renders the limit tag.","listbox":"The component that renders the listbox.","loading":"The component that renders the loading.","noOptions":"The component that renders the no-options.","option":"The component that renders the option.","popupIndicator":"The component that renders the popup indicator.","root":"The component that renders the root.","startDecorator":"The component that renders the start decorator.","wrapper":"The component that renders the wrapper."}}')}},function(e){e.O(0,[49774,9535,73976,97146,59727,85925,17376,17103,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,12589,92888,40179],function(){return e(e.s=702640)}),_N_E=e.O()}]);