(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[13915,48693],{348693:function(n,e,t){"use strict";var o=t(614030),a=t(863363),s=t(577903),r=t(778521),p=t(470079),l=t(653048),c=t(538941),i=t(53345),d=t(1104),u=t(860973),k=t(8661),m=t(14002),h=t(503945),f=t(306029),g=t(486138),y=t(446759),v=t(233684),b=t(718428),x=t(980600),C=t(735250),w=["children","className","component","arrow","describeChild","disableFocusListener","disableHoverListener","disableInteractive","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","followCursor","id","leaveDelay","leaveTouchDelay","onClose","onOpen","open","disablePortal","direction","keepMounted","modifiers","placement","title","color","variant","size","slots","slotProps"],B=function(n){var e=n.arrow,t=n.variant,o=n.color,a=n.size,s=n.placement,r={root:["root",e&&"tooltipArrow",n.touch&&"touch",a&&"size".concat((0,c.Z)(a)),o&&"color".concat((0,c.Z)(o)),t&&"variant".concat((0,c.Z)(t)),"tooltipPlacement".concat((0,c.Z)(s.split("-")[0]))],arrow:["arrow"]};return(0,f.Z)(r,x.Q,{})},j=(0,y.Z)("div",{name:"JoyTooltip",slot:"Root",overridesResolver:function(n,e){return e.root}})(function(n){var e,t,o,a=n.ownerState,s=n.theme,p=null===(e=s.variants[a.variant])||void 0===e?void 0:e[a.color];return(0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)({},"sm"===a.size&&{"--Icon-fontSize":s.vars.fontSize.md,"--Tooltip-arrowSize":"8px",padding:s.spacing(.25,.625)}),"md"===a.size&&{"--Icon-fontSize":s.vars.fontSize.lg,"--Tooltip-arrowSize":"10px",padding:s.spacing(.5,.75)}),"lg"===a.size&&{"--Icon-fontSize":s.vars.fontSize.xl,"--Tooltip-arrowSize":"12px",padding:s.spacing(.75,1)}),{},{zIndex:s.vars.zIndex.tooltip,borderRadius:s.vars.radius.sm,boxShadow:s.shadow.sm,wordWrap:"break-word",position:"relative"},a.disableInteractive&&{pointerEvents:"none"}),s.typography["body-".concat({sm:"xs",md:"sm",lg:"md"}[a.size])]),p),!p.backgroundColor&&{backgroundColor:s.vars.palette.background.surface}),{},{"&::before":{content:'""',display:"block",position:"absolute",width:null!==(t=a.placement)&&void 0!==t&&t.match(/(top|bottom)/)?"100%":"calc(10px + var(--variant-borderWidth, 0px))",height:null!==(o=a.placement)&&void 0!==o&&o.match(/(top|bottom)/)?"calc(10px + var(--variant-borderWidth, 0px))":"100%"},'&[data-popper-placement*="bottom"]::before':{top:0,left:0,transform:"translateY(-100%)"},'&[data-popper-placement*="left"]::before':{top:0,right:0,transform:"translateX(100%)"},'&[data-popper-placement*="right"]::before':{top:0,left:0,transform:"translateX(-100%)"},'&[data-popper-placement*="top"]::before':{bottom:0,left:0,transform:"translateY(100%)"}})}),T=(0,y.Z)("span",{name:"JoyTooltip",slot:"Arrow",overridesResolver:function(n,e){return e.arrow}})(function(n){var e,t,o,a=n.theme,s=n.ownerState,r=null===(e=a.variants[s.variant])||void 0===e?void 0:e[s.color];return{"--unstable_Tooltip-arrowRotation":0,width:"var(--Tooltip-arrowSize)",height:"var(--Tooltip-arrowSize)",boxSizing:"border-box","&::before":{content:'""',display:"block",position:"absolute",width:0,height:0,border:"calc(var(--Tooltip-arrowSize) / 2) solid",borderLeftColor:"transparent",borderBottomColor:"transparent",borderTopColor:null!==(t=null==r?void 0:r.backgroundColor)&&void 0!==t?t:a.vars.palette.background.surface,borderRightColor:null!==(o=null==r?void 0:r.backgroundColor)&&void 0!==o?o:a.vars.palette.background.surface,borderRadius:"0px 2px 0px 0px",boxShadow:"var(--variant-borderWidth, 0px) calc(-1 * var(--variant-borderWidth, 0px)) 0px 0px ".concat(r.borderColor),transformOrigin:"center center",transform:"rotate(calc(-45deg + 90deg * var(--unstable_Tooltip-arrowRotation)))"},'[data-popper-placement*="bottom"] &':{top:"calc(0.5px + var(--Tooltip-arrowSize) * -1 / 2)"},'[data-popper-placement*="top"] &':{"--unstable_Tooltip-arrowRotation":2,bottom:"calc(0.5px + var(--Tooltip-arrowSize) * -1 / 2)"},'[data-popper-placement*="left"] &':{"--unstable_Tooltip-arrowRotation":1,right:"calc(0.5px + var(--Tooltip-arrowSize) * -1 / 2)"},'[data-popper-placement*="right"] &':{"--unstable_Tooltip-arrowRotation":3,left:"calc(0.5px + var(--Tooltip-arrowSize) * -1 / 2)"}}}),S=!1,Z=new i.V,M={x:0,y:0};function z(n,e){return function(t){e&&e(t),n(t)}}function A(n,e){return function(t){for(var o=arguments.length,a=Array(o>1?o-1:0),s=1;s<o;s++)a[s-1]=arguments[s];e&&e.apply(void 0,[t].concat(a)),n.apply(void 0,[t].concat(a))}}var D=p.forwardRef(function(n,e){var t,c=(0,v.Z)({props:n,name:"JoyTooltip"}),f=c.children,y=c.className,x=c.component,D=c.arrow,R=void 0!==D&&D,I=c.describeChild,L=c.disableFocusListener,P=c.disableHoverListener,H=void 0!==P&&P,O=c.disableInteractive,E=c.disableTouchListener,V=c.enterDelay,F=void 0===V?100:V,W=c.enterNextDelay,N=void 0===W?0:W,_=c.enterTouchDelay,U=void 0===_?700:_,J=c.followCursor,$=void 0!==J&&J,Y=c.id,X=c.leaveDelay,K=void 0===X?0:X,q=c.leaveTouchDelay,Q=void 0===q?1500:q,G=c.onClose,nn=c.onOpen,ne=c.open,nt=c.disablePortal,no=c.direction,na=c.keepMounted,ns=c.modifiers,nr=c.placement,np=void 0===nr?"bottom":nr,nl=c.title,nc=c.color,ni=c.variant,nd=c.size,nu=c.slots,nk=c.slotProps,nm=(0,s.Z)(c,w),nh=p.useState(),nf=(0,a.Z)(nh,2),ng=nf[0],ny=nf[1],nv=p.useState(null),nb=(0,a.Z)(nv,2),nx=nb[0],nC=nb[1],nw=p.useRef(!1),nB=void 0!==O&&O||$,nj=(0,i.Z)(),nT=(0,i.Z)(),nS=(0,i.Z)(),nZ=(0,i.Z)(),nM=(0,d.Z)({controlled:ne,default:!1,name:"Tooltip",state:"open"}),nz=(0,a.Z)(nM,2),nA=nz[0],nD=nz[1],nR=nA,nI=(0,u.Z)(Y),nL=p.useRef(),nP=(0,k.Z)(function(){void 0!==nL.current&&(document.body.style.WebkitUserSelect=nL.current,nL.current=void 0),nZ.clear()});p.useEffect(function(){return nP},[nP]);var nH=function(n){Z.clear(),S=!0,nD(!0),nn&&!nR&&nn(n)},nO=(0,k.Z)(function(n){Z.start(800+K,function(){S=!1}),nD(!1),G&&nR&&G(n),nj.start(150,function(){nw.current=!1})}),nE=function(n){nw.current&&"touchstart"!==n.type||(ng&&ng.removeAttribute("title"),nT.clear(),nS.clear(),F||S&&N?nT.start(S?N:F,function(){nH(n)}):nH(n))},nV=function(n){nT.clear(),nS.start(K,function(){nO(n)})},nF=(0,m.Z)(),nW=nF.isFocusVisibleRef,nN=nF.onBlur,n_=nF.onFocus,nU=nF.ref,nJ=p.useState(!1),n$=(0,a.Z)(nJ,2)[1],nY=function(n){nN(n),!1===nW.current&&(n$(!1),nV(n))},nX=function(n){ng||ny(n.currentTarget),n_(n),!0===nW.current&&(n$(!0),nE(n))},nK=function(n){nw.current=!0;var e=f.props;e.onTouchStart&&e.onTouchStart(n)};p.useEffect(function(){if(nR)return document.addEventListener("keydown",n),function(){document.removeEventListener("keydown",n)};function n(n){"Escape"===n.key&&nO(n)}},[nO,nR]);var nq=(0,h.Z)(ny,e),nQ=(0,h.Z)(nU,nq),nG=(0,h.Z)(f.ref,nQ);"number"==typeof nl||nl||(nR=!1);var n0=p.useRef(null),n1={},n2="string"==typeof nl;void 0!==I&&I?(n1.title=nR||!n2||H?null:nl,n1["aria-describedby"]=nR?nI:null):(n1["aria-label"]=n2?nl:null,n1["aria-labelledby"]=nR&&!n2?nI:null);var n5=(0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)({},n1),nm),{},{component:x},f.props),{},{className:(0,l.default)(y,f.props.className),onTouchStart:nK,ref:nG},$?{onMouseMove:function(n){var e=f.props;e.onMouseMove&&e.onMouseMove(n),M={x:n.clientX,y:n.clientY},n0.current&&n0.current.update()}}:{}),n7={};void 0!==E&&E||(n5.onTouchStart=function(n){nK(n),nS.clear(),nj.clear(),nP(),nL.current=document.body.style.WebkitUserSelect,document.body.style.WebkitUserSelect="none",nZ.start(U,function(){document.body.style.WebkitUserSelect=nL.current,nE(n)})},n5.onTouchEnd=function(n){f.props.onTouchEnd&&f.props.onTouchEnd(n),nP(),nS.start(Q,function(){nO(n)})}),H||(n5.onMouseOver=z(nE,n5.onMouseOver),n5.onMouseLeave=z(nV,n5.onMouseLeave),nB||(n7.onMouseOver=nE,n7.onMouseLeave=nV)),void 0!==L&&L||(n5.onFocus=A(nX,n5.onFocus),n5.onBlur=A(nY,n5.onBlur),nB||(n7.onFocus=nX,n7.onBlur=nY));var n3=(0,r.Z)((0,r.Z)({},c),{},{arrow:R,disableInteractive:nB,placement:np,touch:nw.current,color:void 0===nc?"neutral":nc,variant:void 0===ni?"solid":ni,size:void 0===nd?"md":nd}),n4=B(n3),n8=(0,r.Z)((0,r.Z)({},nm),{},{component:x,slots:void 0===nu?{}:nu,slotProps:void 0===nk?{}:nk}),n9=p.useMemo(function(){return[{name:"arrow",enabled:!!nx,options:{element:nx,padding:6}},{name:"offset",options:{offset:[0,10]}}].concat((0,o.Z)(ns||[]))},[nx,ns]),n6=(0,b.Z)("root",{additionalProps:(0,r.Z)({id:nI,popperRef:n0,placement:np,anchorEl:$?{getBoundingClientRect:function(){return{top:M.y,left:M.x,right:M.x,bottom:M.y,width:0,height:0}}}:ng,open:!!ng&&nR,disablePortal:nt,keepMounted:na,direction:no,modifiers:n9},n7),ref:null,className:n4.root,elementType:j,externalForwardedProps:n8,ownerState:n3}),en=(0,a.Z)(n6,2),ee=en[0],et=en[1],eo=(0,b.Z)("arrow",{ref:nC,className:n4.arrow,elementType:T,externalForwardedProps:n8,ownerState:n3}),ea=(0,a.Z)(eo,2),es=ea[0],er=ea[1];return(0,C.jsxs)(p.Fragment,{children:[p.isValidElement(f)&&p.cloneElement(f,n5),(0,C.jsxs)(ee,(0,r.Z)((0,r.Z)((0,r.Z)({},et),!(null!==(t=c.slots)&&void 0!==t&&t.root)&&{as:g.r,slots:{root:x||"div"}}),{},{children:[nl,R?(0,C.jsx)(es,(0,r.Z)({},er)):null]}))]})});e.Z=D},270349:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return o.Z},getTooltipUtilityClass:function(){return a.Q},tooltipClasses:function(){return a.Z}});var o=t(348693),a=t(980600)},980600:function(n,e,t){"use strict";t.d(e,{Q:function(){return a}});var o=t(255551);function a(n){return(0,o.d6)("MuiTooltip",n)}var s=(0,o.sI)("MuiTooltip",["root","tooltipArrow","arrow","touch","placementLeft","placementRight","placementTop","placementBottom","colorPrimary","colorDanger","colorNeutral","colorSuccess","colorWarning","colorContext","sizeSm","sizeMd","sizeLg","variantPlain","variantOutlined","variantSoft","variantSolid"]);e.Z=s},602683:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return np}});var o,a,s,r,p,l,c,i,d,u,k={};t.r(k),t.d(k,{demoComponents:function(){return ns},demos:function(){return na},docs:function(){return no},srcComponents:function(){return nr}});var m=t(778521),h=t(470079),f=t.t(h,2),g=t(652755),y=t(766170),v=t(483821),b=t(804089),x=t(270349),C=t(332891),w=t(809851),B=t(623675),j=t(784854),T=t(327273),S=t(705895),Z=t(502056),M=t(235529),z=t(614030),A=t(436578),D=t.n(A),R=t(147805),I=t.n(R),L=t(125127),P=t.n(L),H=t(281664),O=t(446759),E=t(536440),V=t(963044),F=t(348693),W=t(285072),N=t(648111),_=t(735250),U=(0,H.Z)(),J=function(n){var e={};return!function n(t){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(t&&"object"==typeof t)for(var a=0,s=D()(t);a<s.length;a++){var r=s[a];n(t[r],[].concat((0,z.Z)(o),[r]))}else e[o.join(".")]=t}(n),e},$=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"}),Y=(0,O.Z)("table")(function(n){var e=n.theme;return{borderCollapse:"separate",borderSpacing:0,display:"block",height:500,overflowY:"scroll",th:(0,m.Z)({textAlign:"left",padding:8,position:"sticky",top:0,zIndex:1},e.variants.soft.neutral),td:{verticalAlign:"top",padding:"3px 6px"},tr:{"&:hover":{backgroundColor:e.vars.palette.background.level1},"&:first-of-type":{"& td":{paddingTop:6}}}}}),X=t(863363),K=t(513182),q=t(483126),Q={primary:{solidBg:"#0d6efd",solidBorder:"#0d6efd",solidHoverBg:"#0b5ed7",solidHoverBorder:"#0a58ca",solidActiveBg:"#0a58ca",solidActiveBorder:"#0a53be",solidDisabledBg:"#0d6efd",solidDisabledBorder:"#0d6efd"},neutral:{solidBg:"#6c757d",solidBorder:"#6c757d",solidHoverBg:"#5c636a",solidHoverBorder:"#565e64",solidActiveBg:"#565e64",solidActiveBorder:"#51585e",solidDisabledBg:"#6c757d",solidDisabledBorder:"#6c757d",softColor:"#000",softBg:"#f8f9fa",softBorder:"#f8f9fa",softHoverBg:"#f9fafb",softHoverBorder:"#f9fafb",softActiveBg:"#f9fafb",softActiveBorder:"#f9fafb",softDisabledBg:"#f8f9fa",softDisabledBorder:"#f8f9fa"},success:{solidBg:"#198754",solidBorder:"#198754",solidHoverBg:"#157347",solidHoverBorder:"#146c43",solidActiveBg:"#146c43",solidActiveBorder:"#13653f",solidDisabledBg:"#198754",solidDisabledBorder:"#198754"},danger:{solidBg:"#dc3545",solidBorder:"#dc3545",solidHoverBg:"#bb2d3b",solidHoverBorder:"#b02a37",solidActiveBg:"#b02a37",solidActiveBorder:"#a52834",solidDisabledBg:"#dc3545",solidDisabledBorder:"#dc3545"},warning:{solidColor:"#000",solidBg:"#ffc107",solidBorder:"#ffc107",solidHoverBg:"#ffca2c",solidHoverBorder:"#ffc720",solidActiveBg:"#ffcd39",solidActiveBorder:"#ffc720",solidDisabledBg:"#ffc107",solidDisabledBorder:"#ffc107"},info:{solidColor:"#000",solidBg:"#0dcaf0",solidBorder:"#0dcaf0",solidHoverBg:"#31d2f2",solidHoverBorder:"#25cff2",solidActiveBg:"#3dd5f3",solidActiveBorder:"#25cff2",solidDisabledBg:"#0dcaf0",solidDisabledBorder:"#0dcaf0"}},G=(0,H.Z)({cssVarPrefix:"bs",colorSchemes:{light:{palette:Q},dark:{palette:Q}},components:{JoyButton:{styleOverrides:{root:function(n){var e=n.ownerState,t=n.theme;return(0,m.Z)({letterSpacing:"normal",fontWeight:t.vars.fontWeight.md,fontFamily:t.vars.fontFamily.fallback,outlineWidth:0,borderRadius:"0.375rem",transition:"color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out"},"md"===e.size&&{paddingInline:"0.75rem",minHeight:38})}}}}}),nn=h.useLayoutEffect,ne=(0,H.Z)({colorSchemes:{light:{palette:{primary:{solidActiveBg:void 0}}},dark:{palette:{primary:{solidActiveBg:void 0}}}}}),nt=h.useLayoutEffect,no={en:{description:"Learn about the default theme's color palette and how to customize it.",location:"/docs/data/joy/customization/theme-colors/theme-colors.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>Theme colors</h1><p class="description">Learn about the default theme\'s color palette and how to customize it.</p>\n\n<h2 id="default-color-tokens"><a href="#default-color-tokens" class="title-link-to-anchor">Default color tokens<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="default-color-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Joy\xa0UI&#39;s default theme includes 5 built-in semantic color palettes, with light and dark mapping, to help you build great looking UIs quickly.</p>\n',{demo:"PaletteThemeViewer.js",bg:"inline"},'<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Some tokens reuse color values from others using the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/var"><code>var(--*)</code></a> syntax.</p>\n\n</div></aside><h3 id="global-variant-tokens"><a href="#global-variant-tokens" class="title-link-to-anchor">Global variant tokens<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="global-variant-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>One of Joy\xa0UI&#39;s main features is the four <a href="/joy-ui/main-features/global-variants/">global variants</a> that are available in every component. They use the built-in color palettes following the format of <strong>variant type | state | CSS property</strong>. For example:</p>\n<ul>\n<li><code>solidBg</code> refers to the solid variant&#39;s background color in its initial state.</li>\n<li><code>outlinedHoverBorder</code> refers to the outlined variant&#39;s border color in its hover state.</li>\n</ul>\n<h3 id="channel-tokens"><a href="#channel-tokens" class="title-link-to-anchor">Channel tokens<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="channel-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The channel tokens helps creating translucent colors using (<code>rgba</code>).\nThe ones ending with <code>Channel</code> are automatically generated for each palette.</p>\n<ul>\n<li><code>lightChannel</code>: is generated from the palette&#39;s <code>200</code> token.</li>\n<li><code>mainChannel</code>: is generated from the palette&#39;s <code>500</code> token.</li>\n<li><code>darkChannel</code>: is generated from the palette&#39;s <code>800</code> token.</li>\n</ul>\n<p>The code snippet below shows how to use them:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> Typography <span class="token keyword">from</span> <span class="token string">\'@mui/joy/Typography\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span>\n  <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">theme</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>mainChannel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> / 0.72)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="customizations"><a href="#customizations" class="title-link-to-anchor">Customizations<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="customizations"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="changing-the-default-values"><a href="#changing-the-default-values" class="title-link-to-anchor">Changing the default values<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="changing-the-default-values"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To change the HEX code for each color while still following the palette pattern, extend the theme by accessing them through the <code>palette</code> node on the target mode (light or dark):</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> extendTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token number">50</span><span class="token operator">:</span> <span class="token string">\'#C0CCD9\'</span><span class="token punctuation">,</span>\n          <span class="token number">100</span><span class="token operator">:</span> <span class="token string">\'#A5B8CF\'</span><span class="token punctuation">,</span>\n          <span class="token number">200</span><span class="token operator">:</span> <span class="token string">\'#6A96CA\'</span><span class="token punctuation">,</span>\n          <span class="token number">300</span><span class="token operator">:</span> <span class="token string">\'#4886D0\'</span><span class="token punctuation">,</span>\n          <span class="token number">400</span><span class="token operator">:</span> <span class="token string">\'#2178DD\'</span><span class="token punctuation">,</span>\n          <span class="token number">500</span><span class="token operator">:</span> <span class="token string">\'#096BDE\'</span><span class="token punctuation">,</span>\n          <span class="token number">600</span><span class="token operator">:</span> <span class="token string">\'#1B62B5\'</span><span class="token punctuation">,</span>\n          <span class="token number">700</span><span class="token operator">:</span> <span class="token string">\'#265995\'</span><span class="token punctuation">,</span>\n          <span class="token number">800</span><span class="token operator">:</span> <span class="token string">\'#2F4968\'</span><span class="token punctuation">,</span>\n          <span class="token number">900</span><span class="token operator">:</span> <span class="token string">\'#2F3C4C\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Then, pass it to `&lt;CssVarsProvider theme={theme}>`.</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="changing-the-global-variant-tokens"><a href="#changing-the-global-variant-tokens" class="title-link-to-anchor">Changing the global variant tokens<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="changing-the-global-variant-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>A good way to start changing how color looks like with the built-in variants is by using the Button component as a jumping-off point.\nFor example, here&#39;s how you&#39;d make the Joy\xa0UI Button match the colors of another system, such as <a href="https://getbootstrap.com/docs/5.2/components/buttons/#examples" target="_blank" rel="noopener nofollow">Bootstrap</a>:</p>\n',{demo:"BootstrapVariantTokens.js"},'<ul>\n<li>Bootstrap&#39;s default buttons are comparable to Joy\xa0UI&#39;s <code>solid</code> variant.</li>\n<li>Bootstrap&#39;s <code>secondary</code> variant uses a gray color, similar to Joy\xa0UI&#39;s <code>neutral</code>.</li>\n<li>Bootstrap&#39;s <code>btn-light</code> is similar to Joy\xa0UI&#39;s button using the <code>soft</code> variant and <code>neutral</code> color palette.</li>\n<li>Joy\xa0UI&#39;s defaults don&#39;t include anything similar to Bootstrap&#39;s <code>btn-dark</code>.<ul>\n<li>We can recreate it using one of the three main customization approaches.</li>\n</ul>\n</li>\n</ul>\n<h3 id="adding-color-tokens"><a href="#adding-color-tokens" class="title-link-to-anchor">Adding color tokens<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="adding-color-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To make any new color available through the <code>color</code> prop, insert them in the <code>colorSchemes</code> key of the extended theme.\nYou&#39;ll also be able to access them with both the <code>styled</code> and <code>sx</code> APIs.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// `gradient` is a new color token</span>\n        <span class="token literal-property property">gradient</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">\'linear-gradient(to top, var(--joy-palette-primary-main), #000)\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// `sx` prop usage example:</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function-variable function">background</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token operator">=></span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>gradient<span class="token punctuation">.</span>primary <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-success">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#success-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>We recommend to limit them to 3 levels deep－in this case: <code>palette.gradient.primary</code>.</p>\n\n</div></aside><h4>TypeScript</h4><p>Augment the theme&#39;s <code>Palette</code> interface, when working in TypeScript, to include the new tokens.</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token comment">// You can put this to any file that\'s included in your tsconfig</span>\ndeclare module <span class="token string">\'@mui/joy/styles\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">Palette</span> <span class="token punctuation">{</span>\n    gradient<span class="token operator">:</span> <span class="token punctuation">{</span>\n      primary<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-success">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#success-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Adding custom tokens increases your stylesheet&#39;s bundle size, and adds an extra set of maintenance costs to your app.\nThese tradeoffs mean that adding new tokens is usually only worthwhile when you know that they&#39;ll be used by many components.</p>\n<p>As an alternative, consider using <a href="/joy-ui/customization/approaches/#the-sx-prop">the <code>sx</code> prop</a> for one-off customizations.</p>\n\n</div></aside><h3 id="adding-new-palettes"><a href="#adding-new-palettes" class="title-link-to-anchor">Adding new palettes<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="adding-new-palettes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To add entirely new color palettes, with any type of scale, and make them available through the <code>color</code> prop, insert them in the <code>colorSchemes</code> key of the extended theme.</p>\n<p>The snippet below adds a custom <code>secondary</code> palette to the theme.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> extendTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// Credit:</span>\n          <span class="token comment">// https://github.com/tailwindlabs/tailwindcss/blob/master/src/public/colors.js</span>\n          <span class="token number">50</span><span class="token operator">:</span> <span class="token string">\'#fdf2f8\'</span><span class="token punctuation">,</span>\n          <span class="token number">100</span><span class="token operator">:</span> <span class="token string">\'#fce7f3\'</span><span class="token punctuation">,</span>\n          <span class="token number">200</span><span class="token operator">:</span> <span class="token string">\'#fbcfe8\'</span><span class="token punctuation">,</span>\n          <span class="token number">300</span><span class="token operator">:</span> <span class="token string">\'#f9a8d4\'</span><span class="token punctuation">,</span>\n          <span class="token number">400</span><span class="token operator">:</span> <span class="token string">\'#f472b6\'</span><span class="token punctuation">,</span>\n          <span class="token number">500</span><span class="token operator">:</span> <span class="token string">\'#ec4899\'</span><span class="token punctuation">,</span>\n          <span class="token number">600</span><span class="token operator">:</span> <span class="token string">\'#db2777\'</span><span class="token punctuation">,</span>\n          <span class="token number">700</span><span class="token operator">:</span> <span class="token string">\'#be185d\'</span><span class="token punctuation">,</span>\n          <span class="token number">800</span><span class="token operator">:</span> <span class="token string">\'#9d174d\'</span><span class="token punctuation">,</span>\n          <span class="token number">900</span><span class="token operator">:</span> <span class="token string">\'#831843\'</span><span class="token punctuation">,</span>\n          <span class="token comment">// Adjust the global variant tokens as you\'d like.</span>\n          <span class="token comment">// The tokens should be the same for all color schemes.</span>\n          <span class="token literal-property property">solidBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-400)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">solidActiveBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-500)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">outlinedBorder</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-500)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">outlinedColor</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-700)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">outlinedActiveBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-100)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">softColor</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-800)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">softBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-200)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">softActiveBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-300)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">plainColor</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-700)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">plainActiveBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-100)\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// Credit:</span>\n          <span class="token comment">// https://github.com/tailwindlabs/tailwindcss/blob/master/src/public/colors.js</span>\n          <span class="token number">50</span><span class="token operator">:</span> <span class="token string">\'#fdf2f8\'</span><span class="token punctuation">,</span>\n          <span class="token number">100</span><span class="token operator">:</span> <span class="token string">\'#fce7f3\'</span><span class="token punctuation">,</span>\n          <span class="token number">200</span><span class="token operator">:</span> <span class="token string">\'#fbcfe8\'</span><span class="token punctuation">,</span>\n          <span class="token number">300</span><span class="token operator">:</span> <span class="token string">\'#f9a8d4\'</span><span class="token punctuation">,</span>\n          <span class="token number">400</span><span class="token operator">:</span> <span class="token string">\'#f472b6\'</span><span class="token punctuation">,</span>\n          <span class="token number">500</span><span class="token operator">:</span> <span class="token string">\'#ec4899\'</span><span class="token punctuation">,</span>\n          <span class="token number">600</span><span class="token operator">:</span> <span class="token string">\'#db2777\'</span><span class="token punctuation">,</span>\n          <span class="token number">700</span><span class="token operator">:</span> <span class="token string">\'#be185d\'</span><span class="token punctuation">,</span>\n          <span class="token number">800</span><span class="token operator">:</span> <span class="token string">\'#9d174d\'</span><span class="token punctuation">,</span>\n          <span class="token number">900</span><span class="token operator">:</span> <span class="token string">\'#831843\'</span><span class="token punctuation">,</span>\n          <span class="token comment">// Adjust the global variant tokens as you\'d like.</span>\n          <span class="token comment">// The tokens should be the same for all color schemes.</span>\n          <span class="token literal-property property">solidBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-400)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">solidActiveBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-500)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">outlinedBorder</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-700)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">outlinedColor</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-600)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">outlinedActiveBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-900)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">softColor</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-500)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">softBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-900)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">softActiveBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-800)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">plainColor</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-500)\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">plainActiveBg</span><span class="token operator">:</span> <span class="token string">\'var(--joy-palette-secondary-900)\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Then, pass it to `&lt;CssVarsProvider theme={theme}>`.</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then, you will be able to use <code>secondary</code> color on Joy\xa0UI components:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconButton</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>outlined<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Chip</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>soft<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>TypeScript</h4><p>When working in TypeScript, you must augment the theme&#39;s interfaces to include the new palette.</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token comment">// You can put this to any file that\'s included in your tsconfig</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> PaletteRange <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/styles\'</span><span class="token punctuation">;</span>\n\ndeclare module <span class="token string">\'@mui/joy/styles\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">ColorPalettePropOverrides</span> <span class="token punctuation">{</span>\n    <span class="token comment">// apply to all Joy UI components that support `color` prop</span>\n    secondary<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">interface</span> <span class="token class-name">Palette</span> <span class="token punctuation">{</span>\n    <span class="token comment">// this will make the node `secondary` configurable in `extendTheme`</span>\n    <span class="token comment">// and add `secondary` to the theme\'s palette.</span>\n    secondary<span class="token operator">:</span> PaletteRange<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Note that adding new palettes increases the HTML bundle size.</p>\n\n</div></aside><h3 id="removing-the-default-tokens"><a href="#removing-the-default-tokens" class="title-link-to-anchor">Removing the default tokens<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="removing-the-default-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To remove any default token, use <code>undefined</code> as a value within the extended theme.\nThis removes them from the <code>theme</code> object and prevents the corresponding CSS variable from being generated.</p>\n<p>For example, all default global variant color tokens comes with styles for the <code>:active</code> pseudo class.\nHere&#39;s how you&#39;d remove it from the solid variant.</p>\n',{demo:"RemoveActiveTokens.js",defaultCodeOpen:!0}],toc:[{text:"Default color tokens",level:2,hash:"default-color-tokens",children:[{text:"Global variant tokens",level:3,hash:"global-variant-tokens"},{text:"Channel tokens",level:3,hash:"channel-tokens"}]},{text:"Customizations",level:2,hash:"customizations",children:[{text:"Changing the default values",level:3,hash:"changing-the-default-values"},{text:"Changing the global variant tokens",level:3,hash:"changing-the-global-variant-tokens"},{text:"Adding color tokens",level:3,hash:"adding-color-tokens"},{text:"Adding new palettes",level:3,hash:"adding-new-palettes"},{text:"Removing the default tokens",level:3,hash:"removing-the-default-tokens"}]}],title:"Theme colors",headers:{components:[]}}},na={"PaletteThemeViewer.js":{module:"./PaletteThemeViewer.js",raw:"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport * as React from 'react';\nimport { extendTheme, styled } from '@mui/joy/styles';\nimport Box from '@mui/joy/Box';\nimport Link from '@mui/joy/Link';\nimport Tooltip from '@mui/joy/Tooltip';\nimport Typography from '@mui/joy/Typography';\nimport Sheet from '@mui/joy/Sheet';\nimport LightMode from '@mui/icons-material/LightModeOutlined';\nimport DarkMode from '@mui/icons-material/DarkModeOutlined';\nimport InfoOutlined from '@mui/icons-material/InfoOutlined';\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';\nimport useClipboardCopy from 'docs/src/modules/utils/useClipboardCopy';\n\nconst defaultTheme = extendTheme();\n\nconst traverseObject = (palette) => {\n  const result = {};\n  const traverse = (object, parts = []) => {\n    if (object && typeof object === 'object') {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const key of Object.keys(object)) {\n        traverse(object[key], [...parts, key]);\n      }\n    } else {\n      result[parts.join('.')] = object;\n    }\n  };\n  traverse(palette);\n  return result;\n};\n\n// https://stackoverflow.com/a/38641281/559913\nconst collator = new Intl.Collator(undefined, {\n  numeric: true,\n  sensitivity: 'base',\n});\n\nconst Table = styled('table')(({ theme }) => ({\n  borderCollapse: 'separate',\n  borderSpacing: 0,\n  display: 'block',\n  height: 500,\n  overflowY: 'scroll',\n  th: {\n    textAlign: 'left',\n    padding: 8,\n    position: 'sticky',\n    top: 0,\n    zIndex: 1,\n    ...theme.variants.soft.neutral,\n  },\n  td: {\n    verticalAlign: 'top',\n    padding: '3px 6px',\n  },\n  tr: {\n    '&:hover': {\n      backgroundColor: theme.vars.palette.background.level1,\n    },\n    '&:first-of-type': {\n      '& td': { paddingTop: 6 },\n    },\n  },\n}));\n\nexport default function PaletteThemeViewer() {\n  const { copy, isCopied } = useClipboardCopy();\n  const light = traverseObject(defaultTheme.colorSchemes.light.palette);\n  const dark = traverseObject(defaultTheme.colorSchemes.dark.palette);\n  const paletteTokens = Array.from(\n    new Set([...Object.keys(dark), ...Object.keys(light)]),\n  ).sort(collator.compare);\n  const renderSwatch = (colorScheme, token) => (\n    <Box\n      component=\"span\"\n      data-joy-color-scheme={colorScheme}\n      sx={{\n        position: 'relative',\n        width: '1em',\n        height: '1em',\n        fontSize: 'var(--Icon-fontSize)',\n        borderRadius: '2px',\n        backgroundImage: `linear-gradient(90deg, var(--joy-palette-text-tertiary) 50%, transparent 50%), linear-gradient(90deg, transparent 50%, var(--joy-palette-text-tertiary) 50%)`,\n        backgroundRepeat: 'repeat-x',\n        backgroundSize: '100% 50%, 100% 50%',\n        backgroundPosition: '0 0, 0 100%',\n        '&::after': {\n          content: '\"\"',\n          position: 'absolute',\n          display: 'block',\n          inset: 0,\n          bgcolor: token,\n          borderRadius: 'inherit',\n          boxShadow: 'inset 0 0 0 1px #bababa',\n        },\n      }}\n    />\n  );\n\n  return (\n    <Box\n      sx={{\n        marginBottom: '-9px',\n        width: '100%',\n        overflow: 'hidden',\n        position: 'relative',\n        border: '1px solid',\n        borderColor: 'divider',\n        borderTopLeftRadius: '12px',\n        borderTopRightRadius: '12px',\n      }}\n    >\n      <Sheet\n        variant=\"solid\"\n        color=\"success\"\n        sx={{\n          position: 'absolute',\n          left: '50%',\n          bottom: 0,\n          transform: `translateX(-50%) translateY(${\n            isCopied ? '-0.5rem' : 'calc(100% + 0.5rem)'\n          })`,\n          transition: '0.3s',\n          p: 0.5,\n          pl: 0.5,\n          pr: 1,\n          borderRadius: 'xl',\n          boxShadow: 'md',\n          zIndex: 1,\n        }}\n      >\n        <Typography\n          level=\"body-xs\"\n          textColor=\"inherit\"\n          startDecorator={<CheckCircleRoundedIcon fontSize=\"small\" />}\n        >\n          Copied\n        </Typography>\n      </Sheet>\n      <Table>\n        <thead>\n          <tr>\n            <th>\n              <Typography fontSize=\"sm\" textColor=\"inherit\">\n                Token\n              </Typography>\n            </th>\n            <th>\n              <Typography\n                fontSize=\"sm\"\n                startDecorator={<LightMode />}\n                textColor=\"inherit\"\n              >\n                Light\n              </Typography>\n            </th>\n            <th>\n              <Typography\n                fontSize=\"sm\"\n                startDecorator={<DarkMode />}\n                textColor=\"inherit\"\n              >\n                Dark\n              </Typography>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {paletteTokens\n            .filter((token) => token !== 'mode')\n            .map((token) => (\n              <tr key={token}>\n                <td>\n                  <Link\n                    component=\"button\"\n                    color=\"neutral\"\n                    textColor=\"inherit\"\n                    fontSize=\"sm\"\n                    fontWeight=\"md\"\n                    textAlign=\"left\"\n                    onClick={() => copy(token)}\n                    endDecorator={\n                      light[token].match(/^[0-9]+\\s[0-9]+\\s[0-9]+$/) ? (\n                        <Tooltip\n                          size=\"sm\"\n                          arrow\n                          title={\n                            <Typography>\n                              Translucent color usage: <br />\n                              <Typography\n                                fontFamily=\"code\"\n                                component=\"code\"\n                                sx={{ py: 1, display: 'block' }}\n                              >\n                                rgba(var(--joy-palette-{token.replace('.', '-')}) /\n                                0.6)\n                              </Typography>\n                            </Typography>\n                          }\n                          sx={{ pointerEvents: 'none' }}\n                        >\n                          <InfoOutlined sx={{ cursor: 'initial' }} />\n                        </Tooltip>\n                      ) : null\n                    }\n                    sx={{ cursor: 'copy' }}\n                  >\n                    {token}\n                  </Link>\n                </td>\n                <td>\n                  <Link\n                    component=\"button\"\n                    color=\"neutral\"\n                    textColor=\"inherit\"\n                    fontSize=\"xs\"\n                    startDecorator={renderSwatch('light', token)}\n                    fontFamily=\"code\"\n                    textAlign=\"left\"\n                    sx={{ alignItems: 'flex-start', cursor: 'copy' }}\n                    onClick={() => copy(light[token])}\n                  >\n                    {light[token]}\n                  </Link>\n                </td>\n                <td>\n                  <Link\n                    component=\"button\"\n                    color=\"neutral\"\n                    textColor=\"inherit\"\n                    fontSize=\"xs\"\n                    startDecorator={renderSwatch('dark', token)}\n                    fontFamily=\"code\"\n                    textAlign=\"left\"\n                    sx={{ alignItems: 'flex-start', cursor: 'copy' }}\n                    onClick={() => copy(dark[token])}\n                  >\n                    {dark[token]}\n                  </Link>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </Box>\n  );\n}\n",moduleTS:"./PaletteThemeViewer.js",rawTS:"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport * as React from 'react';\nimport { extendTheme, Palette, styled } from '@mui/joy/styles';\nimport Box from '@mui/joy/Box';\nimport Link from '@mui/joy/Link';\nimport Tooltip from '@mui/joy/Tooltip';\nimport Typography from '@mui/joy/Typography';\nimport Sheet from '@mui/joy/Sheet';\nimport LightMode from '@mui/icons-material/LightModeOutlined';\nimport DarkMode from '@mui/icons-material/DarkModeOutlined';\nimport InfoOutlined from '@mui/icons-material/InfoOutlined';\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';\nimport useClipboardCopy from 'docs/src/modules/utils/useClipboardCopy';\n\nconst defaultTheme = extendTheme();\n\nconst traverseObject = (palette: Palette) => {\n  const result: Record<string, any> = {};\n  const traverse = (object: any, parts: string[] = []) => {\n    if (object && typeof object === 'object') {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const key of Object.keys(object)) {\n        traverse(object[key], [...parts, key]);\n      }\n    } else {\n      result[parts.join('.')] = object;\n    }\n  };\n  traverse(palette);\n  return result;\n};\n\n// https://stackoverflow.com/a/38641281/559913\nconst collator = new Intl.Collator(undefined, {\n  numeric: true,\n  sensitivity: 'base',\n});\n\nconst Table = styled('table')(({ theme }) => ({\n  borderCollapse: 'separate',\n  borderSpacing: 0,\n  display: 'block',\n  height: 500,\n  overflowY: 'scroll',\n  th: {\n    textAlign: 'left',\n    padding: 8,\n    position: 'sticky',\n    top: 0,\n    zIndex: 1,\n    ...theme.variants.soft.neutral,\n  },\n  td: {\n    verticalAlign: 'top',\n    padding: '3px 6px',\n  },\n  tr: {\n    '&:hover': {\n      backgroundColor: theme.vars.palette.background.level1,\n    },\n    '&:first-of-type': {\n      '& td': { paddingTop: 6 },\n    },\n  },\n}));\n\nexport default function PaletteThemeViewer() {\n  const { copy, isCopied } = useClipboardCopy();\n  const light = traverseObject(defaultTheme.colorSchemes.light.palette);\n  const dark = traverseObject(defaultTheme.colorSchemes.dark.palette);\n  const paletteTokens = Array.from(\n    new Set([...Object.keys(dark), ...Object.keys(light)]),\n  ).sort(collator.compare);\n  const renderSwatch = (colorScheme: 'light' | 'dark', token: string) => (\n    <Box\n      component=\"span\"\n      data-joy-color-scheme={colorScheme}\n      sx={{\n        position: 'relative',\n        width: '1em',\n        height: '1em',\n        fontSize: 'var(--Icon-fontSize)',\n        borderRadius: '2px',\n        backgroundImage: `linear-gradient(90deg, var(--joy-palette-text-tertiary) 50%, transparent 50%), linear-gradient(90deg, transparent 50%, var(--joy-palette-text-tertiary) 50%)`,\n        backgroundRepeat: 'repeat-x',\n        backgroundSize: '100% 50%, 100% 50%',\n        backgroundPosition: '0 0, 0 100%',\n        '&::after': {\n          content: '\"\"',\n          position: 'absolute',\n          display: 'block',\n          inset: 0,\n          bgcolor: token,\n          borderRadius: 'inherit',\n          boxShadow: 'inset 0 0 0 1px #bababa',\n        },\n      }}\n    />\n  );\n  return (\n    <Box\n      sx={{\n        marginBottom: '-9px',\n        width: '100%',\n        overflow: 'hidden',\n        position: 'relative',\n        border: '1px solid',\n        borderColor: 'divider',\n        borderTopLeftRadius: '12px',\n        borderTopRightRadius: '12px',\n      }}\n    >\n      <Sheet\n        variant=\"solid\"\n        color=\"success\"\n        sx={{\n          position: 'absolute',\n          left: '50%',\n          bottom: 0,\n          transform: `translateX(-50%) translateY(${\n            isCopied ? '-0.5rem' : 'calc(100% + 0.5rem)'\n          })`,\n          transition: '0.3s',\n          p: 0.5,\n          pl: 0.5,\n          pr: 1,\n          borderRadius: 'xl',\n          boxShadow: 'md',\n          zIndex: 1,\n        }}\n      >\n        <Typography\n          level=\"body-xs\"\n          textColor=\"inherit\"\n          startDecorator={<CheckCircleRoundedIcon fontSize=\"small\" />}\n        >\n          Copied\n        </Typography>\n      </Sheet>\n      <Table>\n        <thead>\n          <tr>\n            <th>\n              <Typography fontSize=\"sm\" textColor=\"inherit\">\n                Token\n              </Typography>\n            </th>\n            <th>\n              <Typography\n                fontSize=\"sm\"\n                startDecorator={<LightMode />}\n                textColor=\"inherit\"\n              >\n                Light\n              </Typography>\n            </th>\n            <th>\n              <Typography\n                fontSize=\"sm\"\n                startDecorator={<DarkMode />}\n                textColor=\"inherit\"\n              >\n                Dark\n              </Typography>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {paletteTokens\n            .filter((token) => token !== 'mode')\n            .map((token) => (\n              <tr key={token}>\n                <td>\n                  <Link\n                    component=\"button\"\n                    color=\"neutral\"\n                    textColor=\"inherit\"\n                    fontSize=\"sm\"\n                    fontWeight=\"md\"\n                    textAlign=\"left\"\n                    onClick={() => copy(token)}\n                    endDecorator={\n                      light[token].match(/^[0-9]+\\s[0-9]+\\s[0-9]+$/) ? (\n                        <Tooltip\n                          size=\"sm\"\n                          arrow\n                          title={\n                            <Typography>\n                              Translucent color usage: <br />\n                              <Typography\n                                fontFamily=\"code\"\n                                component=\"code\"\n                                sx={{ py: 1, display: 'block' }}\n                              >\n                                rgba(var(--joy-palette-{token.replace('.', '-')}) /\n                                0.6)\n                              </Typography>\n                            </Typography>\n                          }\n                          sx={{ pointerEvents: 'none' }}\n                        >\n                          <InfoOutlined sx={{ cursor: 'initial' }} />\n                        </Tooltip>\n                      ) : null\n                    }\n                    sx={{ cursor: 'copy' }}\n                  >\n                    {token}\n                  </Link>\n                </td>\n                <td>\n                  <Link\n                    component=\"button\"\n                    color=\"neutral\"\n                    textColor=\"inherit\"\n                    fontSize=\"xs\"\n                    startDecorator={renderSwatch('light', token)}\n                    fontFamily=\"code\"\n                    textAlign=\"left\"\n                    sx={{ alignItems: 'flex-start', cursor: 'copy' }}\n                    onClick={() => copy(light[token])}\n                  >\n                    {light[token]}\n                  </Link>\n                </td>\n                <td>\n                  <Link\n                    component=\"button\"\n                    color=\"neutral\"\n                    textColor=\"inherit\"\n                    fontSize=\"xs\"\n                    startDecorator={renderSwatch('dark', token)}\n                    fontFamily=\"code\"\n                    textAlign=\"left\"\n                    sx={{ alignItems: 'flex-start', cursor: 'copy' }}\n                    onClick={() => copy(dark[token])}\n                  >\n                    {dark[token]}\n                  </Link>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </Box>\n  );\n}\n"},"BootstrapVariantTokens.js":{module:"./BootstrapVariantTokens.js",raw:"import * as React from 'react';\nimport { CssVarsProvider, extendTheme } from '@mui/joy/styles';\nimport Box from '@mui/joy/Box';\nimport Button from '@mui/joy/Button';\n\nconst palette = {\n  primary: {\n    solidBg: '#0d6efd',\n    solidBorder: '#0d6efd',\n    solidHoverBg: '#0b5ed7',\n    solidHoverBorder: '#0a58ca',\n    solidActiveBg: '#0a58ca',\n    solidActiveBorder: '#0a53be',\n    solidDisabledBg: '#0d6efd',\n    solidDisabledBorder: '#0d6efd',\n  },\n  neutral: {\n    solidBg: '#6c757d',\n    solidBorder: '#6c757d',\n    solidHoverBg: '#5c636a',\n    solidHoverBorder: '#565e64',\n    solidActiveBg: '#565e64',\n    solidActiveBorder: '#51585e',\n    solidDisabledBg: '#6c757d',\n    solidDisabledBorder: '#6c757d',\n    // btn-light\n    softColor: '#000',\n    softBg: '#f8f9fa',\n    softBorder: '#f8f9fa',\n    softHoverBg: '#f9fafb',\n    softHoverBorder: '#f9fafb',\n    softActiveBg: '#f9fafb',\n    softActiveBorder: '#f9fafb',\n    softDisabledBg: '#f8f9fa',\n    softDisabledBorder: '#f8f9fa',\n  },\n  success: {\n    solidBg: '#198754',\n    solidBorder: '#198754',\n    solidHoverBg: '#157347',\n    solidHoverBorder: '#146c43',\n    solidActiveBg: '#146c43',\n    solidActiveBorder: '#13653f',\n    solidDisabledBg: '#198754',\n    solidDisabledBorder: '#198754',\n  },\n  danger: {\n    solidBg: '#dc3545',\n    solidBorder: '#dc3545',\n    solidHoverBg: '#bb2d3b',\n    solidHoverBorder: '#b02a37',\n    solidActiveBg: '#b02a37',\n    solidActiveBorder: '#a52834',\n    solidDisabledBg: '#dc3545',\n    solidDisabledBorder: '#dc3545',\n  },\n  warning: {\n    solidColor: '#000',\n    solidBg: '#ffc107',\n    solidBorder: '#ffc107',\n    solidHoverBg: '#ffca2c',\n    solidHoverBorder: '#ffc720',\n    solidActiveBg: '#ffcd39',\n    solidActiveBorder: '#ffc720',\n    solidDisabledBg: '#ffc107',\n    solidDisabledBorder: '#ffc107',\n  },\n  info: {\n    solidColor: '#000',\n    solidBg: '#0dcaf0',\n    solidBorder: '#0dcaf0',\n    solidHoverBg: '#31d2f2',\n    solidHoverBorder: '#25cff2',\n    solidActiveBg: '#3dd5f3',\n    solidActiveBorder: '#25cff2',\n    solidDisabledBg: '#0dcaf0',\n    solidDisabledBorder: '#0dcaf0',\n  },\n};\n\nconst bootstrapTheme = extendTheme({\n  cssVarPrefix: 'bs',\n  colorSchemes: {\n    light: { palette },\n    dark: { palette },\n  },\n  components: {\n    JoyButton: {\n      styleOverrides: {\n        root: ({ ownerState, theme }) => ({\n          letterSpacing: 'normal',\n          fontWeight: theme.vars.fontWeight.md,\n          fontFamily: theme.vars.fontFamily.fallback,\n          outlineWidth: 0,\n          borderRadius: '0.375rem',\n          transition:\n            'color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out',\n          ...(ownerState.size === 'md' && {\n            paddingInline: '0.75rem',\n            minHeight: 38,\n          }),\n        }),\n      },\n    },\n  },\n});\n\nconst useEnhancedEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport default function BootstrapVariantTokens() {\n  // the `node` is used for attaching CSS variables to this demo, you might not need it in your application.\n  const [node, setNode] = React.useState(null);\n  useEnhancedEffect(() => {\n    setNode(document.getElementById('bootstrap-buttons-demo'));\n  }, []);\n\n  return (\n    <CssVarsProvider\n      theme={bootstrapTheme}\n      colorSchemeNode={node || null}\n      colorSchemeSelector=\"#bootstrap-buttons-demo\"\n    >\n      <Box\n        id=\"bootstrap-buttons-demo\"\n        sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}\n      >\n        <Button>Primary</Button>\n        <Button color=\"neutral\">Secondary</Button>\n        <Button color=\"success\">Success</Button>\n        <Button color=\"danger\">Danger</Button>\n        <Button color=\"warning\">Warning</Button>\n        <Button variant=\"soft\" color=\"neutral\">\n          Light\n        </Button>\n      </Box>\n    </CssVarsProvider>\n  );\n}\n"},"RemoveActiveTokens.js":{module:"./RemoveActiveTokens.js",raw:"import * as React from 'react';\nimport { CssVarsProvider, extendTheme } from '@mui/joy/styles';\nimport Box from '@mui/joy/Box';\nimport Button from '@mui/joy/Button';\n\n// ⚠️ If the value is `undefined`, it should be `undefined` for other color schemes as well.\nconst theme = extendTheme({\n  colorSchemes: {\n    light: {\n      palette: {\n        primary: {\n          solidActiveBg: undefined,\n        },\n      },\n    },\n    dark: {\n      palette: {\n        primary: {\n          solidActiveBg: undefined,\n        },\n      },\n    },\n  },\n});\n\nconst useEnhancedEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport default function RemoveActiveTokens() {\n  // the `node` is used for attaching CSS variables to this demo, you might not need it in your application.\n  const [node, setNode] = React.useState(null);\n  useEnhancedEffect(() => {\n    setNode(document.getElementById('remove-active-tokens-demo'));\n  }, []);\n\n  return (\n    <CssVarsProvider\n      theme={theme}\n      colorSchemeNode={node || null}\n      colorSchemeSelector=\"#remove-active-tokens-demo\"\n    >\n      <Box\n        id=\"remove-active-tokens-demo\"\n        sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}\n      >\n        <Button>Button</Button>\n      </Box>\n    </CssVarsProvider>\n  );\n}\n"}};na.scope={process:{},import:{react:f,"@mui/joy/styles":y,"@mui/joy/Box":v,"@mui/joy/Link":b,"@mui/joy/Tooltip":x,"@mui/joy/Typography":C,"@mui/joy/Sheet":w,"@mui/icons-material/LightModeOutlined":B,"@mui/icons-material/DarkModeOutlined":j,"@mui/icons-material/InfoOutlined":T,"@mui/icons-material/CheckCircleRounded":S,"docs/src/modules/utils/useClipboardCopy":Z,"@mui/joy/Button":M}};var ns={"./PaletteThemeViewer.js":function(){var n=(0,Z.default)(),e=n.copy,t=n.isCopied,r=J(U.colorSchemes.light.palette),p=J(U.colorSchemes.dark.palette),l=I()(new(P())([].concat((0,z.Z)(D()(p)),(0,z.Z)(D()(r))))).sort($.compare),c=function(n,e){return(0,_.jsx)(E.Z,{component:"span","data-joy-color-scheme":n,sx:{position:"relative",width:"1em",height:"1em",fontSize:"var(--Icon-fontSize)",borderRadius:"2px",backgroundImage:"linear-gradient(90deg, var(--joy-palette-text-tertiary) 50%, transparent 50%), linear-gradient(90deg, transparent 50%, var(--joy-palette-text-tertiary) 50%)",backgroundRepeat:"repeat-x",backgroundSize:"100% 50%, 100% 50%",backgroundPosition:"0 0, 0 100%","&::after":{content:'""',position:"absolute",display:"block",inset:0,bgcolor:e,borderRadius:"inherit",boxShadow:"inset 0 0 0 1px #bababa"}}})};return(0,_.jsxs)(E.Z,{sx:{marginBottom:"-9px",width:"100%",overflow:"hidden",position:"relative",border:"1px solid",borderColor:"divider",borderTopLeftRadius:"12px",borderTopRightRadius:"12px"},children:[(0,_.jsx)(N.Z,{variant:"solid",color:"success",sx:{position:"absolute",left:"50%",bottom:0,transform:"translateX(-50%) translateY(".concat(t?"-0.5rem":"calc(100% + 0.5rem)",")"),transition:"0.3s",p:.5,pl:.5,pr:1,borderRadius:"xl",boxShadow:"md",zIndex:1},children:o||(o=(0,_.jsx)(W.ZP,{level:"body-xs",textColor:"inherit",startDecorator:(0,_.jsx)(S.default,{fontSize:"small"}),children:"Copied"}))}),(0,_.jsxs)(Y,{children:[a||(a=(0,_.jsx)("thead",{children:(0,_.jsxs)("tr",{children:[(0,_.jsx)("th",{children:(0,_.jsx)(W.ZP,{fontSize:"sm",textColor:"inherit",children:"Token"})}),(0,_.jsx)("th",{children:(0,_.jsx)(W.ZP,{fontSize:"sm",startDecorator:(0,_.jsx)(B.default,{}),textColor:"inherit",children:"Light"})}),(0,_.jsx)("th",{children:(0,_.jsx)(W.ZP,{fontSize:"sm",startDecorator:(0,_.jsx)(j.default,{}),textColor:"inherit",children:"Dark"})})]})})),(0,_.jsx)("tbody",{children:l.filter(function(n){return"mode"!==n}).map(function(n){return(0,_.jsxs)("tr",{children:[(0,_.jsx)("td",{children:(0,_.jsx)(V.Z,{component:"button",color:"neutral",textColor:"inherit",fontSize:"sm",fontWeight:"md",textAlign:"left",onClick:function(){return e(n)},endDecorator:r[n].match(/^[0-9]+\s[0-9]+\s[0-9]+$/)?(0,_.jsx)(F.Z,{size:"sm",arrow:!0,title:(0,_.jsxs)(W.ZP,{children:["Translucent color usage: ",s||(s=(0,_.jsx)("br",{})),(0,_.jsxs)(W.ZP,{fontFamily:"code",component:"code",sx:{py:1,display:"block"},children:["rgba(var(--joy-palette-",n.replace(".","-"),") / 0.6)"]})]}),sx:{pointerEvents:"none"},children:(0,_.jsx)(T.default,{sx:{cursor:"initial"}})}):null,sx:{cursor:"copy"},children:n})}),(0,_.jsx)("td",{children:(0,_.jsx)(V.Z,{component:"button",color:"neutral",textColor:"inherit",fontSize:"xs",startDecorator:c("light",n),fontFamily:"code",textAlign:"left",sx:{alignItems:"flex-start",cursor:"copy"},onClick:function(){return e(r[n])},children:r[n]})}),(0,_.jsx)("td",{children:(0,_.jsx)(V.Z,{component:"button",color:"neutral",textColor:"inherit",fontSize:"xs",startDecorator:c("dark",n),fontFamily:"code",textAlign:"left",sx:{alignItems:"flex-start",cursor:"copy"},onClick:function(){return e(p[n])},children:p[n]})})]},n)})})]})]})},"./BootstrapVariantTokens.js":function(){var n=h.useState(null),e=(0,X.Z)(n,2),t=e[0],o=e[1];return nn(function(){o(document.getElementById("bootstrap-buttons-demo"))},[]),(0,_.jsx)(K.lL,{theme:G,colorSchemeNode:t||null,colorSchemeSelector:"#bootstrap-buttons-demo",children:(0,_.jsxs)(E.Z,{id:"bootstrap-buttons-demo",sx:{display:"flex",gap:1,flexWrap:"wrap"},children:[r||(r=(0,_.jsx)(q.Z,{children:"Primary"})),p||(p=(0,_.jsx)(q.Z,{color:"neutral",children:"Secondary"})),l||(l=(0,_.jsx)(q.Z,{color:"success",children:"Success"})),c||(c=(0,_.jsx)(q.Z,{color:"danger",children:"Danger"})),i||(i=(0,_.jsx)(q.Z,{color:"warning",children:"Warning"})),d||(d=(0,_.jsx)(q.Z,{variant:"soft",color:"neutral",children:"Light"}))]})})},"./RemoveActiveTokens.js":function(){var n=h.useState(null),e=(0,X.Z)(n,2),t=e[0],o=e[1];return nt(function(){o(document.getElementById("remove-active-tokens-demo"))},[]),(0,_.jsx)(K.lL,{theme:ne,colorSchemeNode:t||null,colorSchemeSelector:"#remove-active-tokens-demo",children:(0,_.jsx)(E.Z,{id:"remove-active-tokens-demo",sx:{display:"flex",gap:1,flexWrap:"wrap"},children:u||(u=(0,_.jsx)(q.Z,{children:"Button"}))})})}},nr={};function np(){return(0,_.jsx)(g.Z,(0,m.Z)({},k))}},601847:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/customization/theme-colors",function(){return t(602683)}])},327273:function(n,e,t){"use strict";var o=t(11234);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=o(t(122268)),s=t(735250);e.default=(0,a.default)((0,s.jsx)("path",{d:"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8"}),"InfoOutlined")}},function(n){n.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,93670,92888,40179],function(){return n(n.s=601847)}),_N_E=n.O()}]);