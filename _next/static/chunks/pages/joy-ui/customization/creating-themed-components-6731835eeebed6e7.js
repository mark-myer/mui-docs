(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[15246,39519],{333897:function(n,s,a){var t=a(915012),e=/^\s+/;n.exports=function(n){return n?n.slice(0,t(n)+1).replace(e,""):n}},915012:function(n){var s=/\s/;n.exports=function(n){for(var a=n.length;a--&&s.test(n.charAt(a)););return a}},889678:function(n,s,a){var t=a(706627),e=a(885365),o=a(67948),p=Math.max,c=Math.min;n.exports=function(n,s,a){var l,r,i,u,k,d,m=0,h=!1,y=!1,f=!0;if("function"!=typeof n)throw TypeError("Expected a function");function g(s){var a=l,t=r;return l=r=void 0,m=s,u=n.apply(t,a)}function v(n){var a=n-d,t=n-m;return void 0===d||a>=s||a<0||y&&t>=i}function S(){var n,a,t,o=e();if(v(o))return w(o);k=setTimeout(S,(n=o-d,a=o-m,t=s-n,y?c(t,i-a):t))}function w(n){return(k=void 0,f&&l)?g(n):(l=r=void 0,u)}function b(){var n,a=e(),t=v(a);if(l=arguments,r=this,d=a,t){if(void 0===k)return m=n=d,k=setTimeout(S,s),h?g(n):u;if(y)return clearTimeout(k),k=setTimeout(S,s),g(d)}return void 0===k&&(k=setTimeout(S,s)),u}return s=o(s)||0,t(a)&&(h=!!a.leading,i=(y="maxWait"in a)?p(o(a.maxWait)||0,s):i,f="trailing"in a?!!a.trailing:f),b.cancel=function(){void 0!==k&&clearTimeout(k),m=0,l=d=r=k=void 0},b.flush=function(){return void 0===k?u:w(e())},b}},706627:function(n){n.exports=function(n){var s=typeof n;return null!=n&&("object"==s||"function"==s)}},885365:function(n,s,a){var t=a(573401);n.exports=function(){return t.Date.now()}},123763:function(n,s,a){var t=a(889678),e=a(706627);n.exports=function(n,s,a){var o=!0,p=!0;if("function"!=typeof n)throw TypeError("Expected a function");return e(a)&&(o="leading"in a?!!a.leading:o,p="trailing"in a?!!a.trailing:p),t(n,s,{leading:o,maxWait:s,trailing:p})}},67948:function(n,s,a){var t=a(333897),e=a(706627),o=a(42848),p=0/0,c=/^[-+]0x[0-9a-f]+$/i,l=/^0b[01]+$/i,r=/^0o[0-7]+$/i,i=parseInt;n.exports=function(n){if("number"==typeof n)return n;if(o(n))return p;if(e(n)){var s="function"==typeof n.valueOf?n.valueOf():n;n=e(s)?s+"":s}if("string"!=typeof n)return 0===n?n:+n;n=t(n);var a=l.test(n);return a||r.test(n)?i(n.slice(2),a?2:8):c.test(n)?p:+n}},646599:function(n,s,a){"use strict";var t=a(821557),e=a(446759),o=a(233684),p=(0,t.Z)({createStyledComponent:(0,e.Z)("div",{name:"JoyStack",slot:"Root",overridesResolver:function(n,s){return s.root}}),useThemeProps:function(n){return(0,o.Z)({props:n,name:"JoyStack"})}});s.Z=p},433770:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return t.Z},getStackUtilityClass:function(){return o},stackClasses:function(){return p}});var t=a(646599),e=a(255551);function o(n){return(0,e.d6)("MuiStack",n)}var p=(0,e.sI)("MuiStack",["root"])},53561:function(n,s,a){"use strict";a.d(s,{F:function(){return r},Z:function(){return i}}),a(470079);var t=a(302312),e=a(236017),o=a(173436),p=a(281664),c=a(204381),l=a(735250),r=function(){var n=(0,t.Z)(o.Z);return n[c.Z]||n};function i(n){var s=n.children,a=n.theme,t=o.Z;return a&&(t=(0,p.Z)(c.Z in a?a[c.Z]:a)),(0,l.jsx)(e.Z,{theme:t,themeId:a&&c.Z in a?c.Z:void 0,children:s})}},766170:function(n,s,a){"use strict";a.r(s),a.d(s,{CssVarsProvider:function(){return e.lL},StyledEngineProvider:function(){return i.Z},THEME_ID:function(){return t.Z},ThemeProvider:function(){return c.Z},createGetCssVar:function(){return r.N},extendTheme:function(){return r.Z},getInitColorSchemeScript:function(){return e.JO},shouldSkipGeneratingVar:function(){return o.Z},styled:function(){return p.Z},useColorScheme:function(){return e.tv},useTheme:function(){return c.F},useThemeProps:function(){return l.Z}});var t=a(204381),e=a(513182),o=a(850910),p=a(446759),c=a(53561),l=a(233684),r=a(281664),i=a(103244)},233684:function(n,s,a){"use strict";a.d(s,{Z:function(){return c}});var t=a(778521),e=a(153071),o=a(173436),p=a(204381);function c(n){var s=n.props,a=n.name;return(0,e.Z)({props:s,name:a,defaultTheme:(0,t.Z)((0,t.Z)({},o.Z),{},{components:{}}),themeId:p.Z})}},103244:function(n,s,a){"use strict";a.d(s,{Z:function(){return c}}),a(470079);var t,e=a(595148),o=a(342563),p=a(735250);function c(n){var s=n.injectFirst,a=n.children;return s&&t?(0,p.jsx)(e.C,{value:t,children:a}):a}"object"==typeof document&&(t=(0,o.default)({key:"css",prepend:!0}))},281403:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return A}});var t,e,o={};a.r(o),a.d(o,{demoComponents:function(){return J},demos:function(){return O},docs:function(){return V},srcComponents:function(){return U}});var p=a(778521),c=a(470079),l=a.t(c,2),r=a(652755),i=a(639519),u=a(433770),k=a(766170),d=a(446759),m=a(735250),h=(0,d.Z)("div")(function(n){var s=n.theme;return{display:"flex",flexDirection:"column",gap:s.spacing(.5),padding:s.spacing(3,4),backgroundColor:s.vars.palette.background.surface,borderRadius:s.vars.radius.sm,boxShadow:s.vars.shadow.md}}),y=(0,d.Z)("div")(function(n){var s=n.theme;return(0,p.Z)({},s.typography.h2)}),f=(0,d.Z)("div")(function(n){var s=n.theme;return(0,p.Z)((0,p.Z)({},s.typography["body-sm"]),{},{color:s.vars.palette.text.tertiary})}),g=a(502894),v=(0,g.ZP)("div")(function(n){var s=n.theme;return{display:"flex",flexDirection:"column",gap:s.spacing(.5),padding:s.spacing(3,4),backgroundColor:s.vars.palette.background.surface,borderRadius:s.vars.radius.sm,boxShadow:s.vars.shadow.md}}),S=(0,g.ZP)("div")(function(n){var s=n.theme;return(0,p.Z)({},s.typography.h2)}),w=(0,g.ZP)("div")(function(n){var s=n.theme;return(0,p.Z)((0,p.Z)({},s.typography["body-sm"]),{},{color:s.vars.palette.text.tertiary})}),b=(0,g.ZP)("div")(function(n){var s=n.theme;return(0,p.Z)((0,p.Z)({},s.typography["body-sm"]),{},{borderRadius:"2px",padding:s.spacing(0,1),position:"absolute",color:"#fff",fontSize:"0.75rem",fontWeight:500,backgroundColor:"#ff5252"})}),x=a(577903),C=a(646599),M=a(233684),Z=["value","unit","variant"],T=(0,d.Z)("div",{name:"JoyStat",slot:"root"})(function(n){var s=n.theme,a=n.ownerState;return(0,p.Z)({display:"flex",flexDirection:"column",gap:s.spacing(.5),padding:s.spacing(3,4),backgroundColor:s.vars.palette.background.surface,borderRadius:s.vars.radius.sm,boxShadow:s.vars.shadow.md},"outlined"===a.variant&&{border:"2px solid ".concat(s.palette.divider),boxShadow:"none"})}),j=(0,d.Z)("div",{name:"JoyStat",slot:"value"})(function(n){var s=n.theme;return(0,p.Z)({},s.typography.h2)}),R=(0,d.Z)("div",{name:"JoyStat",slot:"unit"})(function(n){var s=n.theme;return(0,p.Z)((0,p.Z)({},s.typography["body-sm"]),{},{color:s.vars.palette.text.tertiary})}),P=c.forwardRef(function(n,s){var a=(0,M.Z)({props:n,name:"JoyStat"}),t=a.value,e=a.unit,o=a.variant,c=(0,x.Z)(a,Z),l=(0,p.Z)((0,p.Z)({},a),{},{variant:o});return(0,m.jsxs)(T,(0,p.Z)((0,p.Z)({ref:s,ownerState:l},c),{},{children:[(0,m.jsx)(j,{ownerState:l,children:t}),(0,m.jsx)(R,{ownerState:l,children:e})]}))}),V={en:{description:"Learn how to create fully custom components that accept your app's theme.",location:"/docs/data/joy/customization/creating-themed-components/creating-themed-components.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>Creating themed components</h1><p class="description">Learn how to create fully custom components that accept your app\'s theme.</p>\n\n<h2 id="introduction"><a href="#introduction" class="title-link-to-anchor">Introduction<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Joy\xa0UI provides a powerful theming feature that lets you add your own components to the theme and treat them as if they&#39;re built-in components.</p>\n<p>If you are building a component library on top of Joy\xa0UI, you can follow the step-by-step guide below to create a custom component that is themeable across multiple projects.</p>\n<p>Alternatively, you can use the provided <a href="#template">template</a> as a starting point for your component.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>You don&#39;t need to connect your component to the theme if you are only using it in a single project.</p>\n\n</div></aside><h2 id="step-by-step-guide"><a href="#step-by-step-guide" class="title-link-to-anchor">Step-by-step guide<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="step-by-step-guide"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>This guide will walk you through how to build this statistics component, which accepts the app&#39;s theme as though it were a built-in Joy\xa0UI component:</p>\n',{demo:"StatComponent.js",hideToolbar:!0},'<h3 id="1-create-the-component-slots"><a href="#1-create-the-component-slots" class="title-link-to-anchor">1. Create the component slots<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="1-create-the-component-slots"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Slots let you customize each individual element of the component by targeting its respective name in the <a href="/joy-ui/customization/themed-components/#theme-style-overrides">theme&#39;s styleOverrides</a>.</p>\n<p>This statistics component is composed of three slots:</p>\n<ul>\n<li><code>root</code>: the container of the component</li>\n<li><code>value</code>: the number of the statistics</li>\n<li><code>unit</code>: the unit or description of the statistics</li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-success">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#success-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Though you can give these slots any names you prefer, we recommend using <code>root</code> for the outermost container element for consistency with the rest of the library.</p>\n\n</div></aside>',{demo:"StatSlots.js",hideToolbar:!0},'<p>Use the <code>styled</code> API with <code>name</code> and <code>slot</code> parameters to create the slots, as shown below:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StatRoot <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'JoyStat\'</span><span class="token punctuation">,</span> <span class="token comment">// The component name</span>\n  <span class="token literal-property property">slot</span><span class="token operator">:</span> <span class="token string">\'root\'</span><span class="token punctuation">,</span> <span class="token comment">// The slot name</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">\'flex\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">flexDirection</span><span class="token operator">:</span> <span class="token string">\'column\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">gap</span><span class="token operator">:</span> theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">padding</span><span class="token operator">:</span> theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>background<span class="token punctuation">.</span>surface<span class="token punctuation">,</span>\n  <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>radius<span class="token punctuation">.</span>sm<span class="token punctuation">,</span>\n  <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>shadow<span class="token punctuation">.</span>md<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StatValue <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'JoyStat\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">slot</span><span class="token operator">:</span> <span class="token string">\'value\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token operator">...</span>theme<span class="token punctuation">.</span>typography<span class="token punctuation">.</span>h2<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StatUnit <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'JoyStat\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">slot</span><span class="token operator">:</span> <span class="token string">\'unit\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token operator">...</span>theme<span class="token punctuation">.</span>typography<span class="token punctuation">[</span><span class="token string">\'body-sm\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>text<span class="token punctuation">.</span>tertiary<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="2-create-the-component"><a href="#2-create-the-component" class="title-link-to-anchor">2. Create the component<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="2-create-the-component"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Assemble the component using the slots created in the previous step:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// /path/to/Stat.js</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StatRoot <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'JoyStat\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">slot</span><span class="token operator">:</span> <span class="token string">\'root\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>…<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StatValue <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'JoyStat\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">slot</span><span class="token operator">:</span> <span class="token string">\'value\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>…<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StatUnit <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'JoyStat\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">slot</span><span class="token operator">:</span> <span class="token string">\'unit\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>…<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Stat <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">Stat</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> unit<span class="token punctuation">,</span> <span class="token operator">...</span>other <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StatRoot</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>other<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StatValue</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StatValue</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StatUnit</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>unit<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StatUnit</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StatRoot</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Stat<span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>At this point, you&#39;ll be able to apply the theme to the <code>Stat</code> component like this:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> extendTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// the component name defined in the `name` parameter</span>\n    <span class="token comment">// of the `styled` API</span>\n    <span class="token literal-property property">JoyStat</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// the slot name defined in the `slot` and `overridesResolver` parameters</span>\n        <span class="token comment">// of the `styled` API</span>\n        <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">\'#121212\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'#fff\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">unit</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'#888\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="3-style-the-slot-with-ownerstate"><a href="#3-style-the-slot-with-ownerstate" class="title-link-to-anchor">3. Style the slot with ownerState<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="3-style-the-slot-with-ownerstate"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>When you need to style the slot-based props or internal state, wrap them in the <code>ownerState</code> object and pass it to each slot as a prop.\nThe <code>ownerState</code> is a special name that will not spread to the DOM via the <code>styled</code> API.</p>\n<p>Add a <code>variant</code> prop to the <code>Stat</code> component and use it to style the <code>root</code> slot, as shown below:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const Stat = React.forwardRef(function Stat(props, ref) {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   const { value, unit, variant, ...other } = props;\n</span><span class="token prefix inserted">+</span><span class="token line">\n</span><span class="token prefix inserted">+</span><span class="token line">   const ownerState = { ...props, variant };\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   return (\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">      &lt;StatRoot ref={ref} {...other}>\n</span><span class="token prefix deleted">-</span><span class="token line">        &lt;StatValue>{value}&lt;/StatValue>\n</span><span class="token prefix deleted">-</span><span class="token line">        &lt;StatUnit>{unit}&lt;/StatUnit>\n</span><span class="token prefix deleted">-</span><span class="token line">      &lt;/StatRoot>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      &lt;StatRoot ref={ref} ownerState={ownerState} {...other}>\n</span><span class="token prefix inserted">+</span><span class="token line">        &lt;StatValue ownerState={ownerState}>{value}&lt;/StatValue>\n</span><span class="token prefix inserted">+</span><span class="token line">        &lt;StatUnit ownerState={ownerState}>{unit}&lt;/StatUnit>\n</span><span class="token prefix inserted">+</span><span class="token line">      &lt;/StatRoot>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   );\n</span><span class="token prefix unchanged"> </span><span class="token line"> });</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then you can read <code>ownerState</code> in the slot to style it based on the <code>variant</code> prop.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const StatRoot = styled(\'div\', {\n</span><span class="token prefix unchanged"> </span><span class="token line">   name: \'JoyStat\',\n</span><span class="token prefix unchanged"> </span><span class="token line">   slot: \'root\',\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  })(({ theme }) => ({\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  })(({ theme, ownerState }) => ({\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   display: \'flex\',\n</span><span class="token prefix unchanged"> </span><span class="token line">   flexDirection: \'column\',\n</span><span class="token prefix unchanged"> </span><span class="token line">   gap: theme.spacing(0.5),\n</span><span class="token prefix unchanged"> </span><span class="token line">   padding: theme.spacing(3, 4),\n</span><span class="token prefix unchanged"> </span><span class="token line">   backgroundColor: theme.palette.background.paper,\n</span><span class="token prefix unchanged"> </span><span class="token line">   borderRadius: theme.shape.borderRadius,\n</span><span class="token prefix unchanged"> </span><span class="token line">   boxShadow: theme.shadows[2],\n</span><span class="token prefix unchanged"> </span><span class="token line">   letterSpacing: \'-0.025em\',\n</span><span class="token prefix unchanged"> </span><span class="token line">   fontWeight: 600,\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   ...ownerState.variant === \'outlined\' &amp;&amp; {\n</span><span class="token prefix inserted">+</span><span class="token line">    border: `2px solid ${theme.palette.divider}`,\n</span><span class="token prefix inserted">+</span><span class="token line">   },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }));</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="4-support-theme-default-props"><a href="#4-support-theme-default-props" class="title-link-to-anchor">4. Support theme default props<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="4-support-theme-default-props"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To customize your component&#39;s default props for different projects, you need to use the <code>useThemeProps</code> API.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import { useThemeProps } from \'@mui/joy/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const Stat = React.forwardRef(function Stat(props, ref) {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const Stat = React.forwardRef(function Stat(inProps, ref) {\n</span><span class="token prefix inserted">+</span><span class="token line">   const props = useThemeProps({ props: inProps, name: \'JoyStat\' });\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   const { value, unit, ...other } = props;\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   return (\n</span><span class="token prefix unchanged"> </span><span class="token line">     &lt;StatRoot ref={ref} {...other}>\n</span><span class="token prefix unchanged"> </span><span class="token line">       &lt;StatValue>{value}&lt;/StatValue>\n</span><span class="token prefix unchanged"> </span><span class="token line">       &lt;StatUnit>{unit}&lt;/StatUnit>\n</span><span class="token prefix unchanged"> </span><span class="token line">     &lt;/StatRoot>\n</span><span class="token prefix unchanged"> </span><span class="token line">   );\n</span><span class="token prefix unchanged"> </span><span class="token line"> });</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then you can customize the default props of your component like this:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> extendTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyStat</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">defaultProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">variant</span><span class="token operator">:</span> <span class="token string">\'outlined\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="typescript"><a href="#typescript" class="title-link-to-anchor">TypeScript<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>If you use TypeScript, you must create interfaces for the component props and ownerState:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">interface</span> <span class="token class-name">StatProps</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">value</span><span class="token operator">:</span> number <span class="token operator">|</span> string<span class="token punctuation">;</span>\n  <span class="token literal-property property">unit</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n  variant<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">\'outlined\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">StatOwnerState</span> <span class="token keyword">extends</span> <span class="token class-name">StatProps</span> <span class="token punctuation">{</span>\n  <span class="token comment">// …key value pairs for the internal state that you want to style the slot</span>\n  <span class="token comment">// but don\'t want to expose to the users</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then you can use them in the component and slots.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> StatRoot <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'JoyStat\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">slot</span><span class="token operator">:</span> <span class="token string">\'root\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token literal-property property">ownerState</span><span class="token operator">:</span> StatOwnerState <span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme<span class="token punctuation">,</span> ownerState <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">\'flex\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">flexDirection</span><span class="token operator">:</span> <span class="token string">\'column\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">gap</span><span class="token operator">:</span> theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">padding</span><span class="token operator">:</span> theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>background<span class="token punctuation">.</span>paper<span class="token punctuation">,</span>\n  <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>shape<span class="token punctuation">.</span>borderRadius<span class="token punctuation">,</span>\n  <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>shadows<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">letterSpacing</span><span class="token operator">:</span> <span class="token string">\'-0.025em\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>\n  <span class="token comment">// typed-safe access to the `variant` prop</span>\n  <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'outlined\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">2px solid </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>divider<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// …do the same for other slots</span>\n\n<span class="token keyword">const</span> Stat <span class="token operator">=</span> React<span class="token punctuation">.</span>forwardRef<span class="token operator">&lt;</span>HTMLDivElement<span class="token punctuation">,</span> StatProps<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">Stat</span><span class="token punctuation">(</span><span class="token parameter">inProps<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">useThemeProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">props</span><span class="token operator">:</span> inProps<span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'JoyStat\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> unit<span class="token punctuation">,</span> variant<span class="token punctuation">,</span> <span class="token operator">...</span>other <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> ownerState <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>props<span class="token punctuation">,</span> variant <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StatRoot</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span> <span class="token attr-name">ownerState</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ownerState<span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>other<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StatValue</span></span> <span class="token attr-name">ownerState</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ownerState<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StatValue</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StatUnit</span></span> <span class="token attr-name">ownerState</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ownerState<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>unit<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StatUnit</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StatRoot</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Finally, add the Stat component to the theme types.</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token keyword">import</span> <span class="token punctuation">{</span> Theme<span class="token punctuation">,</span> StyleOverrides <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StatProps<span class="token punctuation">,</span> StatOwnerState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'/path/to/Stat\'</span><span class="token punctuation">;</span>\n\ndeclare module <span class="token string">\'@mui/joy/styles\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">Components</span> <span class="token punctuation">{</span>\n    JoyStat<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      defaultProps<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StatProps<span class="token operator">></span><span class="token punctuation">;</span>\n      styleOverrides<span class="token operator">?</span><span class="token operator">:</span> StyleOverrides<span class="token operator">&lt;</span>StatProps<span class="token punctuation">,</span> StatOwnerState<span class="token punctuation">,</span> Theme<span class="token operator">></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<hr>\n<h2 id="template"><a href="#template" class="title-link-to-anchor">Template<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="template"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>This template is the final product of the step-by-step guide above, demonstrating how to build a custom component that can be styled with the theme as if it was a built-in component.</p>\n',{demo:"StatFullTemplate.js",defaultCodeOpen:!0}],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Step-by-step guide",level:2,hash:"step-by-step-guide",children:[{text:"1. Create the component slots",level:3,hash:"1-create-the-component-slots"},{text:"2. Create the component",level:3,hash:"2-create-the-component"},{text:"3. Style the slot with ownerState",level:3,hash:"3-style-the-slot-with-ownerstate"},{text:"4. Support theme default props",level:3,hash:"4-support-theme-default-props"}]},{text:"TypeScript",level:2,hash:"typescript",children:[]},{text:"Template",level:2,hash:"template",children:[]}],title:"Creating themed components",headers:{components:[]}}},O={"StatComponent.js":{module:"./StatComponent.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/joy/styles';\n\nconst StatRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(0.5),\n  padding: theme.spacing(3, 4),\n  backgroundColor: theme.vars.palette.background.surface,\n  borderRadius: theme.vars.radius.sm,\n  boxShadow: theme.vars.shadow.md,\n}));\n\nconst StatValue = styled('div')(({ theme }) => ({\n  ...theme.typography.h2,\n}));\n\nconst StatUnit = styled('div')(({ theme }) => ({\n  ...theme.typography['body-sm'],\n  color: theme.vars.palette.text.tertiary,\n}));\n\nexport default function StatComponent() {\n  return (\n    <StatRoot>\n      <StatValue>19,267</StatValue>\n      <StatUnit>Active users / month</StatUnit>\n    </StatRoot>\n  );\n}\n"},"StatSlots.js":{module:"./StatSlots.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst StatRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(0.5),\n  padding: theme.spacing(3, 4),\n  backgroundColor: theme.vars.palette.background.surface,\n  borderRadius: theme.vars.radius.sm,\n  boxShadow: theme.vars.shadow.md,\n}));\n\nconst StatValue = styled('div')(({ theme }) => ({\n  ...theme.typography.h2,\n}));\n\nconst StatUnit = styled('div')(({ theme }) => ({\n  ...theme.typography['body-sm'],\n  color: theme.vars.palette.text.tertiary,\n}));\n\nconst Label = styled('div')(({ theme }) => ({\n  ...theme.typography['body-sm'],\n  borderRadius: '2px',\n  padding: theme.spacing(0, 1),\n  position: 'absolute',\n  color: '#fff',\n  fontSize: '0.75rem',\n  fontWeight: 500,\n  backgroundColor: '#ff5252',\n}));\n\nexport default function StatSlots() {\n  return (\n    <StatRoot\n      sx={{ outline: '1px solid #ff5252', outlineOffset: 4, position: 'relative' }}\n    >\n      <StatValue sx={{ outline: '1px solid #ff5252', position: 'relative' }}>\n        19,267\n        <Label\n          sx={{\n            right: 0,\n            top: 4,\n            transform: 'translateX(100%)',\n          }}\n        >\n          value\n        </Label>\n      </StatValue>\n      <StatUnit sx={{ outline: '1px solid #ff5252', position: 'relative' }}>\n        Active users / month\n        <Label\n          sx={{\n            right: 0,\n            top: 2,\n            transform: 'translateX(100%)',\n          }}\n        >\n          unit\n        </Label>\n      </StatUnit>\n      <Label\n        sx={{\n          left: -4,\n          top: 4,\n          transform: 'translateX(-100%)',\n        }}\n      >\n        root\n      </Label>\n    </StatRoot>\n  );\n}\n"},"StatFullTemplate.js":{module:"./StatFullTemplate.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/joy/Stack';\nimport { styled, useThemeProps } from '@mui/joy/styles';\n\nconst StatRoot = styled('div', {\n  name: 'JoyStat',\n  slot: 'root',\n})(({ theme, ownerState }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(0.5),\n  padding: theme.spacing(3, 4),\n  backgroundColor: theme.vars.palette.background.surface,\n  borderRadius: theme.vars.radius.sm,\n  boxShadow: theme.vars.shadow.md,\n  ...(ownerState.variant === 'outlined' && {\n    border: `2px solid ${theme.palette.divider}`,\n    boxShadow: 'none',\n  }),\n}));\n\nconst StatValue = styled('div', {\n  name: 'JoyStat',\n  slot: 'value',\n})(({ theme }) => ({\n  ...theme.typography.h2,\n}));\n\nconst StatUnit = styled('div', {\n  name: 'JoyStat',\n  slot: 'unit',\n})(({ theme }) => ({\n  ...theme.typography['body-sm'],\n  color: theme.vars.palette.text.tertiary,\n}));\n\nconst Stat = React.forwardRef(function Stat(inProps, ref) {\n  const props = useThemeProps({ props: inProps, name: 'JoyStat' });\n  const { value, unit, variant, ...other } = props;\n\n  const ownerState = { ...props, variant };\n\n  return (\n    <StatRoot ref={ref} ownerState={ownerState} {...other}>\n      <StatValue ownerState={ownerState}>{value}</StatValue>\n      <StatUnit ownerState={ownerState}>{unit}</StatUnit>\n    </StatRoot>\n  );\n});\n\nStat.propTypes = {\n  unit: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  variant: PropTypes.oneOf(['outlined']),\n};\n\nexport default function StatFullTemplate() {\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <Stat value=\"1.9M\" unit=\"Favorites\" />\n      <Stat value=\"5.1M\" unit=\"Views\" variant=\"outlined\" />\n    </Stack>\n  );\n}\n",jsxPreview:'<Stat value="1.9M" unit="Favorites" />\n<Stat value="5.1M" unit="Views" variant="outlined" />',moduleTS:"./StatFullTemplate.js",rawTS:"import * as React from 'react';\nimport Stack from '@mui/joy/Stack';\nimport { styled, useThemeProps } from '@mui/joy/styles';\n\nexport interface StatProps {\n  value: number | string;\n  unit: string;\n  variant?: 'outlined';\n}\n\ninterface StatOwnerState extends StatProps {\n  // …key value pairs for the internal state that you want to style the slot\n  // but don't want to expose to the users\n}\n\nconst StatRoot = styled('div', {\n  name: 'JoyStat',\n  slot: 'root',\n})<{ ownerState: StatOwnerState }>(({ theme, ownerState }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(0.5),\n  padding: theme.spacing(3, 4),\n  backgroundColor: theme.vars.palette.background.surface,\n  borderRadius: theme.vars.radius.sm,\n  boxShadow: theme.vars.shadow.md,\n  ...(ownerState.variant === 'outlined' && {\n    border: `2px solid ${theme.palette.divider}`,\n    boxShadow: 'none',\n  }),\n}));\n\nconst StatValue = styled('div', {\n  name: 'JoyStat',\n  slot: 'value',\n})<{ ownerState: StatOwnerState }>(({ theme }) => ({\n  ...theme.typography.h2,\n}));\n\nconst StatUnit = styled('div', {\n  name: 'JoyStat',\n  slot: 'unit',\n})<{ ownerState: StatOwnerState }>(({ theme }) => ({\n  ...theme.typography['body-sm'],\n  color: theme.vars.palette.text.tertiary,\n}));\n\nconst Stat = React.forwardRef<HTMLDivElement, StatProps>(\n  function Stat(inProps, ref) {\n    const props = useThemeProps({ props: inProps, name: 'JoyStat' });\n    const { value, unit, variant, ...other } = props;\n\n    const ownerState = { ...props, variant };\n\n    return (\n      <StatRoot ref={ref} ownerState={ownerState} {...other}>\n        <StatValue ownerState={ownerState}>{value}</StatValue>\n        <StatUnit ownerState={ownerState}>{unit}</StatUnit>\n      </StatRoot>\n    );\n  },\n);\n\nexport default function StatFullTemplate() {\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <Stat value=\"1.9M\" unit=\"Favorites\" />\n      <Stat value=\"5.1M\" unit=\"Views\" variant=\"outlined\" />\n    </Stack>\n  );\n}\n"}};O.scope={process:{},import:{react:l,"prop-types":i,"@mui/joy/Stack":u,"@mui/joy/styles":k}};var J={"./StatComponent.js":function(){return t||(t=(0,m.jsxs)(h,{children:[(0,m.jsx)(y,{children:"19,267"}),(0,m.jsx)(f,{children:"Active users / month"})]}))},"./StatSlots.js":function(){return(0,m.jsxs)(v,{sx:{outline:"1px solid #ff5252",outlineOffset:4,position:"relative"},children:[(0,m.jsxs)(S,{sx:{outline:"1px solid #ff5252",position:"relative"},children:["19,267",(0,m.jsx)(b,{sx:{right:0,top:4,transform:"translateX(100%)"},children:"value"})]}),(0,m.jsxs)(w,{sx:{outline:"1px solid #ff5252",position:"relative"},children:["Active users / month",(0,m.jsx)(b,{sx:{right:0,top:2,transform:"translateX(100%)"},children:"unit"})]}),(0,m.jsx)(b,{sx:{left:-4,top:4,transform:"translateX(-100%)"},children:"root"})]})},"./StatFullTemplate.js":function(){return e||(e=(0,m.jsxs)(C.Z,{direction:"row",spacing:2,children:[(0,m.jsx)(P,{value:"1.9M",unit:"Favorites"}),(0,m.jsx)(P,{value:"5.1M",unit:"Views",variant:"outlined"})]}))}},U={};function A(){return(0,m.jsx)(r.Z,(0,p.Z)({},o))}},652755:function(n,s,a){"use strict";a.d(s,{Z:function(){return S}});var t,e=a(778521),o=a(470079),p=a(639519),c=a.n(p),l=a(389136),r=a(302312),i=a(513182),u=a(597683),k=a(42141),d=a(162119),m=a(871379),h=a(775196),y=a(694366),f=a(74077),g=a(735250);function v(n){var s=n.mode,a=(0,i.tv)().setMode;return o.useEffect(function(){a(s)},[s,a]),null}function S(n){var s=(0,r.Z)(),a=(0,l.useRouter)(),p=(0,k.ln)(a.asPath).canonicalAs,c=n.disableAd,S=void 0!==c&&c,w=n.disableToc,b=n.disableCssVarsProvider,x=n.demos,C=void 0===x?{}:x,M=n.docs,Z=n.demoComponents,T=n.srcComponents,j=M[(0,m.fO)()]||M.en,R=p.startsWith("/joy-ui/")&&!(void 0!==b&&b),P=R?i.lL:o.Fragment,V=R?h.BrandingProvider:o.Fragment,O=(0,e.Z)({},R&&{mode:s.palette.mode});return(0,g.jsxs)(d.Z,{cardOptions:{description:j.headers.cardDescription,title:j.headers.cardTitle},description:j.description,disableAd:S,disableToc:void 0!==w&&w,location:j.location,title:j.title,toc:j.toc,children:[S?null:t||(t=(0,g.jsx)(h.BrandingProvider,{children:(0,g.jsx)(f.Z,{children:(0,g.jsx)(y.ZP,{})})})),(0,g.jsxs)(P,{children:[R&&(0,g.jsx)(v,{mode:s.palette.mode}),j.rendered.map(function(n,a){return(0,g.jsx)(u.Z,{demoComponents:Z,demos:C,disableAd:S,localizedDoc:j,renderedMarkdownOrDemo:n,srcComponents:T,theme:s,WrapperComponent:V,wrapperProps:O},"demos-section-".concat(a))})]})]})}v.propTypes={mode:c().oneOf(["light","dark"])}},466401:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/customization/creating-themed-components",function(){return a(281403)}])},884835:function(n,s,a){"use strict";var t=a(311596);function e(){}function o(){}o.resetWarningCache=e,n.exports=function(){function n(n,s,a,e,o,p){if(p!==t){var c=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function s(){return n}n.isRequired=n;var a={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:s,element:n,elementType:n,instanceOf:s,node:n,objectOf:s,oneOf:s,oneOfType:s,shape:s,exact:s,checkPropTypes:o,resetWarningCache:e};return a.PropTypes=a,a}},639519:function(n,s,a){n.exports=a(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}},function(n){n.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,92888,40179],function(){return n(n.s=466401)}),_N_E=n.O()}]);