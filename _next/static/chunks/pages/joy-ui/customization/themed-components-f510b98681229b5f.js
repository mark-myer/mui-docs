(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[82709,39519],{333897:function(n,s,a){var t=a(915012),e=/^\s+/;n.exports=function(n){return n?n.slice(0,t(n)+1).replace(e,""):n}},915012:function(n){var s=/\s/;n.exports=function(n){for(var a=n.length;a--&&s.test(n.charAt(a)););return a}},889678:function(n,s,a){var t=a(706627),e=a(885365),o=a(67948),p=Math.max,c=Math.min;n.exports=function(n,s,a){var l,i,r,u,k,d,y=0,m=!1,h=!1,g=!0;if("function"!=typeof n)throw TypeError("Expected a function");function v(s){var a=l,t=i;return l=i=void 0,y=s,u=n.apply(t,a)}function f(n){var a=n-d,t=n-y;return void 0===d||a>=s||a<0||h&&t>=r}function b(){var n,a,t,o=e();if(f(o))return C(o);k=setTimeout(b,(n=o-d,a=o-y,t=s-n,h?c(t,r-a):t))}function C(n){return(k=void 0,g&&l)?v(n):(l=i=void 0,u)}function x(){var n,a=e(),t=f(a);if(l=arguments,i=this,d=a,t){if(void 0===k)return y=n=d,k=setTimeout(b,s),m?v(n):u;if(h)return clearTimeout(k),k=setTimeout(b,s),v(d)}return void 0===k&&(k=setTimeout(b,s)),u}return s=o(s)||0,t(a)&&(m=!!a.leading,r=(h="maxWait"in a)?p(o(a.maxWait)||0,s):r,g="trailing"in a?!!a.trailing:g),x.cancel=function(){void 0!==k&&clearTimeout(k),y=0,l=d=i=k=void 0},x.flush=function(){return void 0===k?u:C(e())},x}},706627:function(n){n.exports=function(n){var s=typeof n;return null!=n&&("object"==s||"function"==s)}},885365:function(n,s,a){var t=a(573401);n.exports=function(){return t.Date.now()}},123763:function(n,s,a){var t=a(889678),e=a(706627);n.exports=function(n,s,a){var o=!0,p=!0;if("function"!=typeof n)throw TypeError("Expected a function");return e(a)&&(o="leading"in a?!!a.leading:o,p="trailing"in a?!!a.trailing:p),t(n,s,{leading:o,maxWait:s,trailing:p})}},67948:function(n,s,a){var t=a(333897),e=a(706627),o=a(42848),p=0/0,c=/^[-+]0x[0-9a-f]+$/i,l=/^0b[01]+$/i,i=/^0o[0-7]+$/i,r=parseInt;n.exports=function(n){if("number"==typeof n)return n;if(o(n))return p;if(e(n)){var s="function"==typeof n.valueOf?n.valueOf():n;n=e(s)?s+"":s}if("string"!=typeof n)return 0===n?n:+n;n=t(n);var a=l.test(n);return a||i.test(n)?r(n.slice(2),a?2:8):c.test(n)?p:+n}},379774:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return u}});var t={};a.r(t),a.d(t,{demoComponents:function(){return l},demos:function(){return c},docs:function(){return p},srcComponents:function(){return i}});var e=a(778521);a(470079);var o=a(652755),p={en:{description:"Learn how to apply custom styles to components at the theme level.",location:"/docs/data/joy/customization/themed-components/themed-components.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>Themed components</h1><p class="description">Learn how to apply custom styles to components at the theme level.</p>\n\n<!-- This page should answer: -->\n<!-- How to customize a component -->\n<!-- How to target specific prop -->\n\n<h2 id="component-identifier"><a href="#component-identifier" class="title-link-to-anchor">Component identifier<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="component-identifier"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>If you&#39;ve used <a href="/material-ui/customization/theme-components/">Material\xa0UI</a> before, you are probably familiar with this technique.\nTo customize a specific component in the theme, specify the component identifier (<code>Joy{ComponentImportName}</code>) inside the <code>components</code> node.</p>\n<ul>\n<li>Use <code>defaultProps</code> to change the default React props of the component.</li>\n<li>Use <code>styleOverrides</code> to apply styles to each component slots.<ul>\n<li>Every Joy\xa0UI component contains the <code>root</code> slot.</li>\n</ul>\n</li>\n</ul>\n<p>Visit the <a href="https://github.com/mui/material-ui/blob/v6.0.0-alpha.10/packages/mui-joy/src/styles/components.d.ts"><code>components.d.ts</code></a> file to see all component identifiers.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> CssVarsProvider<span class="token punctuation">,</span> extendTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">defaultProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token string">\'sm\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token string">\'4px\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="theme-default-props"><a href="#theme-default-props" class="title-link-to-anchor">Theme default props<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="theme-default-props"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The values specified in the theme as <code>defaultProps</code> affect all instances of the component:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyIconButton</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">defaultProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">variant</span><span class="token operator">:</span> <span class="token string">\'outlined\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'neutral\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// This is the same as:</span>\n<span class="token comment">// &lt;IconButton variant="outlined" color="neutral"></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconButton</span></span><span class="token punctuation">></span></span><span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">IconButton</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="theme-style-overrides"><a href="#theme-style-overrides" class="title-link-to-anchor">Theme style overrides<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="theme-style-overrides"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="change-styles-based-on-props"><a href="#change-styles-based-on-props" class="title-link-to-anchor">Change styles based on props<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="change-styles-based-on-props"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To change the styles of a given prop, use a callback as value to the style overrides.\nThe argument contains <code>theme</code> and <code>ownerState</code> (props).</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// `ownerState` contains the component props and internal state</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token string">\'sm\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>radius<span class="token punctuation">.</span>xs<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>We recommend to use CSS variables from <code>theme.vars.*</code> because it has a better debugging experience and also is more performant in some cases.</p>\n<p>The styles can also contain any CSS selectors (support nested selectors), as such:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'solid\'</span> <span class="token operator">&amp;&amp;</span>\n            ownerState<span class="token punctuation">.</span>clickable <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'rgba(255 255 255 / 0.72)\'</span><span class="token punctuation">,</span>\n              <span class="token string-property property">\'&amp;:hover\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'#fff\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-styles-based-on-state"><a href="#change-styles-based-on-state" class="title-link-to-anchor">Change styles based on state<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="change-styles-based-on-state"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Joy\xa0UI components increase the CSS specificity of the styles when they are in a given state such as <code>selected</code>, <code>disabled</code>, <code>focusVisible</code>, etc.</p>\n<p>To override styles of a specific state, import the component&#39;s class selector using its name in camel-case followed by <code>Classes</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> listItemButtonClasses <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/joy/ListItemButton\'</span><span class="token punctuation">;</span>\n\n<span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyListItemButton</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&amp;.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>listItemButtonClasses<span class="token punctuation">.</span>selected<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'rgba(255 255 255 / 0.7)\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The available states are: <code>active</code>, <code>checked</code>, <code>completed</code>, <code>disabled</code>, <code>error</code>, <code>expanded</code>, <code>focused</code>, <code>focusVisible</code>, <code>readOnly</code>, <code>required</code>, <code>selected</code>.</p>\n<h3 id="extend-colors"><a href="#extend-colors" class="title-link-to-anchor">Extend colors<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="extend-colors"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The following code snippet illustrates how to provide additional colors to a component beyond <code>primary</code>, <code>success</code>, <code>info</code>, <code>danger</code>, <code>neutral</code>, and <code>warning</code>.</p>\n<p>Note that by creating new colors, you&#39;re automatically opting out of the <a href="/joy-ui/main-features/global-variants/">global variant feature</a>, which gives you fine-grained control over CSS properties like <code>color</code>, <code>background</code>, and <code>border</code>.</p>\n<p>The example below extends the Button colors to include <code>secondary</code> value:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyButton</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">\'secondary\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>text<span class="token punctuation">.</span>secondary<span class="token punctuation">,</span>\n            <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>background<span class="token punctuation">.</span>level1<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Once these values are defined as above, you can make use of them directly on instances of the Button component:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Secondary color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tertiary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Tertiary color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>TypeScript</h4><p>Module augmentation is required to pass the values to the <code>color</code> prop of the component.</p>\n<p>The interface format is <code>{ComponentName}PropsColorOverrides</code>, which is the same for all Joy\xa0UI components:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token comment">// This part could be declared in your theme file</span>\ndeclare module <span class="token string">\'@mui/joy/Button\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">ButtonPropsColorOverrides</span> <span class="token punctuation">{</span>\n    secondary<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    tertiary<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// typed-safe</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>secondary<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tertiary<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="extend-sizes"><a href="#extend-sizes" class="title-link-to-anchor">Extend sizes<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="extend-sizes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The following code snippet illustrates how to provide additional sizes to a component beyond <code>sm</code>, <code>md</code>, and <code>lg</code>.\nWe recommend following the established &quot;t-shirt size&quot; naming convention (for example <code>xs</code>, <code>xl</code>, <code>xxl</code>, etc.) to maintain consistency with all the other props.</p>\n<p>The example below extends the Button sizes to include <code>xs</code> and <code>xl</code> values:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyButton</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token string">\'xs\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n            <span class="token string-property property">\'--Icon-fontSize\'</span><span class="token operator">:</span> <span class="token string">\'1rem\'</span><span class="token punctuation">,</span>\n            <span class="token string-property property">\'--Button-gap\'</span><span class="token operator">:</span> <span class="token string">\'0.25rem\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">minHeight</span><span class="token operator">:</span> <span class="token string">\'var(--Button-minHeight, 1.75rem)\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">fontSize</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>fontSize<span class="token punctuation">.</span>xs<span class="token punctuation">,</span>\n            <span class="token literal-property property">paddingBlock</span><span class="token operator">:</span> <span class="token string">\'2px\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">paddingInline</span><span class="token operator">:</span> <span class="token string">\'0.5rem\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token string">\'xl\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n            <span class="token string-property property">\'--Icon-fontSize\'</span><span class="token operator">:</span> <span class="token string">\'2rem\'</span><span class="token punctuation">,</span>\n            <span class="token string-property property">\'--Button-gap\'</span><span class="token operator">:</span> <span class="token string">\'1rem\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">minHeight</span><span class="token operator">:</span> <span class="token string">\'var(--Button-minHeight, 4rem)\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">fontSize</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>fontSize<span class="token punctuation">.</span>xl<span class="token punctuation">,</span>\n            <span class="token literal-property property">paddingBlock</span><span class="token operator">:</span> <span class="token string">\'0.5rem\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">paddingInline</span><span class="token operator">:</span> <span class="token string">\'2rem\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Once these values are defined as above, you can make use of them directly on instances of the Button component:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Extra small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Extra large<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The properties used for extending sizes should only relate to the density or the dimensions of the component.\nTo learn how to extend variant properties, check out the <a href="#extend-variants">Extend variants</a> section in this document.</p>\n<h4>TypeScript</h4><p>Module augmentation is required to pass the values to the <code>size</code> prop of the component.</p>\n<p>The interface format is <code>{ComponentName}PropsSizeOverrides</code>, which is the same for all Joy\xa0UI components:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token comment">// This part could be declared in your theme file</span>\ndeclare module <span class="token string">\'@mui/joy/Button\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">ButtonPropsSizeOverrides</span> <span class="token punctuation">{</span>\n    xs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    xl<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// typed-safe</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xs<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xl<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="extend-variants"><a href="#extend-variants" class="title-link-to-anchor">Extend variants<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="extend-variants"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The following code snippet shows how to extend component variants for color properties.\nNote that by creating new variants, you&#39;re automatically opting out of the <a href="/joy-ui/main-features/global-variants/">global variant feature</a>, which gives you fine-grained control over CSS properties like <code>color</code>, <code>background</code>, and <code>border</code>.</p>\n<p>This example extends the Sheet variant to include a custom value named <code>glass</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoySheet</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'glass\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>text<span class="token punctuation">.</span>primary<span class="token punctuation">,</span>\n            <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">\'rgba(255, 255, 255, 0.14)\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">backdropFilter</span><span class="token operator">:</span> <span class="token string">\'blur(5px)\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token string">\'1px solid rgba(255, 255, 255, 0.3)\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> <span class="token string">\'0 4px 30px rgba(0, 0, 0, 0.1)\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Once the value is defined as above, you can make use of it directly on instances of the Sheet component:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Sheet</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>glass<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Glassmorphism<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Sheet</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>TypeScript</h4><p>Module augmentation is required to pass the values to the <code>variant</code> prop of the component.</p>\n<p>The interface format is <code>{ComponentName}PropsSizeOverrides</code>, which is the same for all Joy\xa0UI components:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token comment">// This part could be declared in your theme file</span>\ndeclare module <span class="token string">\'@mui/joy/Sheet\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">SheetPropsVariantOverrides</span> <span class="token punctuation">{</span>\n    glass<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// typed-safe</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Sheet</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>glass<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="different-styles-per-mode"><a href="#different-styles-per-mode" class="title-link-to-anchor">Different styles per mode<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="different-styles-per-mode"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>To specify different values than the ones defined in the default theme for each mode (light and dark), use the CSS attribute selector.</p>\n<p>Joy\xa0UI attaches a <code>data-*</code> attribute with the current color scheme to the DOM (HTML by default).\nYou can use the <code>theme.getColorSchemeSelector</code> utility to change the component styles.</p>\n<p>The example below illustrate how you&#39;d change the intensity of the <code>boxShadow</code> token in the light mode while removing it completely in the dark mode:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token comment">// for the default color scheme (light)</span>\n          <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>shadow<span class="token punctuation">.</span>sm<span class="token punctuation">,</span>\n\n          <span class="token comment">// the result is `[data-joy-color-scheme="dark"] &amp;`</span>\n          <span class="token punctuation">[</span>theme<span class="token punctuation">.</span><span class="token function">getColorSchemeSelector</span><span class="token punctuation">(</span><span class="token string">\'dark\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>If you have custom color schemes defined, this approach also works.\nHowever, note that it creates additional CSS specificity which might be cumbersome when the parent component wants to override their children styles.</p>\n<aside class="MuiCallout-root MuiCallout-error">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#error-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>We don&#39;t recommend using the conditional operator to switch between values as it is not performant.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// \uD83D\uDEAB Don\'t do this</span>\n<span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">JoyChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token comment">// styles will be created for both color schemes which is not performant</span>\n          <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>mode <span class="token operator">===</span> <span class="token string">\'dark\'</span> <span class="token operator">?</span> <span class="token string">\'none\'</span> <span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>shadow<span class="token punctuation">.</span>sm<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n\n</div></aside><!-- ## Examples -->\n'],toc:[{text:"Component identifier",level:2,hash:"component-identifier",children:[]},{text:"Theme default props",level:2,hash:"theme-default-props",children:[]},{text:"Theme style overrides",level:2,hash:"theme-style-overrides",children:[{text:"Change styles based on props",level:3,hash:"change-styles-based-on-props"},{text:"Change styles based on state",level:3,hash:"change-styles-based-on-state"},{text:"Extend colors",level:3,hash:"extend-colors"},{text:"Extend sizes",level:3,hash:"extend-sizes"},{text:"Extend variants",level:3,hash:"extend-variants"},{text:"Different styles per mode",level:3,hash:"different-styles-per-mode"}]}],title:"Themed components",headers:{components:[]}}},c={};c.scope={process:{},import:{}};var l={},i={},r=a(735250);function u(){return(0,r.jsx)(o.Z,(0,e.Z)({},t))}},652755:function(n,s,a){"use strict";a.d(s,{Z:function(){return b}});var t,e=a(778521),o=a(470079),p=a(639519),c=a.n(p),l=a(389136),i=a(302312),r=a(513182),u=a(597683),k=a(42141),d=a(162119),y=a(871379),m=a(775196),h=a(694366),g=a(74077),v=a(735250);function f(n){var s=n.mode,a=(0,r.tv)().setMode;return o.useEffect(function(){a(s)},[s,a]),null}function b(n){var s=(0,i.Z)(),a=(0,l.useRouter)(),p=(0,k.ln)(a.asPath).canonicalAs,c=n.disableAd,b=void 0!==c&&c,C=n.disableToc,x=n.disableCssVarsProvider,w=n.demos,M=void 0===w?{}:w,T=n.docs,S=n.demoComponents,B=n.srcComponents,z=T[(0,y.fO)()]||T.en,O=p.startsWith("/joy-ui/")&&!(void 0!==x&&x),j=O?r.lL:o.Fragment,P=O?m.BrandingProvider:o.Fragment,H=(0,e.Z)({},O&&{mode:s.palette.mode});return(0,v.jsxs)(d.Z,{cardOptions:{description:z.headers.cardDescription,title:z.headers.cardTitle},description:z.description,disableAd:b,disableToc:void 0!==C&&C,location:z.location,title:z.title,toc:z.toc,children:[b?null:t||(t=(0,v.jsx)(m.BrandingProvider,{children:(0,v.jsx)(g.Z,{children:(0,v.jsx)(h.ZP,{})})})),(0,v.jsxs)(j,{children:[O&&(0,v.jsx)(f,{mode:s.palette.mode}),z.rendered.map(function(n,a){return(0,v.jsx)(u.Z,{demoComponents:S,demos:M,disableAd:b,localizedDoc:z,renderedMarkdownOrDemo:n,srcComponents:B,theme:s,WrapperComponent:P,wrapperProps:H},"demos-section-".concat(a))})]})]})}f.propTypes={mode:c().oneOf(["light","dark"])}},630631:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/customization/themed-components",function(){return a(379774)}])},884835:function(n,s,a){"use strict";var t=a(311596);function e(){}function o(){}o.resetWarningCache=e,n.exports=function(){function n(n,s,a,e,o,p){if(p!==t){var c=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function s(){return n}n.isRequired=n;var a={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:s,element:n,elementType:n,instanceOf:s,node:n,objectOf:s,oneOf:s,oneOfType:s,shape:s,exact:s,checkPropTypes:o,resetWarningCache:e};return a.PropTypes=a,a}},639519:function(n,s,a){n.exports=a(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}},function(n){n.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,92888,40179],function(){return n(n.s=630631)}),_N_E=n.O()}]);