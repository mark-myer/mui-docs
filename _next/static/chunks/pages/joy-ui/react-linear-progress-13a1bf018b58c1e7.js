(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[23085],{366934:function(e,n,r){"use strict";var s,o,a=r(863363),t=r(577903),i=r(778521),l=r(564376),c=r(470079),u=r(653048),d=r(538941),p=r(306029),m=r(616887),g=r(446759),h=r(233684),v=r(989525),f=r(718428),P=r(395141),x=r(735250),L=["children","className","component","color","size","variant","thickness","determinate","value","style","slots","slotProps"],k=(0,m.keyframes)(s||(s=(0,l.Z)(["\n  0% {\n    left: var(--_LinearProgress-progressInset);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n\n  25% {\n    width: var(--LinearProgress-progressMaxWidth);\n  }\n\n  50% {\n    left: var(--_LinearProgress-progressLeft);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n\n  75% {\n    width: var(--LinearProgress-progressMaxWidth);\n  }\n\n  100% {\n    left: var(--_LinearProgress-progressInset);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n"]))),y=function(e){var n=e.determinate,r=e.color,s=e.variant,o=e.size,a={root:["root",n&&"determinate",r&&"color".concat((0,d.Z)(r)),s&&"variant".concat((0,d.Z)(s)),o&&"size".concat((0,d.Z)(o))]};return(0,p.Z)(a,v.E,{})},b=(0,g.Z)("div",{name:"JoyLinearProgress",slot:"Root",overridesResolver:function(e,n){return n.root}})(function(e){var n,r,s,o,a=e.ownerState,t=e.theme;return(0,i.Z)((0,i.Z)((0,i.Z)((0,i.Z)((0,i.Z)((0,i.Z)((0,i.Z)((0,i.Z)({"--LinearProgress-radius":"var(--LinearProgress-thickness)","--LinearProgress-progressThickness":"var(--LinearProgress-thickness)","--LinearProgress-progressRadius":"max(var(--LinearProgress-radius) - var(--_LinearProgress-padding), min(var(--_LinearProgress-padding) / 2, var(--LinearProgress-radius) / 2))"},"sm"===a.size&&{"--LinearProgress-thickness":"4px"}),"md"===a.size&&{"--LinearProgress-thickness":"6px"}),"lg"===a.size&&{"--LinearProgress-thickness":"8px"}),a.thickness&&{"--LinearProgress-thickness":"".concat(a.thickness,"px")}),!a.determinate&&{"--LinearProgress-progressMinWidth":"calc(var(--LinearProgress-percent) * 1% / 2)","--LinearProgress-progressMaxWidth":"calc(var(--LinearProgress-percent) * 1%)","--_LinearProgress-progressLeft":"calc(100% - var(--LinearProgress-progressMinWidth) - var(--_LinearProgress-progressInset))","--_LinearProgress-progressInset":"calc(var(--LinearProgress-thickness) / 2 - var(--LinearProgress-progressThickness) / 2)"}),{},{minBlockSize:"var(--LinearProgress-thickness)",boxSizing:"border-box",borderRadius:"var(--LinearProgress-radius)",display:"flex",justifyContent:"center",alignItems:"center",flex:1,padding:"var(--_LinearProgress-padding)",position:"relative"},null===(n=t.variants[a.variant])||void 0===n?void 0:n[a.color]),{},{"--_LinearProgress-padding":"max((var(--LinearProgress-thickness) - 2 * var(--variant-borderWidth, 0px) - var(--LinearProgress-progressThickness)) / 2, 0px)","&::before":{content:'""',display:"block",boxSizing:"inherit",blockSize:"var(--LinearProgress-progressThickness)",borderRadius:"var(--LinearProgress-progressRadius)",backgroundColor:"currentColor",color:"inherit",position:"absolute"}},"soft"===a.variant&&{backgroundColor:t.variants.soft.neutral.backgroundColor,color:null===(r=t.variants.solid)||void 0===r?void 0:r[a.color].backgroundColor}),"solid"===a.variant&&{backgroundColor:null===(s=t.variants.softHover)||void 0===s?void 0:s[a.color].backgroundColor,color:null===(o=t.variants.solid)||void 0===o?void 0:o[a.color].backgroundColor})},function(e){return e.ownerState.determinate?{"&::before":{left:"var(--_LinearProgress-padding)",inlineSize:"calc(var(--LinearProgress-percent) * 1% - 2 * var(--_LinearProgress-padding))"}}:(0,m.css)(o||(o=(0,l.Z)(["\n          &::before {\n            animation: ","\n              var(--LinearProgress-circulation, 2.5s ease-in-out 0s infinite normal none running);\n          }\n        "])),k)},function(e){var n=e.ownerState,r=e.theme,s=(0,P.V)({theme:r,ownerState:n},["borderRadius","height"]),o=s.borderRadius,a=s.height;return(0,i.Z)((0,i.Z)({},void 0!==o&&{"--LinearProgress-radius":o}),void 0!==a&&{"--LinearProgress-thickness":a})}),j=c.forwardRef(function(e,n){var r=(0,h.Z)({props:e,name:"JoyLinearProgress"}),s=r.children,o=r.className,l=r.component,c=r.color,d=r.size,p=r.variant,m=r.thickness,g=r.determinate,v=void 0!==g&&g,P=r.value,k=void 0===P?v?0:25:P,j=r.style,w=r.slots,C=r.slotProps,S=(0,t.Z)(r,L),Z=(0,i.Z)((0,i.Z)({},r),{},{component:l,color:void 0===c?"primary":c,size:void 0===d?"md":d,variant:void 0===p?"soft":p,thickness:m,value:k,determinate:v,instanceSize:e.size}),T=y(Z),R=(0,i.Z)((0,i.Z)({},S),{},{component:l,slots:void 0===w?{}:w,slotProps:void 0===C?{}:C}),z=(0,f.Z)("root",{ref:n,className:(0,u.default)(T.root,o),elementType:b,externalForwardedProps:R,ownerState:Z,additionalProps:(0,i.Z)({as:l,role:"progressbar",style:(0,i.Z)((0,i.Z)({},{"--LinearProgress-percent":k}),j)},"number"==typeof k&&v&&{"aria-valuenow":Math.round(k)})}),V=(0,a.Z)(z,2),M=V[0],B=V[1];return(0,x.jsx)(M,(0,i.Z)((0,i.Z)({},B),{},{children:s}))});n.Z=j},65908:function(e,n,r){"use strict";r.r(n),r.d(n,{default:function(){return s.Z},getLinearProgressUtilityClass:function(){return o.E},linearProgressClasses:function(){return o.Z}});var s=r(366934),o=r(989525)},989525:function(e,n,r){"use strict";r.d(n,{E:function(){return o}});var s=r(255551);function o(e){return(0,s.d6)("MuiLinearProgress",e)}var a=(0,s.sI)("MuiLinearProgress",["root","determinate","colorPrimary","colorNeutral","colorDanger","colorSuccess","colorWarning","colorContext","sizeSm","sizeMd","sizeLg","variantPlain","variantOutlined","variantSoft","variantSolid"]);n.Z=a},574936:function(e,n,r){"use strict";r.r(n),r.d(n,{default:function(){return Y}});var s,o,a,t,i,l,c,u,d,p,m,g,h,v,f,P,x,L={};r.r(L),r.d(L,{demoComponents:function(){return $},demos:function(){return O},docs:function(){return J},srcComponents:function(){return X}});var k=r(778521),y=r(470079),b=r.t(y,2),j=r(652755),w=r(433770),C=r(65908),S=r(483821),Z=r(31797),T=r(79237),R=r(809851),z=r(332891),V=r(987846),M=r(646599),B=r(366934),D=r(735250),N=r(536440),I=r(920554),W=r(863363),H=r(996178),_=r(607090),U=r(648111),A=r(285072),E=r(983125),G=r(54286),J={en:{description:"Linear Progress indicators, commonly known as loaders, express an unspecified wait time or display the length of a process.",location:"/docs/data/joy/components/linear-progress/linear-progress.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>Linear Progress</h1><p class="description">Linear Progress indicators, commonly known as loaders, express an unspecified wait time or display the length of a process.</p>\n\n',{component:"@mui/docs/ComponentLinkHeader"},'<h2 id="introduction"><a href="#introduction" class="title-link-to-anchor">Introduction<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Progress indicators inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates.</p>\n<p>The <code>LinearProgress</code> is indeterminate by default, indicating an unspecified wait time.\nTo actually have it represent how long an operation will take, use the <a href="#determinate">determinate</a> mode.</p>\n<p>The animations of the components rely on CSS as much as possible to work even before the JavaScript is loaded.</p>\n',{demo:"LinearProgressUsage.js",hideToolbar:!0,bg:"gradient"},'<h2 id="component"><a href="#component" class="title-link-to-anchor">Component<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="component"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>After <a href="/joy-ui/getting-started/installation/">installation</a>, you can start building with this component using the following basic elements:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> LinearProgress <span class="token keyword">from</span> <span class="token string">\'@mui/joy/LinearProgress\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LinearProgress</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="variants"><a href="#variants" class="title-link-to-anchor">Variants<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="variants"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The linear progress component supports the four global variants: <code>solid</code>, <code>soft</code> (default), <code>outlined</code>, and <code>plain</code>.</p>\n',{demo:"LinearProgressVariants.js"},'<h3 id="colors"><a href="#colors" class="title-link-to-anchor">Colors<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="colors"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Every palette included in the theme is available via the <code>color</code> prop.\nPlay around combining different colors.</p>\n',{demo:"LinearProgressColors.js"},'<h3 id="sizes"><a href="#sizes" class="title-link-to-anchor">Sizes<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="sizes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The linear progress component comes with three sizes out of the box: <code>sm</code>, <code>md</code> (the default), and <code>lg</code>.</p>\n',{demo:"LinearProgressSizes.js"},'<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>To learn how to add more sizes to the component, check out <a href="/joy-ui/customization/themed-components/#extend-sizes">Themed components—Extend sizes</a>.</p>\n\n</div></aside><h3 id="determinate"><a href="#determinate" class="title-link-to-anchor">Determinate<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="determinate"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You can use the <code>determinate</code> prop if you want to indicate a specified wait time.</p>\n',{demo:"LinearProgressDeterminate.js"},'<h3 id="thickness"><a href="#thickness" class="title-link-to-anchor">Thickness<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="thickness"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Provides a number to <code>thickness</code> prop to control the bar&#39;s stroke width.</p>\n',{demo:"LinearProgressThickness.js"},'<h2 id="3rd-party-integration"><a href="#3rd-party-integration" class="title-link-to-anchor">3rd-party integration<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="3rd-party-integration"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="use-count-up"><a href="#use-count-up" class="title-link-to-anchor">use-count-up<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="use-count-up"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Using the <a href="https://www.npmjs.com/package/use-count-up">use-count-up</a> package, you can create a counting animation by providing <code>start</code>, <code>end</code>, and <code>duration</code> values.</p>\n',{demo:"LinearProgressCountUp.js"},'<h2 id="css-variables-playground"><a href="#css-variables-playground" class="title-link-to-anchor">CSS variables playground<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="css-variables-playground"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Play around with all the CSS variables available on the component to see how the design changes.</p>\n<p>You can use those to customize the component on both the <code>sx</code> prop and the theme.</p>\n',{demo:"LinearProgressVariables.js",hideToolbar:!0,bg:"gradient"},'<h2 id="common-examples"><a href="#common-examples" class="title-link-to-anchor">Common examples<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="common-examples"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="with-label"><a href="#with-label" class="title-link-to-anchor">With label<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="with-label"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3>',{demo:"LinearProgressWithLabel.js"},'<h2 id="api"><a href="#api" class="title-link-to-anchor">API<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>See the documentation below for a complete reference to all of the props and classes available to the components mentioned here.</p>\n<ul>\n<li><a href="/joy-ui/api/linear-progress/"><code>&lt;LinearProgress /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Component",level:2,hash:"component",children:[{text:"Variants",level:3,hash:"variants"},{text:"Colors",level:3,hash:"colors"},{text:"Sizes",level:3,hash:"sizes"},{text:"Determinate",level:3,hash:"determinate"},{text:"Thickness",level:3,hash:"thickness"}]},{text:"3rd-party integration",level:2,hash:"3rd-party-integration",children:[{text:"use-count-up",level:3,hash:"use-count-up"}]},{text:"CSS variables playground",level:2,hash:"css-variables-playground",children:[]},{text:"Common examples",level:2,hash:"common-examples",children:[{text:"With label",level:3,hash:"with-label"}]},{text:"API",level:2,hash:"api",children:[]}],title:"React Linear Progress component",headers:{productId:"joy-ui",title:"React Linear Progress component",components:["LinearProgress"],githubLabel:"component: LinearProgress",hooks:[]}}},O={"LinearProgressVariants.js":{module:"./LinearProgressVariants.js",raw:'import * as React from \'react\';\nimport Stack from \'@mui/joy/Stack\';\nimport LinearProgress from \'@mui/joy/LinearProgress\';\n\nexport default function LinearProgressVariants() {\n  return (\n    <Stack spacing={2} sx={{ flex: 1 }}>\n      <LinearProgress variant="solid" />\n      <LinearProgress variant="soft" />\n      <LinearProgress variant="outlined" />\n      <LinearProgress variant="plain" />\n    </Stack>\n  );\n}\n',jsxPreview:'<LinearProgress variant="solid" />\n<LinearProgress variant="soft" />\n<LinearProgress variant="outlined" />\n<LinearProgress variant="plain" />',moduleTS:"./LinearProgressVariants.js",rawTS:'import * as React from \'react\';\nimport Stack from \'@mui/joy/Stack\';\nimport LinearProgress from \'@mui/joy/LinearProgress\';\n\nexport default function LinearProgressVariants() {\n  return (\n    <Stack spacing={2} sx={{ flex: 1 }}>\n      <LinearProgress variant="solid" />\n      <LinearProgress variant="soft" />\n      <LinearProgress variant="outlined" />\n      <LinearProgress variant="plain" />\n    </Stack>\n  );\n}\n'},"LinearProgressUsage.js":{module:"./LinearProgressUsage.js",raw:"import * as React from 'react';\nimport LinearProgress from '@mui/joy/LinearProgress';\nimport Box from '@mui/joy/Box';\nimport JoyUsageDemo from 'docs/src/modules/components/JoyUsageDemo';\n\nexport default function LinearProgressUsage() {\n  return (\n    <JoyUsageDemo\n      componentName=\"LinearProgress\"\n      data={[\n        {\n          propName: 'variant',\n          knob: 'radio',\n          defaultValue: 'soft',\n          options: ['plain', 'outlined', 'soft', 'solid'],\n        },\n        {\n          propName: 'color',\n          knob: 'color',\n          defaultValue: 'primary',\n        },\n        {\n          propName: 'size',\n          knob: 'radio',\n          options: ['sm', 'md', 'lg'],\n          defaultValue: 'md',\n        },\n        {\n          propName: 'determinate',\n          knob: 'switch',\n          defaultValue: false,\n        },\n        {\n          propName: 'value',\n          knob: 'number',\n          defaultValue: 25,\n        },\n      ]}\n      renderDemo={(props) => (\n        <Box sx={{ width: 300 }}>\n          <LinearProgress {...props} />\n        </Box>\n      )}\n    />\n  );\n}\n"},"LinearProgressColors.js":{module:"./LinearProgressColors.js",raw:'import * as React from \'react\';\nimport LinearProgress from \'@mui/joy/LinearProgress\';\nimport Box from \'@mui/joy/Box\';\nimport Radio from \'@mui/joy/Radio\';\nimport RadioGroup from \'@mui/joy/RadioGroup\';\nimport Sheet from \'@mui/joy/Sheet\';\nimport Stack from \'@mui/joy/Stack\';\nimport Typography from \'@mui/joy/Typography\';\n\nexport default function LinearProgressColors() {\n  const [variant, setVariant] = React.useState(\'soft\');\n\n  return (\n    <Box\n      sx={{\n        width: \'100%\',\n        display: \'flex\',\n        alignItems: \'center\',\n        gap: 3,\n      }}\n    >\n      <Stack spacing={2} sx={{ flex: 1 }}>\n        <LinearProgress color="primary" variant={variant} />\n        <LinearProgress color="neutral" variant={variant} />\n        <LinearProgress color="danger" variant={variant} />\n        <LinearProgress color="success" variant={variant} />\n        <LinearProgress color="warning" variant={variant} />\n      </Stack>\n      <Sheet\n        sx={{\n          background: \'transparent\',\n          pl: 4,\n          borderLeft: \'1px solid\',\n          borderColor: \'divider\',\n        }}\n      >\n        <Typography\n          level="body-sm"\n          fontWeight="xl"\n          id="variant-label"\n          textColor="text.primary"\n          mb={1}\n        >\n          Variant:\n        </Typography>\n        <RadioGroup\n          size="sm"\n          aria-labelledby="variant-label"\n          name="variant"\n          value={variant}\n          onChange={(event) => setVariant(event.target.value)}\n        >\n          <Radio label="Solid" value="solid" />\n          <Radio label="Soft" value="soft" />\n          <Radio label="Outlined" value="outlined" />\n          <Radio label="Plain" value="plain" />\n        </RadioGroup>\n      </Sheet>\n    </Box>\n  );\n}\n',moduleTS:"./LinearProgressColors.js",rawTS:'import * as React from \'react\';\nimport LinearProgress from \'@mui/joy/LinearProgress\';\nimport Box from \'@mui/joy/Box\';\nimport Radio from \'@mui/joy/Radio\';\nimport RadioGroup from \'@mui/joy/RadioGroup\';\nimport Sheet from \'@mui/joy/Sheet\';\nimport Stack from \'@mui/joy/Stack\';\nimport Typography from \'@mui/joy/Typography\';\nimport { VariantProp } from \'@mui/joy/styles\';\n\nexport default function LinearProgressColors() {\n  const [variant, setVariant] = React.useState<VariantProp>(\'soft\');\n\n  return (\n    <Box\n      sx={{\n        width: \'100%\',\n        display: \'flex\',\n        alignItems: \'center\',\n        gap: 3,\n      }}\n    >\n      <Stack spacing={2} sx={{ flex: 1 }}>\n        <LinearProgress color="primary" variant={variant} />\n        <LinearProgress color="neutral" variant={variant} />\n        <LinearProgress color="danger" variant={variant} />\n        <LinearProgress color="success" variant={variant} />\n        <LinearProgress color="warning" variant={variant} />\n      </Stack>\n      <Sheet\n        sx={{\n          background: \'transparent\',\n          pl: 4,\n          borderLeft: \'1px solid\',\n          borderColor: \'divider\',\n        }}\n      >\n        <Typography\n          level="body-sm"\n          fontWeight="xl"\n          id="variant-label"\n          textColor="text.primary"\n          mb={1}\n        >\n          Variant:\n        </Typography>\n        <RadioGroup\n          size="sm"\n          aria-labelledby="variant-label"\n          name="variant"\n          value={variant}\n          onChange={(event) => setVariant(event.target.value as VariantProp)}\n        >\n          <Radio label="Solid" value="solid" />\n          <Radio label="Soft" value="soft" />\n          <Radio label="Outlined" value="outlined" />\n          <Radio label="Plain" value="plain" />\n        </RadioGroup>\n      </Sheet>\n    </Box>\n  );\n}\n'},"LinearProgressSizes.js":{module:"./LinearProgressSizes.js",raw:"import * as React from 'react';\nimport Stack from '@mui/joy/Stack';\nimport LinearProgress from '@mui/joy/LinearProgress';\n\nexport default function LinearProgressSizes() {\n  return (\n    <Stack spacing={2} sx={{ flex: 1 }}>\n      <LinearProgress size=\"sm\" />\n      <LinearProgress size=\"md\" />\n      <LinearProgress size=\"lg\" />\n    </Stack>\n  );\n}\n",jsxPreview:'<LinearProgress size="sm" />\n<LinearProgress size="md" />\n<LinearProgress size="lg" />',moduleTS:"./LinearProgressSizes.js",rawTS:"import * as React from 'react';\nimport Stack from '@mui/joy/Stack';\nimport LinearProgress from '@mui/joy/LinearProgress';\n\nexport default function LinearProgressSizes() {\n  return (\n    <Stack spacing={2} sx={{ flex: 1 }}>\n      <LinearProgress size=\"sm\" />\n      <LinearProgress size=\"md\" />\n      <LinearProgress size=\"lg\" />\n    </Stack>\n  );\n}\n"},"LinearProgressDeterminate.js":{module:"./LinearProgressDeterminate.js",raw:"import * as React from 'react';\nimport Stack from '@mui/joy/Stack';\nimport LinearProgress from '@mui/joy/LinearProgress';\n\nexport default function LinearProgressDeterminate() {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n    }, 800);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Stack spacing={2} sx={{ flex: 1 }}>\n      <LinearProgress determinate value={25} />\n      <LinearProgress determinate value={50} />\n      <LinearProgress determinate value={75} />\n      <LinearProgress determinate value={100} />\n      <LinearProgress determinate value={progress} />\n    </Stack>\n  );\n}\n",jsxPreview:"<LinearProgress determinate value={25} />\n<LinearProgress determinate value={50} />\n<LinearProgress determinate value={75} />\n<LinearProgress determinate value={100} />\n<LinearProgress determinate value={progress} />",moduleTS:"./LinearProgressDeterminate.js",rawTS:"import * as React from 'react';\nimport Stack from '@mui/joy/Stack';\nimport LinearProgress from '@mui/joy/LinearProgress';\n\nexport default function LinearProgressDeterminate() {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n    }, 800);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Stack spacing={2} sx={{ flex: 1 }}>\n      <LinearProgress determinate value={25} />\n      <LinearProgress determinate value={50} />\n      <LinearProgress determinate value={75} />\n      <LinearProgress determinate value={100} />\n      <LinearProgress determinate value={progress} />\n    </Stack>\n  );\n}\n"},"LinearProgressThickness.js":{module:"./LinearProgressThickness.js",raw:"import * as React from 'react';\nimport LinearProgress from '@mui/joy/LinearProgress';\n\nexport default function LinearProgressThickness() {\n  return <LinearProgress thickness={1} />;\n}\n",jsxPreview:"<LinearProgress thickness={1} />",moduleTS:"./LinearProgressThickness.js",rawTS:"import * as React from 'react';\nimport LinearProgress from '@mui/joy/LinearProgress';\n\nexport default function LinearProgressThickness() {\n  return <LinearProgress thickness={1} />;\n}\n"},"LinearProgressCountUp.js":{module:"./LinearProgressCountUp.js",raw:"import * as React from 'react';\nimport LinearProgress from '@mui/joy/LinearProgress';\nimport Typography from '@mui/joy/Typography';\nimport { useCountUp } from 'use-count-up';\n\nexport default function LinearProgressCountUp() {\n  const { value } = useCountUp({\n    isCounting: true,\n    duration: 5,\n    easing: 'linear',\n    start: 0,\n    end: 75,\n    onComplete: () => ({\n      shouldRepeat: true,\n      delay: 2,\n    }),\n  });\n\n  return (\n    <LinearProgress\n      determinate\n      variant=\"outlined\"\n      color=\"neutral\"\n      size=\"sm\"\n      thickness={24}\n      value={Number(value)}\n      sx={{\n        '--LinearProgress-radius': '20px',\n        '--LinearProgress-thickness': '24px',\n      }}\n    >\n      <Typography\n        level=\"body-xs\"\n        fontWeight=\"xl\"\n        textColor=\"common.white\"\n        sx={{ mixBlendMode: 'difference' }}\n      >\n        LOADING… {`${Math.round(Number(value))}%`}\n      </Typography>\n    </LinearProgress>\n  );\n}\n",moduleTS:"./LinearProgressCountUp.js",rawTS:"import * as React from 'react';\nimport LinearProgress from '@mui/joy/LinearProgress';\nimport Typography from '@mui/joy/Typography';\nimport { useCountUp } from 'use-count-up';\n\nexport default function LinearProgressCountUp() {\n  const { value } = useCountUp({\n    isCounting: true,\n    duration: 5,\n    easing: 'linear',\n    start: 0,\n    end: 75,\n    onComplete: () => ({\n      shouldRepeat: true,\n      delay: 2,\n    }),\n  });\n\n  return (\n    <LinearProgress\n      determinate\n      variant=\"outlined\"\n      color=\"neutral\"\n      size=\"sm\"\n      thickness={24}\n      value={Number(value!)}\n      sx={{\n        '--LinearProgress-radius': '20px',\n        '--LinearProgress-thickness': '24px',\n      }}\n    >\n      <Typography\n        level=\"body-xs\"\n        fontWeight=\"xl\"\n        textColor=\"common.white\"\n        sx={{ mixBlendMode: 'difference' }}\n      >\n        LOADING… {`${Math.round(Number(value!))}%`}\n      </Typography>\n    </LinearProgress>\n  );\n}\n"},"LinearProgressVariables.js":{module:"./LinearProgressVariables.js",raw:"import * as React from 'react';\nimport LinearProgress from '@mui/joy/LinearProgress';\nimport Box from '@mui/joy/Box';\nimport JoyVariablesDemo from 'docs/src/modules/components/JoyVariablesDemo';\n\nexport default function LinearProgressVariables() {\n  return (\n    <JoyVariablesDemo\n      componentName=\"LinearProgress\"\n      data={[\n        {\n          var: '--LinearProgress-thickness',\n          defaultValue: '6px',\n        },\n        {\n          var: '--LinearProgress-radius',\n          helperText: \"Default to root's thickness\",\n        },\n        {\n          var: '--LinearProgress-progressThickness',\n          helperText: \"Default to root's thickness\",\n        },\n        {\n          var: '--LinearProgress-progressRadius',\n          helperText: \"Default to root's thickness\",\n        },\n      ]}\n      renderDemo={(sx) => (\n        <Box sx={{ width: 300 }}>\n          <LinearProgress sx={sx} />\n        </Box>\n      )}\n    />\n  );\n}\n",moduleTS:"./LinearProgressVariables.js",rawTS:"import * as React from 'react';\nimport LinearProgress from '@mui/joy/LinearProgress';\nimport Box from '@mui/joy/Box';\nimport JoyVariablesDemo from 'docs/src/modules/components/JoyVariablesDemo';\n\nexport default function LinearProgressVariables() {\n  return (\n    <JoyVariablesDemo\n      componentName=\"LinearProgress\"\n      data={[\n        {\n          var: '--LinearProgress-thickness',\n          defaultValue: '6px',\n        },\n        {\n          var: '--LinearProgress-radius',\n          helperText: \"Default to root's thickness\",\n        },\n        {\n          var: '--LinearProgress-progressThickness',\n          helperText: \"Default to root's thickness\",\n        },\n        {\n          var: '--LinearProgress-progressRadius',\n          helperText: \"Default to root's thickness\",\n        },\n      ]}\n      renderDemo={(sx) => (\n        <Box sx={{ width: 300 }}>\n          <LinearProgress sx={sx} />\n        </Box>\n      )}\n    />\n  );\n}\n"},"LinearProgressWithLabel.js":{module:"./LinearProgressWithLabel.js",raw:"import * as React from 'react';\nimport LinearProgress from '@mui/joy/LinearProgress';\nimport Typography from '@mui/joy/Typography';\nimport Box from '@mui/joy/Box';\n\nexport default function LinearProgressWithLabel() {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n    }, 800);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'white',\n        width: '100%',\n      }}\n    >\n      <LinearProgress\n        determinate\n        variant=\"outlined\"\n        color=\"neutral\"\n        size=\"sm\"\n        thickness={32}\n        value={progress}\n        sx={{\n          '--LinearProgress-radius': '0px',\n          '--LinearProgress-progressThickness': '24px',\n          boxShadow: 'sm',\n          borderColor: 'neutral.500',\n        }}\n      >\n        <Typography\n          level=\"body-xs\"\n          fontWeight=\"xl\"\n          textColor=\"common.white\"\n          sx={{ mixBlendMode: 'difference' }}\n        >\n          LOADING… {`${Math.round(progress)}%`}\n        </Typography>\n      </LinearProgress>\n    </Box>\n  );\n}\n",moduleTS:"./LinearProgressWithLabel.js",rawTS:"import * as React from 'react';\nimport LinearProgress from '@mui/joy/LinearProgress';\nimport Typography from '@mui/joy/Typography';\nimport Box from '@mui/joy/Box';\n\nexport default function LinearProgressWithLabel() {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n    }, 800);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'white',\n        width: '100%',\n      }}\n    >\n      <LinearProgress\n        determinate\n        variant=\"outlined\"\n        color=\"neutral\"\n        size=\"sm\"\n        thickness={32}\n        value={progress}\n        sx={{\n          '--LinearProgress-radius': '0px',\n          '--LinearProgress-progressThickness': '24px',\n          boxShadow: 'sm',\n          borderColor: 'neutral.500',\n        }}\n      >\n        <Typography\n          level=\"body-xs\"\n          fontWeight=\"xl\"\n          textColor=\"common.white\"\n          sx={{ mixBlendMode: 'difference' }}\n        >\n          LOADING… {`${Math.round(progress)}%`}\n        </Typography>\n      </LinearProgress>\n    </Box>\n  );\n}\n"}};O.scope={process:{},import:{react:b,"@mui/joy/Stack":w,"@mui/joy/LinearProgress":C,"@mui/joy/Box":S,"@mui/joy/Radio":Z,"@mui/joy/RadioGroup":T,"@mui/joy/Sheet":R,"@mui/joy/Typography":z,"use-count-up":V}};var $={"./LinearProgressVariants.js":function(){return(0,D.jsxs)(M.Z,{spacing:2,sx:{flex:1},children:[s||(s=(0,D.jsx)(B.Z,{variant:"solid"})),o||(o=(0,D.jsx)(B.Z,{variant:"soft"})),a||(a=(0,D.jsx)(B.Z,{variant:"outlined"})),t||(t=(0,D.jsx)(B.Z,{variant:"plain"}))]})},"./LinearProgressUsage.js":function(){return(0,D.jsx)(I.Z,{componentName:"LinearProgress",data:[{propName:"variant",knob:"radio",defaultValue:"soft",options:["plain","outlined","soft","solid"]},{propName:"color",knob:"color",defaultValue:"primary"},{propName:"size",knob:"radio",options:["sm","md","lg"],defaultValue:"md"},{propName:"determinate",knob:"switch",defaultValue:!1},{propName:"value",knob:"number",defaultValue:25}],renderDemo:function(e){return(0,D.jsx)(N.Z,{sx:{width:300},children:(0,D.jsx)(B.Z,(0,k.Z)({},e))})}})},"./LinearProgressColors.js":function(){var e=y.useState("soft"),n=(0,W.Z)(e,2),r=n[0],s=n[1];return(0,D.jsxs)(N.Z,{sx:{width:"100%",display:"flex",alignItems:"center",gap:3},children:[(0,D.jsxs)(M.Z,{spacing:2,sx:{flex:1},children:[(0,D.jsx)(B.Z,{color:"primary",variant:r}),(0,D.jsx)(B.Z,{color:"neutral",variant:r}),(0,D.jsx)(B.Z,{color:"danger",variant:r}),(0,D.jsx)(B.Z,{color:"success",variant:r}),(0,D.jsx)(B.Z,{color:"warning",variant:r})]}),(0,D.jsxs)(U.Z,{sx:{background:"transparent",pl:4,borderLeft:"1px solid",borderColor:"divider"},children:[i||(i=(0,D.jsx)(A.ZP,{level:"body-sm",fontWeight:"xl",id:"variant-label",textColor:"text.primary",mb:1,children:"Variant:"})),(0,D.jsxs)(_.Z,{size:"sm","aria-labelledby":"variant-label",name:"variant",value:r,onChange:function(e){return s(e.target.value)},children:[l||(l=(0,D.jsx)(H.Z,{label:"Solid",value:"solid"})),c||(c=(0,D.jsx)(H.Z,{label:"Soft",value:"soft"})),u||(u=(0,D.jsx)(H.Z,{label:"Outlined",value:"outlined"})),d||(d=(0,D.jsx)(H.Z,{label:"Plain",value:"plain"}))]})]})]})},"./LinearProgressSizes.js":function(){return(0,D.jsxs)(M.Z,{spacing:2,sx:{flex:1},children:[p||(p=(0,D.jsx)(B.Z,{size:"sm"})),m||(m=(0,D.jsx)(B.Z,{size:"md"})),g||(g=(0,D.jsx)(B.Z,{size:"lg"}))]})},"./LinearProgressDeterminate.js":function(){var e=y.useState(0),n=(0,W.Z)(e,2),r=n[0],s=n[1];return y.useEffect(function(){var e=setInterval(function(){s(function(e){return e>=100?0:e+10})},800);return function(){clearInterval(e)}},[]),(0,D.jsxs)(M.Z,{spacing:2,sx:{flex:1},children:[h||(h=(0,D.jsx)(B.Z,{determinate:!0,value:25})),v||(v=(0,D.jsx)(B.Z,{determinate:!0,value:50})),f||(f=(0,D.jsx)(B.Z,{determinate:!0,value:75})),P||(P=(0,D.jsx)(B.Z,{determinate:!0,value:100})),(0,D.jsx)(B.Z,{determinate:!0,value:r})]})},"./LinearProgressThickness.js":function(){return x||(x=(0,D.jsx)(B.Z,{thickness:1}))},"./LinearProgressCountUp.js":function(){var e=(0,V.useCountUp)({isCounting:!0,duration:5,easing:"linear",start:0,end:75,onComplete:function(){return{shouldRepeat:!0,delay:2}}}).value;return(0,D.jsx)(B.Z,{determinate:!0,variant:"outlined",color:"neutral",size:"sm",thickness:24,value:Number(e),sx:{"--LinearProgress-radius":"20px","--LinearProgress-thickness":"24px"},children:(0,D.jsxs)(A.ZP,{level:"body-xs",fontWeight:"xl",textColor:"common.white",sx:{mixBlendMode:"difference"},children:["LOADING… ","".concat(Math.round(Number(e)),"%")]})})},"./LinearProgressVariables.js":function(){return(0,D.jsx)(E.default,{componentName:"LinearProgress",data:[{var:"--LinearProgress-thickness",defaultValue:"6px"},{var:"--LinearProgress-radius",helperText:"Default to root's thickness"},{var:"--LinearProgress-progressThickness",helperText:"Default to root's thickness"},{var:"--LinearProgress-progressRadius",helperText:"Default to root's thickness"}],renderDemo:function(e){return(0,D.jsx)(N.Z,{sx:{width:300},children:(0,D.jsx)(B.Z,{sx:e})})}})},"./LinearProgressWithLabel.js":function(){var e=y.useState(0),n=(0,W.Z)(e,2),r=n[0],s=n[1];return y.useEffect(function(){var e=setInterval(function(){s(function(e){return e>=100?0:e+10})},800);return function(){clearInterval(e)}},[]),(0,D.jsx)(N.Z,{sx:{bgcolor:"white",width:"100%"},children:(0,D.jsx)(B.Z,{determinate:!0,variant:"outlined",color:"neutral",size:"sm",thickness:32,value:r,sx:{"--LinearProgress-radius":"0px","--LinearProgress-progressThickness":"24px",boxShadow:"sm",borderColor:"neutral.500"},children:(0,D.jsxs)(A.ZP,{level:"body-xs",fontWeight:"xl",textColor:"common.white",sx:{mixBlendMode:"difference"},children:["LOADING… ","".concat(Math.round(r),"%")]})})})}},X={"@mui/docs/ComponentLinkHeader":G.Z};function Y(){return(0,D.jsx)(j.Z,(0,k.Z)({},L))}},968098:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/joy-ui/react-linear-progress",function(){return r(574936)}])}},function(e){e.O(0,[49774,9535,73976,97146,59727,85925,17376,41373,15686,34800,56831,22274,89068,48003,45678,31082,39987,71427,75794,53301,66215,37654,11423,42378,20759,16067,40332,97683,89238,36892,17436,12075,20554,23854,92888,40179],function(){return e(e.s=968098)}),_N_E=e.O()}]);