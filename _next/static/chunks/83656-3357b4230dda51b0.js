(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[83656,39519],{640048:function(n,e,t){t(644655),n.exports=t(568801).Number.isFinite},644655:function(n,e,t){var o=t(71527),a=t(947536).isFinite;o(o.S,"Number",{isFinite:function(n){return"number"==typeof n&&a(n)}})},333897:function(n,e,t){var o=t(915012),a=/^\s+/;n.exports=function(n){return n?n.slice(0,o(n)+1).replace(a,""):n}},915012:function(n){var e=/\s/;n.exports=function(n){for(var t=n.length;t--&&e.test(n.charAt(t)););return t}},889678:function(n,e,t){var o=t(706627),a=t(885365),r=t(67948),s=Math.max,i=Math.min;n.exports=function(n,e,t){var l,p,u,c,d,m,f=0,h=!1,x=!1,g=!0;if("function"!=typeof n)throw TypeError("Expected a function");function b(e){var t=l,o=p;return l=p=void 0,f=e,c=n.apply(o,t)}function y(n){var t=n-m,o=n-f;return void 0===m||t>=e||t<0||x&&o>=u}function v(){var n,t,o,r=a();if(y(r))return k(r);d=setTimeout(v,(n=r-m,t=r-f,o=e-n,x?i(o,u-t):o))}function k(n){return(d=void 0,g&&l)?b(n):(l=p=void 0,c)}function w(){var n,t=a(),o=y(t);if(l=arguments,p=this,m=t,o){if(void 0===d)return f=n=m,d=setTimeout(v,e),h?b(n):c;if(x)return clearTimeout(d),d=setTimeout(v,e),b(m)}return void 0===d&&(d=setTimeout(v,e)),c}return e=r(e)||0,o(t)&&(h=!!t.leading,u=(x="maxWait"in t)?s(r(t.maxWait)||0,e):u,g="trailing"in t?!!t.trailing:g),w.cancel=function(){void 0!==d&&clearTimeout(d),f=0,l=m=p=d=void 0},w.flush=function(){return void 0===d?c:k(a())},w}},706627:function(n){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},885365:function(n,e,t){var o=t(573401);n.exports=function(){return o.Date.now()}},123763:function(n,e,t){var o=t(889678),a=t(706627);n.exports=function(n,e,t){var r=!0,s=!0;if("function"!=typeof n)throw TypeError("Expected a function");return a(t)&&(r="leading"in t?!!t.leading:r,s="trailing"in t?!!t.trailing:s),o(n,e,{leading:r,maxWait:e,trailing:s})}},67948:function(n,e,t){var o=t(333897),a=t(706627),r=t(42848),s=0/0,i=/^[-+]0x[0-9a-f]+$/i,l=/^0b[01]+$/i,p=/^0o[0-7]+$/i,u=parseInt;n.exports=function(n){if("number"==typeof n)return n;if(r(n))return s;if(a(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=a(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=o(n);var t=l.test(n);return t||p.test(n)?u(n.slice(2),t?2:8):i.test(n)?s:+n}},724198:function(n,e,t){"use strict";t.r(e),t.d(e,{demoComponents:function(){return nK},demos:function(){return nN},docs:function(){return nU},srcComponents:function(){return nq}});var o,a,r,s,i,l,p,u,c,d,m,f,h,x,g,b,y,v,k=t(470079),w=t.t(k,2),I=t(522013),C=t(548396),D=t(562817),F=t(871272),B=t(639519),E=t(950651),A=t(987970),T=t(827108),M=t(472924),P=t(653048),R=t(778521),j=t(418887),S=t(163226),Z=t(735250),$=k.forwardRef(function(n,e){return(0,Z.jsx)(j.I,(0,R.Z)((0,R.Z)({slots:{input:O}},n),{},{ref:e}))}),z={100:"#DAECFF",200:"#b6daff",400:"#3399FF",500:"#007FFF",600:"#0072E5",900:"#003A75"},H={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},O=(0,S.Z)("input")(function(n){var e=n.theme;return"\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 12px;\n  border-radius: 8px;\n  color: ".concat("dark"===e.palette.mode?H[300]:H[900],";\n  background: ").concat("dark"===e.palette.mode?H[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?H[700]:H[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===e.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n\n  &:hover {\n    border-color: ").concat(z[400],";\n  }\n\n  &:focus {\n    border-color: ").concat(z[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===e.palette.mode?z[600]:z[200],";\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n")}),L=k.forwardRef(function(n,e){return(0,Z.jsx)(j.I,(0,R.Z)((0,R.Z)({slots:{input:U}},n),{},{ref:e}))}),V={100:"#DAECFF",200:"#80BFFF",400:"#3399FF",500:"#007FFF",600:"#0072E5"},_={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},U=(0,S.Z)("input")(function(n){var e=n.theme;return"\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 12px;\n  border-radius: 8px;\n  color: ".concat("dark"===e.palette.mode?_[300]:_[900],";\n  background: ").concat("dark"===e.palette.mode?_[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?_[700]:_[200],";\n  box-shadow: 0px 2px 2px ").concat("dark"===e.palette.mode?_[900]:_[50],";\n\n  &:hover {\n    border-color: ").concat(V[400],";\n  }\n\n  &:focus {\n    border-color: ").concat(V[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===e.palette.mode?V[600]:V[200],";\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n")}),N=t(672330),K=t(503945),q=k.forwardRef(function(n,e){var t=(0,N.G)(n),o=t.getRootProps,a=(0,t.getInputProps)();return a.ref=(0,K.Z)(a.ref,e),(0,Z.jsx)("div",(0,R.Z)((0,R.Z)({},o()),{},{children:(0,Z.jsx)(J,(0,R.Z)((0,R.Z)({},n),a))}))}),W={100:"#DAECFF",200:"#80BFFF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2"},G={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},J=(0,S.Z)("input")(function(n){var e=n.theme;return"\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 12px;\n  border-radius: 8px;\n  color: ".concat("dark"===e.palette.mode?G[300]:G[900],";\n  background: ").concat("dark"===e.palette.mode?G[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?G[700]:G[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===e.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n\n  &:hover {\n    border-color: ").concat(W[400],";\n  }\n\n  &:focus {\n    border-color: ").concat(W[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===e.palette.mode?W[600]:W[200],";\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n")}),X=t(564376),Y=t(234046),Q=t(863363),nn=t(577903),ne=t(27175),nt=t(252951),no=t(748077),na=["slots"],nr=k.forwardRef(function(n,e){var t=n.slots,o=(0,nn.Z)(n,na);return(0,Z.jsx)(j.I,(0,R.Z)((0,R.Z)({slots:(0,R.Z)({root:nl,input:np},t)},o),{},{ref:e}))}),ns={100:"#DAECFF",200:"#80BFFF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2"},ni={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},nl=(0,S.Z)("div")(function(n){var e=n.theme;return"\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ".concat("dark"===e.palette.mode?ni[300]:ni[500],";\n  background: ").concat("dark"===e.palette.mode?ni[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?ni[700]:ni[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===e.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n  &.").concat(no.N.focused," {\n    border-color: ").concat(ns[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===e.palette.mode?ns[600]:ns[200],";\n  }\n\n  &:hover {\n    border-color: ").concat(ns[400],";\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n")}),np=(0,S.Z)("input")(function(n){var e=n.theme;return"\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  flex-grow: 1;\n  color: ".concat("dark"===e.palette.mode?ni[300]:ni[900],";\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n")}),nu=(0,S.Z)(nt.z)(function(n){var e=n.theme;return"\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background: inherit;\n  cursor: pointer;\n  color: ".concat("dark"===e.palette.mode?ni[300]:ni[700],";\n  ")}),nc=(0,S.Z)("div")(p||(p=(0,X.Z)(["\n  margin: 8px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n"]))),nd=k.forwardRef(function(n,e){return(0,Z.jsx)(j.I,(0,R.Z)((0,R.Z)({slots:{root:nh,input:"input",textarea:nx}},n),{},{ref:e}))}),nm={100:"#DAECFF",200:"#80BFFF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2"},nf={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},nh=(0,S.Z)("div")(c||(c=(0,X.Z)(["\n  display: flex;\n  max-width: 100%;\n"]))),nx=(0,S.Z)("textarea",{shouldForwardProp:function(n){return!["ownerState","minRows","maxRows"].includes(n.toString())}})(function(n){var e=n.theme;return"\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n  padding: 8px 12px;\n  border-radius: 8px 8px 0 8px;\n  color: ".concat("dark"===e.palette.mode?nf[300]:nf[900],";\n  background: ").concat("dark"===e.palette.mode?nf[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?nf[700]:nf[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===e.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n\n  &:hover {\n    border-color: ").concat(nm[400],";\n  }\n\n  &:focus {\n    border-color: ").concat(nm[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===e.palette.mode?nm[700]:nm[200],";\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n")}),ng=t(830612),nb=k.forwardRef(function(n,e){return(0,Z.jsx)(j.I,(0,R.Z)((0,R.Z)({slots:{root:nk,input:"input",textarea:nw}},n),{},{ref:e}))}),ny={100:"#DAECFF",200:"#80BFFF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2"},nv={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},nk=(0,S.Z)("div")(m||(m=(0,X.Z)(["\n  display: flex;\n  max-width: 100%;\n"]))),nw=(0,S.Z)(ng.u)(function(n){var e=n.theme;return"\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n  padding: 8px 12px;\n  border-radius: 8px 8px 0 8px;\n  color: ".concat("dark"===e.palette.mode?nv[300]:nv[900],";\n  background: ").concat("dark"===e.palette.mode?nv[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?nv[700]:nv[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===e.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n\n  &:hover {\n    border-color: ").concat(ny[400],";\n  }\n\n  &:focus {\n    border-color: ").concat(ny[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===e.palette.mode?ny[500]:ny[200],";\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n")});function nI(n){var e=n.separator,t=n.length,o=n.value,a=n.onChange,r=k.useRef(Array(t).fill(null)),s=function(n){r.current[n].focus()},i=function(n){r.current[n].select()},l=function(n,e){switch(n.key){case"ArrowUp":case"ArrowDown":case" ":n.preventDefault();break;case"ArrowLeft":n.preventDefault(),e>0&&(s(e-1),i(e-1));break;case"ArrowRight":n.preventDefault(),e<t-1&&(s(e+1),i(e+1));break;case"Delete":n.preventDefault(),a(function(n){return n.slice(0,e)+n.slice(e+1)});break;case"Backspace":n.preventDefault(),e>0&&(s(e-1),i(e-1)),a(function(n){return n.slice(0,e)+n.slice(e+1)})}},p=function(n,e){for(var o=n.target.value,i=0;i<=e;)if(r.current[i].value&&i<e)i+=1;else break;a(function(n){var e=n.split(""),t=o[o.length-1];return e[i]=t,e.join("")}),""!==o&&e<t-1&&s(e+1)},u=function(n,e){i(e)},c=function(n,e){n.preventDefault();var s=n.clipboardData;if(s.types.includes("text/plain")){var i=s.getData("text/plain");i=i.substring(0,t).trim();for(var l=0;l<=e;)if(r.current[l].value&&l<e)l+=1;else break;for(var p=o.split(""),u=l;u<t;u+=1){var c,d=null!==(c=i[u-l])&&void 0!==c?c:" ";p[u]=d}a(p.join(""))}};return(0,Z.jsx)(ne.Z,{sx:{display:"flex",gap:1,alignItems:"center"},children:Array(t).fill(null).map(function(n,a){var s;return(0,Z.jsxs)(k.Fragment,{children:[(0,Z.jsx)(j.I,{slots:{input:nF},"aria-label":"Digit ".concat(a+1," of OTP"),slotProps:{input:{ref:function(n){r.current[a]=n},onKeyDown:function(n){return l(n,a)},onChange:function(n){return p(n,a)},onClick:function(n){return u(n,a)},onPaste:function(n){return c(n,a)},value:null!==(s=o[a])&&void 0!==s?s:""}}}),a===t-1?null:e]},a)})})}var nC={100:"#DAECFF",200:"#80BFFF",400:"#3399FF",500:"#007FFF",600:"#0072E5",700:"#0059B2"},nD={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"},nF=(0,S.Z)("input")(function(n){var e=n.theme;return"\n  width: 40px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 0px;\n  border-radius: 8px;\n  text-align: center;\n  color: ".concat("dark"===e.palette.mode?nD[300]:nD[900],";\n  background: ").concat("dark"===e.palette.mode?nD[900]:"#fff",";\n  border: 1px solid ").concat("dark"===e.palette.mode?nD[700]:nD[200],";\n  box-shadow: 0px 2px 4px ").concat("dark"===e.palette.mode?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n\n  &:hover {\n    border-color: ").concat(nC[400],";\n  }\n\n  &:focus {\n    border-color: ").concat(nC[400],";\n    box-shadow: 0 0 0 3px ").concat("dark"===e.palette.mode?nC[600]:nC[200],";\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n")}),nB=t(302312),nE=k.forwardRef(function(n,e){var t="dark"===(0,nB.Z)().palette.mode;return(0,Z.jsx)(j.I,(0,R.Z)((0,R.Z)({ref:e},n),{},{className:(0,P.default)(n.className,t&&"dark"),slotProps:(0,R.Z)((0,R.Z)({},n.slotProps),{},{input:function(e){var t,o,a="function"==typeof(t=null===(o=n.slotProps)||void 0===o?void 0:o.input)?t(e):t;return(0,R.Z)((0,R.Z)({},a),{},{className:(0,P.default)("w-80 text-sm font-normal font-sans leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple dark:outline-purple-600 focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-600 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0",null==a?void 0:a.className)})}})}))}),nA=k.forwardRef(function(n,e){var t="dark"===(0,nB.Z)().palette.mode;return(0,Z.jsx)(j.I,(0,R.Z)((0,R.Z)({ref:e},n),{},{className:(0,P.default)(n.className,t&&"dark"),slotProps:(0,R.Z)((0,R.Z)({},n.slotProps),{},{input:function(e){var t,o,a="function"==typeof(t=null===(o=n.slotProps)||void 0===o?void 0:o.input)?t(e):t;return(0,R.Z)((0,R.Z)({},a),{},{className:(0,P.default)("w-80 text-sm font-normal font-sans leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple dark:outline-purple-600 focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-600 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0",null==a?void 0:a.className)})}})}))}),nT={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},nM={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function nP(){var n="dark"===(0,nB.Z)().palette.mode;return(0,Z.jsx)("style",{children:"\n      .CustomInput {\n        width: 320px;\n        font-family: 'IBM Plex Sans', sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ".concat(n?nM[300]:nM[900],";\n        background: ").concat(n?nM[900]:"#fff",";\n        border: 1px solid ").concat(n?nM[700]:nM[200],";\n        box-shadow: 0px 2px 2px ").concat(n?nM[900]:nM[50],";\n\n        &:hover {\n          border-color: ").concat(nT[400],";\n        }\n\n        &:focus {\n          border-color: ").concat(nT[400],";\n          box-shadow: 0 0 0 3px ").concat(n?nT[600]:nT[200],";\n        }\n\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n      ")})}var nR={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},nj={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function nS(){var n="dark"===(0,nB.Z)().palette.mode;return(0,Z.jsx)("style",{children:"\n      .CustomInputIntroduction {\n        width: 320px;\n        font-family: 'IBM Plex Sans', sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ".concat(n?nj[300]:nj[900],";\n        background: ").concat(n?nj[900]:"#fff",";\n        border: 1px solid ").concat(n?nj[700]:nj[200],";\n        box-shadow: 0px 2px 4px ").concat(n?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n\n        &:hover {\n          border-color: ").concat(nR[400],";\n        }\n\n        &:focus {\n          border-color: ").concat(nR[400],";\n          box-shadow: 0 0 0 3px ").concat(n?nR[600]:nR[200],";\n        }\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n      ")})}var nZ={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},n$={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function nz(){var n="dark"===(0,nB.Z)().palette.mode;return(0,Z.jsx)("style",{children:"\n      .CustomInput {\n        width: 320px;\n        font-family: 'IBM Plex Sans', sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ".concat(n?n$[300]:n$[900],";\n        background: ").concat(n?n$[900]:"#fff",";\n        border: 1px solid ").concat(n?n$[700]:n$[200],";\n        box-shadow: 0px 2px 2px ").concat(n?n$[900]:n$[50],";\n\n        &:hover {\n          border-color: ").concat(nZ[400],";\n        }\n\n        &:focus {\n          border-color: ").concat(nZ[400],";\n          box-shadow: 0 0 0 3px ").concat(n?nZ[600]:nZ[200],";\n        }\n\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n      ")})}var nH={50:"#E9F8FC",100:"#BDEBF4",200:"#99D8E5",300:"#66BACC",400:"#1F94AD",500:"#0D5463",600:"#094855",700:"#063C47",800:"#043039",900:"#022127"},nO={50:"#F3F6F9",100:"#E5EAF2",200:"#DAE2ED",300:"#C7D0DD",400:"#B0B8C4",500:"#9DA8B7",600:"#6B7A90",700:"#434D5B",800:"#303740",900:"#1C2025"};function nL(){var n="dark"===(0,nB.Z)().palette.mode;return(0,Z.jsx)("style",{children:"\n      .CustomInputIntroduction {\n        width: 320px;\n        font-family: 'IBM Plex Sans', sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ".concat(n?nO[300]:nO[900],";\n        background: ").concat(n?nO[900]:"#fff",";\n        border: 1px solid ").concat(n?nO[700]:nO[200],";\n        box-shadow: 0px 2px 4px ").concat(n?"rgba(0,0,0, 0.5)":"rgba(0,0,0, 0.05)",";\n\n        &:hover {\n          border-color: ").concat(nH[400],";\n        }\n\n        &:focus {\n          border-color: ").concat(nH[400],";\n          box-shadow: 0 0 0 3px ").concat(n?nH[600]:nH[200],";\n        }\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n      ")})}var nV=t(54286),n_=t(473510),nU={en:{description:"The Input component provides users with a field to enter and edit text.",location:"/docs/data/base/components/input/input.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<h1>Input</h1><p class="description">The Input component provides users with a field to enter and edit text.</p>\n\n',{component:"@mui/docs/ComponentLinkHeader",design:!1},{component:"modules/components/ComponentPageTabs.js"},'<h2 id="introduction"><a href="#introduction" class="title-link-to-anchor">Introduction<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="introduction"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>An input is a UI element that accepts text data from the user.\nThe Input component replaces the native HTML <code>&lt;input&gt;</code> tag, and offers expanded customization and accessibility features.\nIt can also be transformed into a <code>&lt;textarea&gt;</code> as needed.</p>\n',{demo:"UnstyledInputIntroduction",defaultCodeOpen:!1,bg:"gradient"},'<h2 id="component"><a href="#component" class="title-link-to-anchor">Component<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="component"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Input <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/Input\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Input behaves similarly to the native HTML <code>&lt;input&gt;</code>, except that it&#39;s nested inside of a root <code>&lt;div&gt;</code>—see <a href="#anatomy">Anatomy</a> for details.</p>\n<p>The following demo shows how to create and style an input component, including <code>placeholder</code> text:</p>\n',{demo:"UnstyledInputBasic",defaultCodeOpen:!1},'<h3 id="anatomy"><a href="#anatomy" class="title-link-to-anchor">Anatomy<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="anatomy"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The Input component is composed of a root <code>&lt;div&gt;</code> slot that houses one interior <code>&lt;input&gt;</code> slot:</p>\n<div class="MuiCode-root"><pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>base-Input-root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>base-Input-input<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="custom-structure"><a href="#custom-structure" class="title-link-to-anchor">Custom structure<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="custom-structure"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Use the <code>slots</code> prop to override the root or any other interior slot:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">slots</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token string">\'aside\'</span><span class="token punctuation">,</span> <span class="token literal-property property">input</span><span class="token operator">:</span> CustomInput <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>slots</code> prop is available on all non-utility Base components.\nSee <a href="/base-ui/guides/overriding-component-structure/">Overriding component structure</a> for full details.</p>\n\n</div></aside><p>Use the <code>slotProps</code> prop to pass custom props to internal slots.\nThe following code snippet applies a CSS class called <code>my-input</code> to the input slot:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">slotProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">\'my-input\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="usage-with-typescript"><a href="#usage-with-typescript" class="title-link-to-anchor">Usage with TypeScript<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="usage-with-typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>In TypeScript, you can specify the custom component type used in the <code>slots.root</code> as a generic parameter of the unstyled component.\nThis way, you can safely provide the custom root&#39;s props directly on the component:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token operator">&lt;</span>Input<span class="token operator">&lt;</span><span class="token keyword">typeof</span> CustomComponent<span class="token operator">></span> slots<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> root<span class="token operator">:</span> CustomComponent <span class="token punctuation">}</span><span class="token punctuation">}</span> customProp <span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The same applies for props specific to custom primitive elements:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token operator">&lt;</span>Input<span class="token operator">&lt;</span><span class="token string">\'textarea\'</span><span class="token operator">></span> slots<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> root<span class="token operator">:</span> <span class="token string">\'textarea\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> rows<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="hook"><a href="#hook" class="title-link-to-anchor">Hook<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="hook"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> useInput <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/base/useInput\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><span class="MuiCode-copy-label">Copy</span><span class="MuiCode-copied-label">Copied</span><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The <code>useInput</code> hook lets you apply the functionality of an Input to a fully custom component.\nIt returns props to be placed on the custom component, along with fields representing the component&#39;s internal state.</p>\n<p>Hooks <em>do not</em> support <a href="#custom-structure">slot props</a>, but they do support <a href="#customization">customization props</a>.</p>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Hooks give you the most room for customization, but require more work to implement.\nWith hooks, you can take full control over how your component is rendered, and define all the custom props and CSS classes you need.</p>\n<p>You may not need to use hooks unless you find that you&#39;re limited by the customization options of their component counterparts—for instance, if your component requires significantly different <a href="#anatomy">structure</a>.</p>\n\n</div></aside><p>The demo below shows how to use the <code>useInput</code> hook to create a custom input component that receives all the necessary props:</p>\n',{demo:"UseInput.js",defaultCodeOpen:!1},'<h2 id="customization"><a href="#customization" class="title-link-to-anchor">Customization<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="customization"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The following features can be used with both components and hooks.\nFor the sake of simplicity, demos, and code snippets primarily feature components.</p>\n\n</div></aside><h3 id="adornments"><a href="#adornments" class="title-link-to-anchor">Adornments<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="adornments"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You can use the <code>startAdornment</code> and <code>endAdornment</code> props to add a prefix, suffix, or an action to an Input.\nCommon use cases of adornments include:</p>\n<ul>\n<li>when an Input receives a specific unit of measure (like weight or currency)</li>\n<li>when an icon button toggles hiding/showing a password</li>\n</ul>\n<p>The following demo shows examples of both of these use cases:</p>\n',{demo:"InputAdornments.js",defaultCodeOpen:!1},'<h3 id="multiline"><a href="#multiline" class="title-link-to-anchor">Multiline<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="multiline"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The <code>multiline</code> prop transforms the <code>&lt;input&gt;</code> field into a <code>&lt;textarea&gt;</code> element, as shown below:</p>\n',{demo:"InputMultiline.js"},'<p>If you want the <code>&lt;textarea&gt;</code> to grow with the content, you can use the <a href="/base-ui/react-textarea-autosize/">Textarea Autosize</a> component within the input.</p>\n<p>When using Textarea Autosize, the height of the <code>&lt;textarea&gt;</code> element dynamically matches its content unless you set the <code>rows</code> prop.\nTo set minimum and maximum sizes, add the <code>minRows</code> and <code>maxRows</code> props.</p>\n<p>The following demo shows how to insert a Textarea Autosize component into an Input so that its height grows with the length of the content:</p>\n',{demo:"InputMultilineAutosize.js"},'<h2 id="common-examples"><a href="#common-examples" class="title-link-to-anchor">Common examples<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="common-examples"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="otp-input"><a href="#otp-input" class="title-link-to-anchor">OTP Input<span class="anchor-icon"><svg><use xlink:href="#anchor-link-icon" /></svg></span></a><button title="Post a comment" class="comment-link" data-feedback-hash="otp-input"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The following demo shows how to build a one-time password component using <code>Input</code>.</p>\n',{demo:"OTPInput.js"}],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Component",level:2,hash:"component",children:[{text:"Anatomy",level:3,hash:"anatomy"},{text:"Custom structure",level:3,hash:"custom-structure"},{text:"Usage with TypeScript",level:3,hash:"usage-with-typescript"}]},{text:"Hook",level:2,hash:"hook",children:[]},{text:"Customization",level:2,hash:"customization",children:[{text:"Adornments",level:3,hash:"adornments"},{text:"Multiline",level:3,hash:"multiline"}]},{text:"Common examples",level:2,hash:"common-examples",children:[{text:"OTP Input",level:3,hash:"otp-input"}]}],title:"React Input component and hook",headers:{productId:"base-ui",title:"React Input component and hook",components:["Input"],hooks:["useInput"],githubLabel:"component: input"}}},nN={UnstyledInputIntroduction:{module:"./UnstyledInputIntroduction/system/index.js",raw:"import * as React from 'react';\nimport { Input as BaseInput } from '@mui/base/Input';\nimport { styled } from '@mui/system';\n\nconst Input = React.forwardRef(function CustomInput(props, ref) {\n  return <BaseInput slots={{ input: InputElement }} {...props} ref={ref} />;\n});\n\nexport default function UnstyledInputIntroduction() {\n  return <Input aria-label=\"Demo input\" placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#b6daff',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst InputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 12px;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n",moduleTailwind:"./UnstyledInputIntroduction/tailwind/index.js",rawTailwind:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input as BaseInput } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\nimport clsx from 'clsx';\n\nexport default function UnstyledInputIntroduction() {\n  return <Input aria-label=\"Demo input\" placeholder=\"Type something…\" />;\n}\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nconst resolveSlotProps = (fn, args) => (typeof fn === 'function' ? fn(args) : fn);\n\nconst Input = React.forwardRef((props, ref) => {\n  // Replace this with your app logic for determining dark modes\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <BaseInput\n      ref={ref}\n      {...props}\n      className={clsx(isDarkMode ? 'dark' : '', props.className)}\n      slotProps={{\n        ...props.slotProps,\n        input: (ownerState) => {\n          const resolvedSlotProps = resolveSlotProps(\n            props.slotProps?.input,\n            ownerState,\n          );\n          return {\n            ...resolvedSlotProps,\n            className: clsx(\n              'w-80 text-sm font-normal font-sans leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple dark:outline-purple-600 focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-600 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0',\n              resolvedSlotProps?.className,\n            ),\n          };\n        },\n      }}\n    />\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  }),\n};\n",moduleTSTailwind:"./UnstyledInputIntroduction/tailwind/index.tsx",rawTailwindTS:"import * as React from 'react';\nimport { Input as BaseInput, InputProps } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\nimport clsx from 'clsx';\n\nexport default function UnstyledInputIntroduction() {\n  return <Input aria-label=\"Demo input\" placeholder=\"Type something…\" />;\n}\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nconst resolveSlotProps = (fn: any, args: any) =>\n  typeof fn === 'function' ? fn(args) : fn;\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>((props, ref) => {\n  // Replace this with your app logic for determining dark modes\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <BaseInput\n      ref={ref}\n      {...props}\n      className={clsx(isDarkMode ? 'dark' : '', props.className)}\n      slotProps={{\n        ...props.slotProps,\n        input: (ownerState) => {\n          const resolvedSlotProps = resolveSlotProps(\n            props.slotProps?.input,\n            ownerState,\n          );\n          return {\n            ...resolvedSlotProps,\n            className: clsx(\n              'w-80 text-sm font-normal font-sans leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple dark:outline-purple-600 focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-600 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0',\n              resolvedSlotProps?.className,\n            ),\n          };\n        },\n      }}\n    />\n  );\n});\n",moduleCSS:"./UnstyledInputIntroduction/css/index.js",rawCSS:"import * as React from 'react';\nimport { Input } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\n\nexport default function UnstyledInputIntroduction() {\n  return (\n    <React.Fragment>\n      <Input\n        slotProps={{ input: { className: 'CustomInputIntroduction' } }}\n        aria-label=\"Demo input\"\n        placeholder=\"Type something…\"\n      />\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>\n      {`\n      .CustomInputIntroduction {\n        width: 320px;\n        font-family: 'IBM Plex Sans', sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        box-shadow: 0px 2px 4px ${\n          isDarkMode ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n        };\n\n        &:hover {\n          border-color: ${cyan[400]};\n        }\n\n        &:focus {\n          border-color: ${cyan[400]};\n          box-shadow: 0 0 0 3px ${isDarkMode ? cyan[600] : cyan[200]};\n        }\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n      `}\n    </style>\n  );\n}\n",moduleTSCSS:"./UnstyledInputIntroduction/css/index.tsx",rawCSSTS:"import * as React from 'react';\nimport { Input } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\n\nexport default function UnstyledInputIntroduction() {\n  return (\n    <React.Fragment>\n      <Input\n        slotProps={{ input: { className: 'CustomInputIntroduction' } }}\n        aria-label=\"Demo input\"\n        placeholder=\"Type something…\"\n      />\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>\n      {`\n      .CustomInputIntroduction {\n        width: 320px;\n        font-family: 'IBM Plex Sans', sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        box-shadow: 0px 2px 4px ${\n          isDarkMode ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n        };\n\n        &:hover {\n          border-color: ${cyan[400]};\n        }\n\n        &:focus {\n          border-color: ${cyan[400]};\n          box-shadow: 0 0 0 3px ${isDarkMode ? cyan[600] : cyan[200]};\n        }\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n      `}\n    </style>\n  );\n}\n",tailwindJsxPreview:'<Input aria-label="Demo input" placeholder="Type something…" />',cssJsxPreview:'<React.Fragment>\n  <Input\n    slotProps={{ input: { className: \'CustomInputIntroduction\' } }}\n    aria-label="Demo input"\n    placeholder="Type something…"\n  />\n  <Styles />\n</React.Fragment>',jsxPreview:'<Input aria-label="Demo input" placeholder="Type something…" />',moduleTS:"./UnstyledInputIntroduction/system/index.js",rawTS:"import * as React from 'react';\nimport { Input as BaseInput } from '@mui/base/Input';\nimport { styled } from '@mui/system';\n\nconst Input = React.forwardRef(function CustomInput(\n  props: React.InputHTMLAttributes<HTMLInputElement>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return <BaseInput slots={{ input: InputElement }} {...props} ref={ref} />;\n});\n\nexport default function UnstyledInputIntroduction() {\n  return <Input aria-label=\"Demo input\" placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#b6daff',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  900: '#003A75',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst InputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 12px;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n"},UnstyledInputBasic:{module:"./UnstyledInputBasic/system/index.js",raw:"import * as React from 'react';\nimport { Input as BaseInput } from '@mui/base/Input';\nimport { styled } from '@mui/system';\n\nconst Input = React.forwardRef(function CustomInput(props, ref) {\n  return <BaseInput slots={{ input: InputElement }} {...props} ref={ref} />;\n});\n\nexport default function UnstyledInputBasic() {\n  return <Input aria-label=\"Demo input\" placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst InputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 12px;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 2px ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n",moduleTailwind:"./UnstyledInputBasic/tailwind/index.js",rawTailwind:"import * as React from 'react';\nimport { Input } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function UnstyledInputBasic() {\n  // Replace this with your app logic for determining dark modes\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <Input\n      className={isDarkMode ? 'dark' : ''}\n      slotProps={{\n        input: {\n          className:\n            'w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0',\n        },\n      }}\n      aria-label=\"Demo input\"\n      placeholder=\"Type something…\"\n    />\n  );\n}\n",moduleTSTailwind:"./UnstyledInputBasic/tailwind/index.tsx",rawTailwindTS:"import * as React from 'react';\nimport { Input } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nexport default function UnstyledInputBasic() {\n  // Replace this with your app logic for determining dark modes\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <Input\n      className={isDarkMode ? 'dark' : ''}\n      slotProps={{\n        input: {\n          className:\n            'w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0',\n        },\n      }}\n      aria-label=\"Demo input\"\n      placeholder=\"Type something…\"\n    />\n  );\n}\n",moduleCSS:"./UnstyledInputBasic/css/index.js",rawCSS:"import * as React from 'react';\nimport { Input } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\n\nexport default function UnstyledInputBasic() {\n  return (\n    <React.Fragment>\n      <Input\n        slotProps={{ input: { className: 'CustomInput' } }}\n        aria-label=\"Demo input\"\n        placeholder=\"Type something…\"\n      />\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>\n      {`\n      .CustomInput {\n        width: 320px;\n        font-family: 'IBM Plex Sans', sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        box-shadow: 0px 2px 2px ${isDarkMode ? grey[900] : grey[50]};\n\n        &:hover {\n          border-color: ${cyan[400]};\n        }\n\n        &:focus {\n          border-color: ${cyan[400]};\n          box-shadow: 0 0 0 3px ${isDarkMode ? cyan[600] : cyan[200]};\n        }\n\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n      `}\n    </style>\n  );\n}\n",moduleTSCSS:"./UnstyledInputBasic/css/index.tsx",rawCSSTS:"import * as React from 'react';\nimport { Input } from '@mui/base/Input';\nimport { useTheme } from '@mui/system';\n\nexport default function UnstyledInputBasic() {\n  return (\n    <React.Fragment>\n      <Input\n        slotProps={{ input: { className: 'CustomInput' } }}\n        aria-label=\"Demo input\"\n        placeholder=\"Type something…\"\n      />\n      <Styles />\n    </React.Fragment>\n  );\n}\n\nconst cyan = {\n  50: '#E9F8FC',\n  100: '#BDEBF4',\n  200: '#99D8E5',\n  300: '#66BACC',\n  400: '#1F94AD',\n  500: '#0D5463',\n  600: '#094855',\n  700: '#063C47',\n  800: '#043039',\n  900: '#022127',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nfunction useIsDarkMode() {\n  const theme = useTheme();\n  return theme.palette.mode === 'dark';\n}\n\nfunction Styles() {\n  // Replace this with your app logic for determining dark mode\n  const isDarkMode = useIsDarkMode();\n\n  return (\n    <style>\n      {`\n      .CustomInput {\n        width: 320px;\n        font-family: 'IBM Plex Sans', sans-serif;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.5;\n        padding: 8px 12px;\n        border-radius: 8px;\n        color: ${isDarkMode ? grey[300] : grey[900]};\n        background: ${isDarkMode ? grey[900] : '#fff'};\n        border: 1px solid ${isDarkMode ? grey[700] : grey[200]};\n        box-shadow: 0px 2px 2px ${isDarkMode ? grey[900] : grey[50]};\n\n        &:hover {\n          border-color: ${cyan[400]};\n        }\n\n        &:focus {\n          border-color: ${cyan[400]};\n          box-shadow: 0 0 0 3px ${isDarkMode ? cyan[600] : cyan[200]};\n        }\n\n        &:focus-visible {\n          outline: 0;\n        }\n      }\n      `}\n    </style>\n  );\n}\n",tailwindJsxPreview:"<Input\n  className={isDarkMode ? 'dark' : ''}\n  slotProps={{\n    input: {\n      className:\n        'w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0',\n    },\n  }}\n  aria-label=\"Demo input\"\n  placeholder=\"Type something…\"\n/>",cssJsxPreview:'<React.Fragment>\n  <Input\n    slotProps={{ input: { className: \'CustomInput\' } }}\n    aria-label="Demo input"\n    placeholder="Type something…"\n  />\n  <Styles />\n</React.Fragment>',jsxPreview:'<Input aria-label="Demo input" placeholder="Type something…" />',moduleTS:"./UnstyledInputBasic/system/index.js",rawTS:"import * as React from 'react';\nimport { Input as BaseInput, InputProps } from '@mui/base/Input';\nimport { styled } from '@mui/system';\n\nconst Input = React.forwardRef(function CustomInput(\n  props: InputProps,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return <BaseInput slots={{ input: InputElement }} {...props} ref={ref} />;\n});\n\nexport default function UnstyledInputBasic() {\n  return <Input aria-label=\"Demo input\" placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst InputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 12px;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 2px ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n"},"UseInput.js":{module:"./UseInput.js",raw:"import * as React from 'react';\nimport { useInput } from '@mui/base/useInput';\nimport { styled } from '@mui/system';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\n\nconst CustomInput = React.forwardRef(function CustomInput(props, ref) {\n  const { getRootProps, getInputProps } = useInput(props);\n\n  const inputProps = getInputProps();\n\n  // Make sure that both the forwarded ref and the ref returned from the getInputProps are applied on the input element\n  inputProps.ref = useForkRef(inputProps.ref, ref);\n\n  return (\n    <div {...getRootProps()}>\n      <StyledInputElement {...props} {...inputProps} />\n    </div>\n  );\n});\n\nexport default function UseInput() {\n  return <CustomInput aria-label=\"Demo input\" placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 12px;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n",jsxPreview:'<CustomInput aria-label="Demo input" placeholder="Type something…" />',moduleTS:"./UseInput.js",rawTS:"import * as React from 'react';\nimport { useInput } from '@mui/base/useInput';\nimport { styled } from '@mui/system';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\n\nconst CustomInput = React.forwardRef(function CustomInput(\n  props: React.InputHTMLAttributes<HTMLInputElement>,\n  ref: React.ForwardedRef<HTMLInputElement>,\n) {\n  const { getRootProps, getInputProps } = useInput(props);\n\n  const inputProps = getInputProps();\n\n  // Make sure that both the forwarded ref and the ref returned from the getInputProps are applied on the input element\n  inputProps.ref = useForkRef(inputProps.ref, ref);\n\n  return (\n    <div {...getRootProps()}>\n      <StyledInputElement {...props} {...inputProps} />\n    </div>\n  );\n});\n\nexport default function UseInput() {\n  return <CustomInput aria-label=\"Demo input\" placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 12px;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n"},"InputAdornments.js":{module:"./InputAdornments.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, styled } from '@mui/system';\nimport { Button } from '@mui/base/Button';\nimport { Input as BaseInput, inputClasses } from '@mui/base/Input';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nconst Input = React.forwardRef(function CustomInput(props, ref) {\n  const { slots, ...other } = props;\n  return (\n    <BaseInput\n      slots={{\n        root: InputRoot,\n        input: InputElement,\n        ...slots,\n      }}\n      {...other}\n      ref={ref}\n    />\n  );\n});\n\nInput.propTypes = {\n  /**\n   * The components used for each slot inside the InputBase.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType,\n    textarea: PropTypes.elementType,\n  }),\n};\n\nexport default function InputAdornments() {\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: { xs: 'column', sm: 'row' },\n        gap: 2,\n      }}\n    >\n      <Input\n        id=\"outlined-start-adornment\"\n        startAdornment={<InputAdornment>kg</InputAdornment>}\n      />\n      <Input\n        id=\"outlined-adornment-password\"\n        type={values.showPassword ? 'text' : 'password'}\n        value={values.password}\n        onChange={handleChange('password')}\n        endAdornment={\n          <InputAdornment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n            >\n              {values.showPassword ? (\n                <VisibilityOff fontSize=\"small\" />\n              ) : (\n                <Visibility fontSize=\"small\" />\n              )}\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </Box>\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst InputRoot = styled('div')(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n  &.${inputClasses.focused} {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst InputElement = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  flex-grow: 1;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n`,\n);\n\nconst IconButton = styled(Button)(\n  ({ theme }) => `\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background: inherit;\n  cursor: pointer;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[700]};\n  `,\n);\n\nconst InputAdornment = styled('div')`\n  margin: 8px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n`;\n",moduleTS:"./InputAdornments.js",rawTS:"import * as React from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Button } from '@mui/base/Button';\nimport { Input as BaseInput, InputProps, inputClasses } from '@mui/base/Input';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nconst Input = React.forwardRef(function CustomInput(\n  props: InputProps,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const { slots, ...other } = props;\n  return (\n    <BaseInput\n      slots={{\n        root: InputRoot,\n        input: InputElement,\n        ...slots,\n      }}\n      {...other}\n      ref={ref}\n    />\n  );\n});\n\ninterface State {\n  amount: string;\n  password: string;\n  weight: string;\n  weightRange: string;\n  showPassword: boolean;\n}\n\nexport default function InputAdornments() {\n  const [values, setValues] = React.useState<State>({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange =\n    (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValues({ ...values, [prop]: event.target.value });\n    };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: { xs: 'column', sm: 'row' },\n        gap: 2,\n      }}\n    >\n      <Input\n        id=\"outlined-start-adornment\"\n        startAdornment={<InputAdornment>kg</InputAdornment>}\n      />\n      <Input\n        id=\"outlined-adornment-password\"\n        type={values.showPassword ? 'text' : 'password'}\n        value={values.password}\n        onChange={handleChange('password')}\n        endAdornment={\n          <InputAdornment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n            >\n              {values.showPassword ? (\n                <VisibilityOff fontSize=\"small\" />\n              ) : (\n                <Visibility fontSize=\"small\" />\n              )}\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </Box>\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst InputRoot = styled('div')(\n  ({ theme }) => `\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-weight: 400;\n  border-radius: 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[500]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n  &.${inputClasses.focused} {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n\nconst InputElement = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  flex-grow: 1;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: inherit;\n  border: none;\n  border-radius: inherit;\n  padding: 8px 12px;\n  outline: 0;\n`,\n);\n\nconst IconButton = styled(Button)(\n  ({ theme }) => `\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background: inherit;\n  cursor: pointer;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[700]};\n  `,\n);\n\nconst InputAdornment = styled('div')`\n  margin: 8px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n`;\n"},"InputMultiline.js":{module:"./InputMultiline.js",raw:"import * as React from 'react';\nimport { Input as BaseInput } from '@mui/base/Input';\nimport { styled } from '@mui/system';\n\nconst Input = React.forwardRef(function CustomInput(props, ref) {\n  return (\n    <BaseInput\n      slots={{\n        root: RootDiv,\n        input: 'input',\n        textarea: TextareaElement,\n      }}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nexport default function InputMultiline() {\n  return <Input aria-label=\"Demo input\" multiline placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst RootDiv = styled('div')`\n  display: flex;\n  max-width: 100%;\n`;\n\nconst TextareaElement = styled('textarea', {\n  shouldForwardProp: (prop) =>\n    !['ownerState', 'minRows', 'maxRows'].includes(prop.toString()),\n})(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n  padding: 8px 12px;\n  border-radius: 8px 8px 0 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n",jsxPreview:'<Input aria-label="Demo input" multiline placeholder="Type something…" />',moduleTS:"./InputMultiline.js",rawTS:"import * as React from 'react';\nimport { Input as BaseInput, InputProps } from '@mui/base/Input';\nimport { styled } from '@mui/system';\n\nconst Input = React.forwardRef(function CustomInput(\n  props: InputProps,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return (\n    <BaseInput\n      slots={{\n        root: RootDiv,\n        input: 'input',\n        textarea: TextareaElement,\n      }}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nexport default function InputMultiline() {\n  return <Input aria-label=\"Demo input\" multiline placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst RootDiv = styled('div')`\n  display: flex;\n  max-width: 100%;\n`;\n\nconst TextareaElement = styled('textarea', {\n  shouldForwardProp: (prop) =>\n    !['ownerState', 'minRows', 'maxRows'].includes(prop.toString()),\n})(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n  padding: 8px 12px;\n  border-radius: 8px 8px 0 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[700] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n"},"InputMultilineAutosize.js":{module:"./InputMultilineAutosize.js",raw:"import * as React from 'react';\nimport { Input as BaseInput } from '@mui/base/Input';\nimport { TextareaAutosize } from '@mui/base/TextareaAutosize';\nimport { styled } from '@mui/system';\n\nconst Input = React.forwardRef(function CustomInput(props, ref) {\n  return (\n    <BaseInput\n      slots={{\n        root: RootDiv,\n        input: 'input',\n        textarea: TextareaElement,\n      }}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nexport default function InputMultilineAutosize() {\n  return <Input aria-label=\"Demo input\" multiline placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst RootDiv = styled('div')`\n  display: flex;\n  max-width: 100%;\n`;\n\nconst TextareaElement = styled(TextareaAutosize)(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n  padding: 8px 12px;\n  border-radius: 8px 8px 0 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n",jsxPreview:'<Input aria-label="Demo input" multiline placeholder="Type something…" />',moduleTS:"./InputMultilineAutosize.js",rawTS:"import * as React from 'react';\nimport { Input as BaseInput, InputProps } from '@mui/base/Input';\nimport { TextareaAutosize } from '@mui/base/TextareaAutosize';\nimport { styled } from '@mui/system';\n\nconst Input = React.forwardRef(function CustomInput(\n  props: InputProps,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return (\n    <BaseInput\n      slots={{\n        root: RootDiv,\n        input: 'input',\n        textarea: TextareaElement,\n      }}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nexport default function InputMultilineAutosize() {\n  return <Input aria-label=\"Demo input\" multiline placeholder=\"Type something…\" />;\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst RootDiv = styled('div')`\n  display: flex;\n  max-width: 100%;\n`;\n\nconst TextareaElement = styled(TextareaAutosize)(\n  ({ theme }) => `\n  width: 320px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n  padding: 8px 12px;\n  border-radius: 8px 8px 0 8px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n"},"OTPInput.js":{module:"./OTPInput.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input as BaseInput } from '@mui/base/Input';\nimport { Box, styled } from '@mui/system';\n\nfunction OTP({ separator, length, value, onChange }) {\n  const inputRefs = React.useRef(new Array(length).fill(null));\n\n  const focusInput = (targetIndex) => {\n    const targetInput = inputRefs.current[targetIndex];\n    targetInput.focus();\n  };\n\n  const selectInput = (targetIndex) => {\n    const targetInput = inputRefs.current[targetIndex];\n    targetInput.select();\n  };\n\n  const handleKeyDown = (event, currentIndex) => {\n    switch (event.key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n      case ' ':\n        event.preventDefault();\n        break;\n      case 'ArrowLeft':\n        event.preventDefault();\n        if (currentIndex > 0) {\n          focusInput(currentIndex - 1);\n          selectInput(currentIndex - 1);\n        }\n        break;\n      case 'ArrowRight':\n        event.preventDefault();\n        if (currentIndex < length - 1) {\n          focusInput(currentIndex + 1);\n          selectInput(currentIndex + 1);\n        }\n        break;\n      case 'Delete':\n        event.preventDefault();\n        onChange((prevOtp) => {\n          const otp =\n            prevOtp.slice(0, currentIndex) + prevOtp.slice(currentIndex + 1);\n          return otp;\n        });\n\n        break;\n      case 'Backspace':\n        event.preventDefault();\n        if (currentIndex > 0) {\n          focusInput(currentIndex - 1);\n          selectInput(currentIndex - 1);\n        }\n\n        onChange((prevOtp) => {\n          const otp =\n            prevOtp.slice(0, currentIndex) + prevOtp.slice(currentIndex + 1);\n          return otp;\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleChange = (event, currentIndex) => {\n    const currentValue = event.target.value;\n    let indexToEnter = 0;\n\n    while (indexToEnter <= currentIndex) {\n      if (inputRefs.current[indexToEnter].value && indexToEnter < currentIndex) {\n        indexToEnter += 1;\n      } else {\n        break;\n      }\n    }\n    onChange((prev) => {\n      const otpArray = prev.split('');\n      const lastValue = currentValue[currentValue.length - 1];\n      otpArray[indexToEnter] = lastValue;\n      return otpArray.join('');\n    });\n    if (currentValue !== '') {\n      if (currentIndex < length - 1) {\n        focusInput(currentIndex + 1);\n      }\n    }\n  };\n\n  const handleClick = (event, currentIndex) => {\n    selectInput(currentIndex);\n  };\n\n  const handlePaste = (event, currentIndex) => {\n    event.preventDefault();\n    const clipboardData = event.clipboardData;\n\n    // Check if there is text data in the clipboard\n    if (clipboardData.types.includes('text/plain')) {\n      let pastedText = clipboardData.getData('text/plain');\n      pastedText = pastedText.substring(0, length).trim();\n      let indexToEnter = 0;\n\n      while (indexToEnter <= currentIndex) {\n        if (inputRefs.current[indexToEnter].value && indexToEnter < currentIndex) {\n          indexToEnter += 1;\n        } else {\n          break;\n        }\n      }\n\n      const otpArray = value.split('');\n\n      for (let i = indexToEnter; i < length; i += 1) {\n        const lastValue = pastedText[i - indexToEnter] ?? ' ';\n        otpArray[i] = lastValue;\n      }\n\n      onChange(otpArray.join(''));\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\n      {new Array(length).fill(null).map((_, index) => (\n        <React.Fragment key={index}>\n          <BaseInput\n            slots={{\n              input: InputElement,\n            }}\n            aria-label={`Digit ${index + 1} of OTP`}\n            slotProps={{\n              input: {\n                ref: (ele) => {\n                  inputRefs.current[index] = ele;\n                },\n                onKeyDown: (event) => handleKeyDown(event, index),\n                onChange: (event) => handleChange(event, index),\n                onClick: (event) => handleClick(event, index),\n                onPaste: (event) => handlePaste(event, index),\n                value: value[index] ?? '',\n              },\n            }}\n          />\n          {index === length - 1 ? null : separator}\n        </React.Fragment>\n      ))}\n    </Box>\n  );\n}\n\nOTP.propTypes = {\n  length: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  separator: PropTypes.node,\n  value: PropTypes.string.isRequired,\n};\n\nexport default function OTPInput() {\n  const [otp, setOtp] = React.useState('');\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n      }}\n    >\n      <OTP separator={<span>-</span>} value={otp} onChange={setOtp} length={5} />\n      <span>Entered value: {otp}</span>\n    </Box>\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst InputElement = styled('input')(\n  ({ theme }) => `\n  width: 40px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 0px;\n  border-radius: 8px;\n  text-align: center;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n",jsxPreview:"<OTP separator={<span>-</span>} value={otp} onChange={setOtp} length={5} />\n<span>Entered value: {otp}</span>",moduleTS:"./OTPInput.js",rawTS:"import * as React from 'react';\nimport { Input as BaseInput } from '@mui/base/Input';\nimport { Box, styled } from '@mui/system';\n\nfunction OTP({\n  separator,\n  length,\n  value,\n  onChange,\n}: {\n  separator: React.ReactNode;\n  length: number;\n  value: string;\n  onChange: React.Dispatch<React.SetStateAction<string>>;\n}) {\n  const inputRefs = React.useRef<HTMLInputElement[]>(new Array(length).fill(null));\n\n  const focusInput = (targetIndex: number) => {\n    const targetInput = inputRefs.current[targetIndex];\n    targetInput.focus();\n  };\n\n  const selectInput = (targetIndex: number) => {\n    const targetInput = inputRefs.current[targetIndex];\n    targetInput.select();\n  };\n\n  const handleKeyDown = (\n    event: React.KeyboardEvent<HTMLInputElement>,\n    currentIndex: number,\n  ) => {\n    switch (event.key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n      case ' ':\n        event.preventDefault();\n        break;\n      case 'ArrowLeft':\n        event.preventDefault();\n        if (currentIndex > 0) {\n          focusInput(currentIndex - 1);\n          selectInput(currentIndex - 1);\n        }\n        break;\n      case 'ArrowRight':\n        event.preventDefault();\n        if (currentIndex < length - 1) {\n          focusInput(currentIndex + 1);\n          selectInput(currentIndex + 1);\n        }\n        break;\n      case 'Delete':\n        event.preventDefault();\n        onChange((prevOtp) => {\n          const otp =\n            prevOtp.slice(0, currentIndex) + prevOtp.slice(currentIndex + 1);\n          return otp;\n        });\n\n        break;\n      case 'Backspace':\n        event.preventDefault();\n        if (currentIndex > 0) {\n          focusInput(currentIndex - 1);\n          selectInput(currentIndex - 1);\n        }\n\n        onChange((prevOtp) => {\n          const otp =\n            prevOtp.slice(0, currentIndex) + prevOtp.slice(currentIndex + 1);\n          return otp;\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    currentIndex: number,\n  ) => {\n    const currentValue = event.target.value;\n    let indexToEnter = 0;\n\n    while (indexToEnter <= currentIndex) {\n      if (inputRefs.current[indexToEnter].value && indexToEnter < currentIndex) {\n        indexToEnter += 1;\n      } else {\n        break;\n      }\n    }\n    onChange((prev) => {\n      const otpArray = prev.split('');\n      const lastValue = currentValue[currentValue.length - 1];\n      otpArray[indexToEnter] = lastValue;\n      return otpArray.join('');\n    });\n    if (currentValue !== '') {\n      if (currentIndex < length - 1) {\n        focusInput(currentIndex + 1);\n      }\n    }\n  };\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLInputElement, MouseEvent>,\n    currentIndex: number,\n  ) => {\n    selectInput(currentIndex);\n  };\n\n  const handlePaste = (\n    event: React.ClipboardEvent<HTMLInputElement>,\n    currentIndex: number,\n  ) => {\n    event.preventDefault();\n    const clipboardData = event.clipboardData;\n\n    // Check if there is text data in the clipboard\n    if (clipboardData.types.includes('text/plain')) {\n      let pastedText = clipboardData.getData('text/plain');\n      pastedText = pastedText.substring(0, length).trim();\n      let indexToEnter = 0;\n\n      while (indexToEnter <= currentIndex) {\n        if (inputRefs.current[indexToEnter].value && indexToEnter < currentIndex) {\n          indexToEnter += 1;\n        } else {\n          break;\n        }\n      }\n\n      const otpArray = value.split('');\n\n      for (let i = indexToEnter; i < length; i += 1) {\n        const lastValue = pastedText[i - indexToEnter] ?? ' ';\n        otpArray[i] = lastValue;\n      }\n\n      onChange(otpArray.join(''));\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\n      {new Array(length).fill(null).map((_, index) => (\n        <React.Fragment key={index}>\n          <BaseInput\n            slots={{\n              input: InputElement,\n            }}\n            aria-label={`Digit ${index + 1} of OTP`}\n            slotProps={{\n              input: {\n                ref: (ele) => {\n                  inputRefs.current[index] = ele!;\n                },\n                onKeyDown: (event) => handleKeyDown(event, index),\n                onChange: (event) => handleChange(event, index),\n                onClick: (event) => handleClick(event, index),\n                onPaste: (event) => handlePaste(event, index),\n                value: value[index] ?? '',\n              },\n            }}\n          />\n          {index === length - 1 ? null : separator}\n        </React.Fragment>\n      ))}\n    </Box>\n  );\n}\n\nexport default function OTPInput() {\n  const [otp, setOtp] = React.useState('');\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n      }}\n    >\n      <OTP separator={<span>-</span>} value={otp} onChange={setOtp} length={5} />\n      <span>Entered value: {otp}</span>\n    </Box>\n  );\n}\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst InputElement = styled('input')(\n  ({ theme }) => `\n  width: 40px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 0px;\n  border-radius: 8px;\n  text-align: center;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\n  }\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n"}};nN.scope={process:{},import:{react:w,"@mui/base/Input":I,"@mui/system":C,"@mui/base/useInput":D,"@mui/utils":F,"prop-types":B,"@mui/base/Button":E,"@mui/icons-material/Visibility":A,"@mui/icons-material/VisibilityOff":T,"@mui/base/TextareaAutosize":M,clsx:P}};var nK={"./UnstyledInputIntroduction/system/index.js":function(){return o||(o=(0,Z.jsx)($,{"aria-label":"Demo input",placeholder:"Type something…"}))},"./UnstyledInputBasic/system/index.js":function(){return a||(a=(0,Z.jsx)(L,{"aria-label":"Demo input",placeholder:"Type something…"}))},"./UseInput.js":function(){return r||(r=(0,Z.jsx)(q,{"aria-label":"Demo input",placeholder:"Type something…"}))},"./InputAdornments.js":function(){var n=k.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),e=(0,Q.Z)(n,2),t=e[0],o=e[1];return(0,Z.jsxs)(ne.Z,{sx:{display:"flex",flexDirection:{xs:"column",sm:"row"},gap:2},children:[s||(s=(0,Z.jsx)(nr,{id:"outlined-start-adornment",startAdornment:(0,Z.jsx)(nc,{children:"kg"})})),(0,Z.jsx)(nr,{id:"outlined-adornment-password",type:t.showPassword?"text":"password",value:t.password,onChange:function(n){o((0,R.Z)((0,R.Z)({},t),{},(0,Y.Z)({},"password",n.target.value)))},endAdornment:(0,Z.jsx)(nc,{children:(0,Z.jsx)(nu,{size:"small","aria-label":"toggle password visibility",onClick:function(){o((0,R.Z)((0,R.Z)({},t),{},{showPassword:!t.showPassword}))},onMouseDown:function(n){n.preventDefault()},children:t.showPassword?i||(i=(0,Z.jsx)(T.default,{fontSize:"small"})):l||(l=(0,Z.jsx)(A.default,{fontSize:"small"}))})})})]})},"./InputMultiline.js":function(){return u||(u=(0,Z.jsx)(nd,{"aria-label":"Demo input",multiline:!0,placeholder:"Type something…"}))},"./InputMultilineAutosize.js":function(){return d||(d=(0,Z.jsx)(nb,{"aria-label":"Demo input",multiline:!0,placeholder:"Type something…"}))},"./OTPInput.js":function(){var n=k.useState(""),e=(0,Q.Z)(n,2),t=e[0],o=e[1];return(0,Z.jsxs)(ne.Z,{sx:{display:"flex",flexDirection:"column",gap:2},children:[(0,Z.jsx)(nI,{separator:f||(f=(0,Z.jsx)("span",{children:"-"})),value:t,onChange:o,length:5}),(0,Z.jsxs)("span",{children:["Entered value: ",t]})]})},"./UnstyledInputIntroduction/tailwind/index.js":function(){return h||(h=(0,Z.jsx)(nE,{"aria-label":"Demo input",placeholder:"Type something…"}))},"./UnstyledInputBasic/tailwind/index.js":function(){var n="dark"===(0,nB.Z)().palette.mode;return(0,Z.jsx)(j.I,{className:n?"dark":"",slotProps:{input:{className:"w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0"}},"aria-label":"Demo input",placeholder:"Type something…"})},"./UnstyledInputIntroduction/tailwind/index.tsx":function(){return x||(x=(0,Z.jsx)(nA,{"aria-label":"Demo input",placeholder:"Type something…"}))},"./UnstyledInputBasic/tailwind/index.tsx":function(){var n="dark"===(0,nB.Z)().palette.mode;return(0,Z.jsx)(j.I,{className:n?"dark":"",slotProps:{input:{className:"w-80 text-sm font-sans font-normal leading-5 px-3 py-2 rounded-lg shadow-md shadow-slate-100 dark:shadow-slate-900 focus:shadow-outline-purple dark:focus:shadow-outline-purple focus:shadow-lg border border-solid border-slate-300 hover:border-purple-500 dark:hover:border-purple-500 focus:border-purple-500 dark:focus:border-purple-500 dark:border-slate-600 bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 focus-visible:outline-0"}},"aria-label":"Demo input",placeholder:"Type something…"})},"./UnstyledInputBasic/css/index.js":function(){return(0,Z.jsxs)(k.Fragment,{children:[(0,Z.jsx)(j.I,{slotProps:{input:{className:"CustomInput"}},"aria-label":"Demo input",placeholder:"Type something…"}),g||(g=(0,Z.jsx)(nP,{}))]})},"./UnstyledInputIntroduction/css/index.js":function(){return(0,Z.jsxs)(k.Fragment,{children:[(0,Z.jsx)(j.I,{slotProps:{input:{className:"CustomInputIntroduction"}},"aria-label":"Demo input",placeholder:"Type something…"}),b||(b=(0,Z.jsx)(nS,{}))]})},"./UnstyledInputBasic/css/index.tsx":function(){return(0,Z.jsxs)(k.Fragment,{children:[(0,Z.jsx)(j.I,{slotProps:{input:{className:"CustomInput"}},"aria-label":"Demo input",placeholder:"Type something…"}),y||(y=(0,Z.jsx)(nz,{}))]})},"./UnstyledInputIntroduction/css/index.tsx":function(){return(0,Z.jsxs)(k.Fragment,{children:[(0,Z.jsx)(j.I,{slotProps:{input:{className:"CustomInputIntroduction"}},"aria-label":"Demo input",placeholder:"Type something…"}),v||(v=(0,Z.jsx)(nL,{}))]})}},nq={"@mui/docs/ComponentLinkHeader":nV.Z,"modules/components/ComponentPageTabs.js":n_.Z}},588732:function(n,e,t){"use strict";t.d(e,{U:function(){return o}});var o=t(470079).createContext(void 0)},185403:function(n,e,t){"use strict";t.d(e,{N:function(){return r}});var o=t(470079),a=t(588732);function r(){return o.useContext(a.U)}},418887:function(n,e,t){"use strict";t.d(e,{I:function(){return h}});var o=t(778521),a=t(577903),r=t(470079),s=t(306806),i=t(748077),l=t(672330),p=t(996125),u=t(306029),c=t(851692),d=t(735250),m=["aria-describedby","aria-label","aria-labelledby","autoComplete","autoFocus","className","defaultValue","disabled","endAdornment","error","id","multiline","name","onClick","onChange","onKeyDown","onKeyUp","onFocus","onBlur","placeholder","readOnly","required","startAdornment","value","type","rows","slotProps","slots","minRows","maxRows"],f=function(n){var e=n.disabled,t=n.error,o=n.focused,a=n.formControlContext,r=n.multiline,s=n.startAdornment,l=n.endAdornment;return(0,u.Z)({root:["root",e&&"disabled",t&&"error",o&&"focused",!!a&&"formControl",r&&"multiline",!!s&&"adornedStart",!!l&&"adornedEnd"],input:["input",e&&"disabled",r&&"multiline"]},(0,c.T)(i.l))},h=r.forwardRef(function(n,e){var t,r,i,u=n["aria-describedby"],c=n["aria-label"],h=n["aria-labelledby"],x=n.autoComplete,g=n.autoFocus,b=n.className,y=n.defaultValue,v=n.disabled,k=n.endAdornment,w=n.error,I=n.id,C=n.multiline,D=void 0!==C&&C,F=n.name,B=n.onClick,E=n.onChange,A=n.onKeyDown,T=n.onKeyUp,M=n.onFocus,P=n.onBlur,R=n.placeholder,j=n.readOnly,S=n.required,Z=n.startAdornment,$=n.value,z=n.type,H=n.rows,O=n.slotProps,L=void 0===O?{}:O,V=n.slots,_=void 0===V?{}:V,U=n.minRows,N=n.maxRows,K=(0,a.Z)(n,m),q=(0,l.G)({disabled:v,defaultValue:y,error:w,onBlur:P,onClick:B,onChange:E,onFocus:M,required:S,value:$}),W=q.getRootProps,G=q.getInputProps,J=q.focused,X=q.formControlContext,Y=q.error,Q=q.disabled,nn=D?void 0:null!=z?z:"text",ne=(0,o.Z)((0,o.Z)({},n),{},{disabled:Q,error:Y,focused:J,formControlContext:X,multiline:D,type:nn}),nt=f(ne),no={"aria-describedby":u,"aria-label":c,"aria-labelledby":h,autoComplete:x,autoFocus:g,id:I,onKeyDown:A,onKeyUp:T,name:F,placeholder:R,readOnly:j,type:nn},na=null!==(t=_.root)&&void 0!==t?t:"div",nr=(0,p.y)({elementType:na,getSlotProps:W,externalSlotProps:L.root,externalForwardedProps:K,additionalProps:{ref:e},ownerState:ne,className:[nt.root,b]}),ns=D?null!==(r=_.textarea)&&void 0!==r?r:"textarea":null!==(i=_.input)&&void 0!==i?i:"input",ni=(0,p.y)({elementType:ns,getSlotProps:function(n){return G((0,o.Z)((0,o.Z)({},no),n))},externalSlotProps:L.input,additionalProps:(0,o.Z)({rows:D?H:void 0},D&&!(0,s.X)(ns)&&{minRows:H||U,maxRows:H||N}),ownerState:ne,className:nt.input});return(0,d.jsxs)(na,(0,o.Z)((0,o.Z)({},nr),{},{children:[Z,(0,d.jsx)(ns,(0,o.Z)({},ni)),k]}))})},522013:function(n,e,t){"use strict";t.r(e),t.d(e,{Input:function(){return o.I},getInputUtilityClass:function(){return a.l},inputClasses:function(){return a.N}});var o=t(418887),a=t(748077)},748077:function(n,e,t){"use strict";t.d(e,{N:function(){return i},l:function(){return s}});var o=t(687740),a=t(182326),r="Input";function s(n){return(0,o.d)(r,n)}var i=(0,a.s)(r,["root","formControl","focused","disabled","error","multiline","input","inputMultiline","inputTypeSearch","adornedStart","adornedEnd"])},472924:function(n,e,t){"use strict";t.r(e),t.d(e,{TextareaAutosize:function(){return o.u}});var o=t(830612)},562817:function(n,e,t){"use strict";t.r(e),t.d(e,{useInput:function(){return o.G}});var o=t(672330)},672330:function(n,e,t){"use strict";t.d(e,{G:function(){return u}});var o=t(778521),a=t(863363),r=t(580840),s=t(470079),i=t(503945),l=t(185403),p=t(202294);function u(){var n,e,t,u,c,d,m,f,h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},x=h.defaultValue,g=h.disabled,b=h.error,y=h.onBlur,v=h.onChange,k=h.onFocus,w=h.required,I=h.value,C=h.inputRef,D=(0,l.N)();D?(n=void 0,e=null!==(d=D.disabled)&&void 0!==d&&d,t=null!==(m=D.error)&&void 0!==m&&m,u=null!==(f=D.required)&&void 0!==f&&f,c=D.value):(n=x,e=void 0!==g&&g,t=void 0!==b&&b,u=void 0!==w&&w,c=I);var F=s.useRef(null!=c).current,B=s.useCallback(function(n){},[]),E=s.useRef(null),A=(0,i.Z)(E,C,B),T=s.useState(!1),M=(0,a.Z)(T,2),P=M[0],R=M[1];return s.useEffect(function(){!D&&e&&P&&(R(!1),null==y||y())},[D,e,P,y]),{disabled:e,error:t,focused:P,formControlContext:D,getInputProps:function(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},s=(0,o.Z)((0,o.Z)({},{onBlur:y,onChange:v,onFocus:k}),(0,p._)(a)),i=(0,o.Z)((0,o.Z)({},s),{},{onBlur:function(n){var e;null===(e=s.onBlur)||void 0===e||e.call(s,n),D&&D.onBlur?D.onBlur():R(!1)},onChange:function(n){var e,t;if(!F&&null==(n.target||E.current))throw Error((0,r.Z)(17));null==D||null===(e=D.onChange)||void 0===e||e.call(D,n);for(var o=arguments.length,a=Array(o>1?o-1:0),i=1;i<o;i++)a[i-1]=arguments[i];null===(t=s.onChange)||void 0===t||t.call.apply(t,[s,n].concat(a))},onFocus:function(n){var e,t;if(null!=D&&D.disabled){n.stopPropagation();return}null===(e=s.onFocus)||void 0===e||e.call(s,n),D&&D.onFocus?null==D||null===(t=D.onFocus)||void 0===t||t.call(D):R(!0)}});return(0,o.Z)((0,o.Z)((0,o.Z)({},i),{},{"aria-invalid":t||void 0,defaultValue:n,value:c,required:u,disabled:e},a),{},{ref:A},i)},getRootProps:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=(0,p._)(h,["onBlur","onChange","onFocus"]),t=(0,o.Z)((0,o.Z)({},e),(0,p._)(n));return(0,o.Z)((0,o.Z)((0,o.Z)({},n),t),{},{onClick:function(n){var e;E.current&&n.currentTarget===n.target&&E.current.focus(),null===(e=t.onClick)||void 0===e||e.call(t,n)}})},inputRef:A,required:u,value:c}}},54286:function(n,e,t){"use strict";t.d(e,{Z:function(){return D}});var o,a,r,s,i,l,p=t(470079),u=t(432216),c=t(553093),d=t(388339),m=t(502894),f=t(632820),h=t(735250),x=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{fill:"#FDB300",d:"M5.24 2.7L12 2l6.76.7L24 9.48 12 23 0 9.49z"}),(0,h.jsx)("path",{fill:"#EA6C00",d:"M4.85 9l7.13 14L0 9zM19.1 9l-7.12 14L23.95 9z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M4.85 9H19.1l-7.12 14z"}),(0,h.jsxs)("g",{children:[(0,h.jsx)("path",{fill:"#FDD231",d:"M11.98 2l-6.75.65-.38 6.34zM11.98 2l6.75.65.37 6.34z"}),(0,h.jsx)("path",{fill:"#FDAD00",d:"M23.95 9l-5.22-6.35.37 6.34zM0 9l5.23-6.35-.38 6.34z"}),(0,h.jsx)("path",{fill:"#FEEEB7",d:"M11.98 2L4.85 9H19.1z"})]})]}),"Sketch"),g=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M8 24a4 4 0 004-4v-4H8a4 4 0 000 8z",fill:"#0ACF83"}),(0,h.jsx)("path",{d:"M4 12a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#A259FF"}),(0,h.jsx)("path",{d:"M4 4a4 4 0 014-4h4v8H8a4 4 0 01-4-4z",fill:"#F24E1E"}),(0,h.jsx)("path",{d:"M12 0h4a4 4 0 010 8h-4V0z",fill:"#FF7262"}),(0,h.jsx)("path",{d:"M20 12a4 4 0 11-8 0 4 4 0 018 0z",fill:"#1ABCFE"})]}),"Figma"),b=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M5.54 2h12.92C20.42 2 22 3.6 22 5.58v12.55a3.56 3.56 0 01-3.54 3.58H5.54A3.56 3.56 0 012 18.13V5.58A3.56 3.56 0 015.54 2z",fill:"#470137"}),(0,h.jsx)("path",{d:"M12.52 7.28L10 11.45l2.68 4.41c.01.04.02.07.01.1 0 .04-.04.01-.09.02H10.7c-.13 0-.22 0-.28-.1l-.54-1.04c-.17-.35-.36-.7-.57-1.06l-.6-1.1h-.02c-.17.36-.36.73-.56 1.09l-.57 1.07-.57 1.06c-.04.09-.1.1-.2.1H4.94c-.03 0-.06.01-.06-.03 0-.03 0-.07.02-.1l2.6-4.28-2.53-4.31c-.03-.04-.04-.07-.02-.09.02-.02.05-.03.09-.03h1.9a.5.5 0 01.11.01c.04.02.06.05.09.08.16.36.34.72.53 1.09l.6 1.06c.2.36.39.71.57 1.07h.01c.18-.37.36-.73.55-1.08.18-.36.37-.71.57-1.06l.56-1.06c0-.04.02-.07.05-.09.03-.01.06-.02.1-.01h1.77c.04-.01.09.01.1.06 0 0-.01.04-.03.05zM16.39 16.16c-.62 0-1.24-.12-1.8-.38a2.92 2.92 0 01-1.27-1.15 3.65 3.65 0 01-.46-1.91 3.46 3.46 0 011.8-3.08 4.27 4.27 0 012.29-.48c.07 0 .16 0 .26.02V6.52c0-.06.02-.1.08-.1H19c.04 0 .08.03.08.07v8.01l.02.51.03.49c0 .06-.02.11-.08.13a6.37 6.37 0 01-2.65.53zm.82-1.69v-3.7a2.11 2.11 0 00-1.45.16c-.29.15-.53.36-.71.63-.19.27-.28.63-.28 1.06 0 .3.04.6.14.87a1.44 1.44 0 00.95.93c.23.08.46.11.7.11a4.49 4.49 0 00.65-.06z",fill:"#FF61F6"})]}),"AdobeXD"),y=(0,f.Z)((0,h.jsxs)("g",{fill:"currentColor",fillRule:"nonzero",children:[(0,h.jsx)("path",{d:"M5.84 3c-.52 0-1 .25-1.3.67l-1.4 2.05c-.06.09-.1.19-.14.28h8V3H5.84zM20.86 5.72l-1.4-2.05c-.3-.42-.81-.67-1.33-.67H13v3h8c-.05-.1-.08-.2-.14-.28z",fillOpacity:".79"}),(0,h.jsx)("path",{d:"M20.98 7H3.02L3 7.11V19.4c0 .89.71 1.61 1.58 1.61h14.84A1.6 1.6 0 0021 19.4V7.1L20.98 7zm-6.87 5.36H9.89a1.6 1.6 0 01-1.58-1.61c0-.89.7-1.6 1.58-1.6h4.22c.87 0 1.58.71 1.58 1.6 0 .89-.7 1.6-1.58 1.6z",fillOpacity:".87"})]}),"BundleSize"),v=(0,f.Z)((0,h.jsxs)("g",{fillRule:"nonzero",fill:"none",children:[(0,h.jsx)("path",{d:"M6.92 6.1l2.33 7.99 2.32-8h6.3v.8l-2.37 4.14c.83.27 1.46.76 1.89 1.47.43.71.64 1.55.64 2.51 0 1.2-.31 2.2-.94 3a2.93 2.93 0 01-2.42 1.22 2.9 2.9 0 01-1.96-.72 4.25 4.25 0 01-1.23-1.96l1.31-.55c.2.5.45.9.76 1.18.32.28.69.43 1.12.43.44 0 .82-.26 1.13-.76.31-.51.47-1.12.47-1.84 0-.79-.17-1.4-.5-1.83-.38-.5-.99-.76-1.81-.76h-.64v-.78l2.24-3.92h-2.7l-.16.26-3.3 11.25h-.15l-2.4-8.14-2.41 8.14h-.16L.43 6.1H2.1l2.33 7.99L6 8.71 5.24 6.1h1.68z",fill:"#005A9C"}),(0,h.jsx)("g",{fill:"currentColor",children:(0,h.jsx)("path",{d:"M23.52 6.25l.28 1.62-.98 1.8s-.38-.76-1.01-1.19c-.53-.35-.87-.43-1.41-.33-.7.14-1.48.93-1.82 1.9-.41 1.18-.42 1.74-.43 2.26a4.9 4.9 0 00.11 1.33s-.6-1.06-.59-2.61c0-1.1.19-2.11.72-3.1.47-.87 1.17-1.4 1.8-1.45.63-.07 1.14.23 1.53.55.42.33.83 1.07.83 1.07l.97-1.85zM23.64 15.4s-.43.75-.7 1.04c-.27.28-.76.79-1.36 1.04-.6.25-.91.3-1.5.25a3.03 3.03 0 01-1.34-.52 5.08 5.08 0 01-1.67-2.04s.24.75.39 1.07c.09.18.36.74.74 1.23a3.5 3.5 0 002.1 1.42c1.04.18 1.76-.27 1.94-.38a5.32 5.32 0 001.4-1.43c.1-.14.25-.43.25-.43l-.25-1.25z"})})]}),"W3C"),k=(0,f.Z)((0,h.jsxs)("g",{fill:"none",fillRule:"evenodd",children:[(0,h.jsx)("circle",{fill:"#737373",cx:"12",cy:"12",r:"12"}),(0,h.jsx)("path",{fill:"#BDBDBD",d:"M4 4h16v16H4z"}),(0,h.jsx)("path",{fill:"#FFF",d:"M12 20l8-16H4z"})]}),"MaterialDesign"),w=t(871379),I=(0,m.ZP)("ul")({margin:0,padding:0,listStyle:"none",display:"flex",flexWrap:"wrap",gap:8,"& .MuiChip-root":{height:26,padding:"0 8px",gap:6,"& .MuiChip-label":{padding:0},"& .MuiChip-iconSmall":{margin:0,fontSize:14}}}),C={"material-ui":"@mui/material","joy-ui":"@mui/joy","base-ui":"@mui/base",system:"@mui/system"};function D(n){var e,t,m=n.markdown.headers,f=n.design,D=(0,w.qM)(),F=null!==(e=null!==(t=m.packageName)&&void 0!==t?t:C[m.productId])&&void 0!==e?e:"@mui/material";return(0,h.jsxs)(I,{children:[m.githubLabel?(0,h.jsx)("li",{children:(0,h.jsx)(u.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"".concat("https://github.com/mui/material-ui","/labels/").concat(encodeURIComponent(m.githubLabel)),icon:o||(o=(0,h.jsx)(d.default,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":D("githubLabel"),"data-ga-event-split":"0.1",label:D("githubLabel")})}):null,(0,h.jsx)("li",{children:(0,h.jsx)(c.Z,{title:D("bundleSizeTooltip"),describeChild:!0,children:(0,h.jsx)(u.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://bundlephobia.com/package/".concat(F,"@latest"),icon:a||(a=(0,h.jsx)(y,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":D("bundleSize"),"data-ga-event-split":"0.1",label:D("bundleSize")})})}),m.waiAria?(0,h.jsx)("li",{children:(0,h.jsx)(u.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:m.waiAria,icon:r||(r=(0,h.jsx)(v,{color:"primary"})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"WAI-ARIA","data-ga-event-split":"0.1",label:"WAI-ARIA"})}):null,m.materialDesign?(0,h.jsx)("li",{children:(0,h.jsx)(u.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:m.materialDesign,icon:s||(s=(0,h.jsx)(k,{})),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Material Design","data-ga-event-split":"0.1",label:"Material Design"})}):null,!1===f?null:(0,h.jsxs)(p.Fragment,{children:[i||(i=(0,h.jsx)("li",{children:(0,h.jsx)(u.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/figma-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(g,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Figma","data-ga-event-split":"0.1",label:"Figma"})})),"@mui/joy"===F?null:l||(l=(0,h.jsxs)(p.Fragment,{children:[(0,h.jsx)("li",{children:(0,h.jsx)(u.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/adobe-xd-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(b,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Adobe XD","data-ga-event-split":"0.1",label:"Adobe"})}),(0,h.jsx)("li",{children:(0,h.jsx)(u.Z,{clickable:!0,role:void 0,component:"a",size:"small",variant:"outlined",rel:"nofollow",href:"https://mui.com/store/items/sketch-react/?utm_source=docs&utm_medium=referral&utm_campaign=component-link-header",icon:(0,h.jsx)(x,{}),"data-ga-event-category":"ComponentLinkHeader","data-ga-event-action":"click","data-ga-event-label":"Sketch","data-ga-event-split":"0.1",label:"Sketch"})})]}))]})]})}},871272:function(n,e,t){"use strict";function o(n,e){return function(){return null}}t.r(e),t.d(e,{HTMLElementType:function(){return b},chainPropTypes:function(){return o},clamp:function(){return nt.Z},deepmerge:function(){return r.Z},elementAcceptingRef:function(){return u},elementTypeAcceptingRef:function(){return c},exactProp:function(){return d},formatMuiErrorMessage:function(){return m.Z},getDisplayName:function(){return g},getValidReactChildren:function(){return U.Z},globalStateClasses:function(){return Q._v},integerPropType:function(){return J},internal_resolveProps:function(){return X.Z},isGlobalState:function(){return Q.nF},isPlainObject:function(){return r.P},ponyfillGlobal:function(){return y.Z},refType:function(){return v.Z},unstable_ClassNameGenerator:function(){return ne.Z},unstable_Timeout:function(){return $.V},unstable_capitalize:function(){return k.Z},unstable_composeClasses:function(){return Y.Z},unstable_createChainedFunction:function(){return w.Z},unstable_debounce:function(){return I.Z},unstable_deprecatedPropType:function(){return C.Z},unstable_detectScrollType:function(){return L},unstable_generateUtilityClass:function(){return Q.ZP},unstable_generateUtilityClasses:function(){return nn.Z},unstable_getNormalizedScrollLeft:function(){return V},unstable_getScrollbarSize:function(){return O.Z},unstable_isGlobalState:function(){return Q.nF},unstable_isMuiElement:function(){return D.Z},unstable_ownerDocument:function(){return F.Z},unstable_ownerWindow:function(){return B.Z},unstable_requirePropFactory:function(){return E.Z},unstable_setRef:function(){return A.Z},unstable_unsupportedProp:function(){return P.Z},unstable_useControlled:function(){return R.Z},unstable_useEnhancedEffect:function(){return T.Z},unstable_useEventCallback:function(){return j.Z},unstable_useForkRef:function(){return S.Z},unstable_useId:function(){return M.Z},unstable_useIsFocusVisible:function(){return H.Z},unstable_useLazyRef:function(){return Z.Z},unstable_useOnMount:function(){return z.Z},unstable_useTimeout:function(){return $.Z},usePreviousProps:function(){return _.Z},visuallyHidden:function(){return N.Z}});var a,r=t(980658),s=t(639519),i=t.n(s);function l(n,e,t,o,a){var r,s,i=n[e];if(null==i)return null;var l=i.type;return"function"!=typeof l||(void 0===(r=l.prototype)?{}:r).isReactComponent||(s="Did you accidentally use a plain function component for an element instead?"),void 0!==s?Error("Invalid ".concat(o," `").concat(a||e,"` supplied to `").concat(t,"`. ")+"Expected an element that can hold a ref. ".concat(s," ")+"For more information see https://mui.com/r/caveat-with-refs-guide"):null}var p=o(i().element,l);p.isRequired=o(i().element.isRequired,l);var u=p,c=o(i().elementType,function(n,e,t,o,a){var r,s,i=n[e];return null==i?null:("function"!=typeof i||(void 0===(r=i.prototype)?{}:r).isReactComponent||(s="Did you accidentally provide a plain function component instead?"),void 0!==s?Error("Invalid ".concat(o," `").concat(a||e,"` supplied to `").concat(t,"`. ")+"Expected an element type that can hold a ref. ".concat(s," ")+"For more information see https://mui.com/r/caveat-with-refs-guide"):null)});function d(n){return n}t(234046),t(778521),t(436578);var m=t(580840),f=t(672037);function h(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return n.displayName||n.name||e}function x(n,e,t){var o=h(e);return n.displayName||(""!==o?"".concat(t,"(").concat(o,")"):t)}function g(n){if(null!=n){if("string"==typeof n)return n;if("function"==typeof n)return h(n,"Component");if("object"==typeof n)switch(n.$$typeof){case f.ForwardRef:return x(n,n.render,"ForwardRef");case f.Memo:return x(n,n.type,"memo")}}}function b(n,e,t,o,a){return null}var y=t(771108),v=t(195742),k=t(538941),w=t(346163),I=t(166730),C=t(581929),D=t(207534),F=t(100326),B=t(750328),E=t(254994),A=t(377686),T=t(140329),M=t(860973),P=t(204220),R=t(1104),j=t(8661),S=t(503945),Z=t(121953),$=t(53345),z=t(413392),H=t(14002),O=t(716503);function L(){if(a)return a;var n=document.createElement("div"),e=document.createElement("div");return e.style.width="10px",e.style.height="1px",n.appendChild(e),n.dir="rtl",n.style.fontSize="14px",n.style.width="4px",n.style.height="1px",n.style.position="absolute",n.style.top="-1000px",n.style.overflow="scroll",document.body.appendChild(n),a="reverse",n.scrollLeft>0?a="default":(n.scrollLeft=1,0===n.scrollLeft&&(a="negative")),document.body.removeChild(n),a}function V(n,e){var t=n.scrollLeft;if("rtl"!==e)return t;switch(L()){case"negative":return n.scrollWidth-n.clientWidth+t;case"reverse":return n.scrollWidth-n.clientWidth-t;default:return t}}var _=t(762550),U=t(753347),N=t(506926),K=t(410231),q=t(595996),W=t(508470);function G(){return null}G.isRequired=G;var J=G,X=t(674548),Y=t(306029),Q=t(92358),nn=t(344443),ne=t(387577),nt=t(325530)},195742:function(n,e,t){"use strict";var o=t(639519),a=t.n(o),r=a().oneOfType([a().func,a().object]);e.Z=r},506926:function(n,e){"use strict";e.Z={border:0,clip:"rect(0 0 0 0)",height:"1px",margin:"-1px",overflow:"hidden",padding:0,position:"absolute",whiteSpace:"nowrap",width:"1px"}},884835:function(n,e,t){"use strict";var o=t(311596);function a(){}function r(){}r.resetWarningCache=a,n.exports=function(){function n(n,e,t,a,r,s){if(s!==o){var i=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function e(){return n}n.isRequired=n;var t={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:e,element:n,elementType:n,instanceOf:e,node:n,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:r,resetWarningCache:a};return t.PropTypes=t,t}},639519:function(n,e,t){n.exports=t(884835)()},311596:function(n){"use strict";n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},388339:function(n,e,t){"use strict";var o=t(11234);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=o(t(122268)),r=t(735250);e.default=(0,a.default)((0,r.jsx)("path",{d:"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2M7 9h10c.55 0 1 .45 1 1s-.45 1-1 1H7c-.55 0-1-.45-1-1s.45-1 1-1m6 5H7c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1m4-6H7c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1"}),"ChatRounded")},987970:function(n,e,t){"use strict";var o=t(11234);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=o(t(122268)),r=t(735250);e.default=(0,a.default)((0,r.jsx)("path",{d:"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3"}),"Visibility")},827108:function(n,e,t){"use strict";var o=t(11234);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=o(t(122268)),r=t(735250);e.default=(0,a.default)((0,r.jsx)("path",{d:"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z"}),"VisibilityOff")},595996:function(n,e,t){n.exports=t(640048)}}]);